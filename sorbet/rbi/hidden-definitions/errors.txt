# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi hidden-definitions

# typed: autogenerated

# wrong constant name <DeclBuilderForProcs>
# wrong constant name <DeclBuilderForProcs>
# wrong constant name <Class:<DeclBuilderForProcs>>
# wrong constant name <Magic>
# wrong constant name <Magic>
# wrong constant name <Class:<Magic>>
# wrong constant name <RESERVED_0>
# wrong constant name <RESERVED_100>
# wrong constant name <RESERVED_101>
# wrong constant name <RESERVED_102>
# wrong constant name <RESERVED_103>
# wrong constant name <RESERVED_104>
# wrong constant name <RESERVED_105>
# wrong constant name <RESERVED_106>
# wrong constant name <RESERVED_107>
# wrong constant name <RESERVED_108>
# wrong constant name <RESERVED_109>
# wrong constant name <RESERVED_10>
# wrong constant name <RESERVED_11>
# wrong constant name <RESERVED_12>
# wrong constant name <RESERVED_13>
# wrong constant name <RESERVED_14>
# wrong constant name <RESERVED_15>
# wrong constant name <RESERVED_16>
# wrong constant name <RESERVED_17>
# wrong constant name <RESERVED_18>
# wrong constant name <RESERVED_19>
# wrong constant name <RESERVED_1>
# wrong constant name <RESERVED_20>
# wrong constant name <RESERVED_21>
# wrong constant name <RESERVED_22>
# wrong constant name <RESERVED_23>
# wrong constant name <RESERVED_24>
# wrong constant name <RESERVED_25>
# wrong constant name <RESERVED_26>
# wrong constant name <RESERVED_27>
# wrong constant name <RESERVED_28>
# wrong constant name <RESERVED_29>
# wrong constant name <RESERVED_2>
# wrong constant name <RESERVED_30>
# wrong constant name <RESERVED_31>
# wrong constant name <RESERVED_32>
# wrong constant name <RESERVED_33>
# wrong constant name <RESERVED_34>
# wrong constant name <RESERVED_35>
# wrong constant name <RESERVED_36>
# wrong constant name <RESERVED_37>
# wrong constant name <RESERVED_38>
# wrong constant name <RESERVED_39>
# wrong constant name <RESERVED_3>
# wrong constant name <RESERVED_40>
# wrong constant name <RESERVED_41>
# wrong constant name <RESERVED_42>
# wrong constant name <RESERVED_43>
# wrong constant name <RESERVED_44>
# wrong constant name <RESERVED_45>
# wrong constant name <RESERVED_46>
# wrong constant name <RESERVED_47>
# wrong constant name <RESERVED_48>
# wrong constant name <RESERVED_49>
# wrong constant name <RESERVED_4>
# wrong constant name <RESERVED_50>
# wrong constant name <RESERVED_51>
# wrong constant name <RESERVED_52>
# wrong constant name <RESERVED_53>
# wrong constant name <RESERVED_54>
# wrong constant name <RESERVED_55>
# wrong constant name <RESERVED_56>
# wrong constant name <RESERVED_57>
# wrong constant name <RESERVED_58>
# wrong constant name <RESERVED_59>
# wrong constant name <RESERVED_5>
# wrong constant name <RESERVED_60>
# wrong constant name <RESERVED_61>
# wrong constant name <RESERVED_62>
# wrong constant name <RESERVED_63>
# wrong constant name <RESERVED_64>
# wrong constant name <RESERVED_65>
# wrong constant name <RESERVED_66>
# wrong constant name <RESERVED_67>
# wrong constant name <RESERVED_68>
# wrong constant name <RESERVED_69>
# wrong constant name <RESERVED_6>
# wrong constant name <RESERVED_70>
# wrong constant name <RESERVED_71>
# wrong constant name <RESERVED_72>
# wrong constant name <RESERVED_73>
# wrong constant name <RESERVED_74>
# wrong constant name <RESERVED_75>
# wrong constant name <RESERVED_76>
# wrong constant name <RESERVED_77>
# wrong constant name <RESERVED_78>
# wrong constant name <RESERVED_79>
# wrong constant name <RESERVED_7>
# wrong constant name <RESERVED_80>
# wrong constant name <RESERVED_81>
# wrong constant name <RESERVED_82>
# wrong constant name <RESERVED_83>
# wrong constant name <RESERVED_84>
# wrong constant name <RESERVED_85>
# wrong constant name <RESERVED_86>
# wrong constant name <RESERVED_87>
# wrong constant name <RESERVED_88>
# wrong constant name <RESERVED_89>
# wrong constant name <RESERVED_8>
# wrong constant name <RESERVED_90>
# wrong constant name <RESERVED_91>
# wrong constant name <RESERVED_92>
# wrong constant name <RESERVED_93>
# wrong constant name <RESERVED_94>
# wrong constant name <RESERVED_95>
# wrong constant name <RESERVED_96>
# wrong constant name <RESERVED_97>
# wrong constant name <RESERVED_98>
# wrong constant name <RESERVED_99>
# wrong constant name <RESERVED_9>
# wrong constant name <TypeAlias>
# wrong constant name <TypeAlias>
# wrong constant name <any>
# wrong constant name <any>
# wrong constant name <root>
# wrong constant name <Class:<root>>
# wrong constant name <todo sym>
# wrong constant name <todo sym>
# wrong constant name <Class:Node>
# wrong constant name <Class:Processor>
# wrong constant name <Class:Sexp>
# undefined method `initialize<defaultArg>1' for class `AST::Node'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `AST::Node'
# Did you mean?  initialize_dup
# undefined method `inspect<defaultArg>1' for class `AST::Node'
# undefined method `to_s<defaultArg>1' for class `AST::Node'
# undefined method `to_sexp<defaultArg>1' for class `AST::Node'
# undefined method `updated<defaultArg>1' for class `AST::Node'
# undefined method `updated<defaultArg>2' for class `AST::Node'
# undefined method `updated<defaultArg>3' for class `AST::Node'
# wrong constant name +
# wrong constant name <<
# wrong constant name ==
# wrong constant name append
# wrong constant name assign_properties
# wrong constant name children
# wrong constant name clone
# wrong constant name concat
# wrong constant name eql?
# wrong constant name fancy_type
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name inspect<defaultArg>1
# wrong constant name inspect
# wrong constant name to_a
# wrong constant name to_ast
# wrong constant name to_s<defaultArg>1
# wrong constant name to_s
# wrong constant name to_sexp<defaultArg>1
# wrong constant name to_sexp
# wrong constant name to_sexp_array
# wrong constant name type
# wrong constant name updated<defaultArg>1
# wrong constant name updated<defaultArg>2
# wrong constant name updated<defaultArg>3
# wrong constant name updated
# wrong constant name <static-init>
# wrong constant name <Class:Mixin>
# wrong constant name handler_missing
# wrong constant name process
# wrong constant name process_all
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name s
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant Abbrev
# uninitialized constant Abbrev
# undefined method `connect_internal<defaultArg>1' for class `Addrinfo'
# wrong constant name connect_internal<defaultArg>1
# wrong constant name connect_internal
# wrong constant name bsearch
# wrong constant name bsearch_index
# wrong constant name collect!
# wrong constant name dig
# wrong constant name flatten!
# wrong constant name pack
# wrong constant name place
# wrong constant name replace
# wrong constant name replace_each_string
# wrong constant name shelljoin
# wrong constant name to_h
# wrong constant name try_convert
# wrong constant name <Class:BasicObject>
# wrong constant name clone
# wrong constant name new
# wrong constant name clone
# wrong constant name irb
# undefined singleton method `report<defaultArg>1' for `Bundler::Env'
# wrong constant name <static-init>
# wrong constant name environment
# wrong constant name report<defaultArg>1
# wrong constant name report
# wrong constant name write
# wrong constant name github_https?
# wrong constant name <Class:Base>
# wrong constant name <Class:CompactIndex>
# wrong constant name <Class:Dependency>
# wrong constant name <Class:Downloader>
# wrong constant name <Class:Index>
# wrong constant name fetch_spec
# wrong constant name fetchers
# wrong constant name http_proxy
# wrong constant name initialize
# wrong constant name specs
# wrong constant name specs_with_retry
# wrong constant name uri
# wrong constant name use_api
# wrong constant name user_agent
# wrong constant name initialize
# wrong constant name initialize
# wrong constant name api_fetcher?
# wrong constant name available?
# wrong constant name display_uri
# wrong constant name downloader
# wrong constant name fetch_uri
# wrong constant name initialize
# wrong constant name remote
# wrong constant name remote_uri
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <Class:ClientFetcher>
# wrong constant name available?
# wrong constant name fetch_spec
# wrong constant name specs
# wrong constant name specs_for_names
# uninitialized constant Bundler::Fetcher::CompactIndex::ClientFetcher::Elem
# wrong constant name call
# wrong constant name fetcher
# wrong constant name fetcher=
# wrong constant name ui
# wrong constant name ui=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# wrong constant name compact_index_request
# undefined method `dependency_api_uri<defaultArg>1' for class `Bundler::Fetcher::Dependency'
# undefined method `specs<defaultArg>1' for class `Bundler::Fetcher::Dependency'
# undefined method `specs<defaultArg>2' for class `Bundler::Fetcher::Dependency'
# wrong constant name dependency_api_uri<defaultArg>1
# wrong constant name dependency_api_uri
# wrong constant name dependency_specs
# wrong constant name get_formatted_specs_and_deps
# wrong constant name specs<defaultArg>1
# wrong constant name specs<defaultArg>2
# wrong constant name specs
# wrong constant name unmarshalled_dep_gems
# wrong constant name <static-init>
# undefined method `fetch<defaultArg>1' for class `Bundler::Fetcher::Downloader'
# undefined method `fetch<defaultArg>2' for class `Bundler::Fetcher::Downloader'
# wrong constant name connection
# wrong constant name fetch<defaultArg>1
# wrong constant name fetch<defaultArg>2
# wrong constant name fetch
# wrong constant name initialize
# wrong constant name redirect_limit
# wrong constant name request
# wrong constant name <static-init>
# wrong constant name fetch_spec
# wrong constant name specs
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Bundler::Fetcher::SSLError'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name api_timeout
# wrong constant name api_timeout=
# wrong constant name disable_endpoint
# wrong constant name disable_endpoint=
# wrong constant name max_retries
# wrong constant name max_retries=
# wrong constant name redirect_limit
# wrong constant name redirect_limit=
# undefined method `git_push<defaultArg>1' for class `Bundler::GemHelper'
# undefined method `initialize<defaultArg>1' for class `Bundler::GemHelper'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Bundler::GemHelper'
# Did you mean?  initialize_dup
# undefined method `install_gem<defaultArg>1' for class `Bundler::GemHelper'
# undefined method `install_gem<defaultArg>2' for class `Bundler::GemHelper'
# undefined method `perform_git_push<defaultArg>1' for class `Bundler::GemHelper'
# wrong constant name allowed_push_host
# wrong constant name already_tagged?
# wrong constant name base
# wrong constant name build_gem
# wrong constant name built_gem_path
# wrong constant name clean?
# wrong constant name committed?
# wrong constant name gem_key
# wrong constant name gem_push?
# wrong constant name gem_push_host
# wrong constant name gemspec
# wrong constant name git_push<defaultArg>1
# wrong constant name git_push
# wrong constant name guard_clean
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name install
# wrong constant name install_gem<defaultArg>1
# wrong constant name install_gem<defaultArg>2
# wrong constant name install_gem
# wrong constant name name
# wrong constant name perform_git_push<defaultArg>1
# wrong constant name perform_git_push
# wrong constant name rubygem_push
# wrong constant name sh
# wrong constant name sh_with_code
# wrong constant name spec_path
# wrong constant name tag_version
# wrong constant name version
# wrong constant name version_tag
# undefined singleton method `install_tasks<defaultArg>1' for `Bundler::GemHelper'
# wrong constant name <static-init>
# wrong constant name gemspec
# wrong constant name install_tasks<defaultArg>1
# wrong constant name install_tasks
# wrong constant name instance
# wrong constant name instance=
# uninitialized constant Bundler::GemRemoteFetcher::BASE64_URI_TRANSLATE
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Bundler::GemVersionPromoter'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Bundler::GemVersionPromoter'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name level
# wrong constant name level=
# wrong constant name locked_specs
# wrong constant name major?
# wrong constant name minor?
# wrong constant name prerelease_specified
# wrong constant name prerelease_specified=
# wrong constant name sort_versions
# wrong constant name strict
# wrong constant name strict=
# wrong constant name unlock_gems
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Bundler::Graph'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Bundler::Graph'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Bundler::Graph'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Bundler::Graph'
# Did you mean?  initialize_dup
# wrong constant name <Class:GraphVizClient>
# wrong constant name edge_options
# wrong constant name groups
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize
# wrong constant name node_options
# wrong constant name output_file
# wrong constant name output_format
# wrong constant name relations
# wrong constant name viz
# wrong constant name g
# wrong constant name initialize
# wrong constant name run
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant Bundler::Index::Elem
# undefined method `initialize<defaultArg>1' for class `Bundler::Injector'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name inject
# wrong constant name remove
# undefined singleton method `inject<defaultArg>1' for `Bundler::Injector'
# undefined singleton method `remove<defaultArg>1' for `Bundler::Injector'
# wrong constant name <static-init>
# wrong constant name inject<defaultArg>1
# wrong constant name inject
# wrong constant name remove<defaultArg>1
# wrong constant name remove
# undefined method `generate_bundler_executable_stubs<defaultArg>1' for class `Bundler::Installer'
# wrong constant name generate_bundler_executable_stubs<defaultArg>1
# wrong constant name generate_bundler_executable_stubs
# wrong constant name generate_standalone_bundler_executable_stubs
# wrong constant name initialize
# wrong constant name post_install_messages
# wrong constant name run
# undefined singleton method `install<defaultArg>1' for `Bundler::Installer'
# wrong constant name <static-init>
# wrong constant name ambiguous_gems
# wrong constant name ambiguous_gems=
# wrong constant name install<defaultArg>1
# wrong constant name install
# uninitialized constant Bundler::Molinillo::DependencyGraph::Elem
# uninitialized constant Bundler::Molinillo::DependencyGraph::Log::Elem
# undefined method `app_cache_path<defaultArg>1' for module `Bundler::Plugin::API::Source'
# undefined method `cache<defaultArg>1' for module `Bundler::Plugin::API::Source'
# undefined method `post_install<defaultArg>1' for module `Bundler::Plugin::API::Source'
# wrong constant name ==
# wrong constant name app_cache_dirname
# wrong constant name app_cache_path<defaultArg>1
# wrong constant name app_cache_path
# wrong constant name bundler_plugin_api_source?
# wrong constant name cache<defaultArg>1
# wrong constant name cache
# wrong constant name cached!
# wrong constant name can_lock?
# wrong constant name dependency_names
# wrong constant name dependency_names=
# wrong constant name double_check_for
# wrong constant name eql?
# wrong constant name fetch_gemspec_files
# wrong constant name gem_install_dir
# wrong constant name hash
# wrong constant name include?
# wrong constant name initialize
# wrong constant name install
# wrong constant name install_path
# wrong constant name installed?
# wrong constant name name
# wrong constant name options
# wrong constant name options_to_lock
# wrong constant name post_install<defaultArg>1
# wrong constant name post_install
# wrong constant name remote!
# wrong constant name root
# wrong constant name specs
# wrong constant name to_lock
# wrong constant name to_s
# wrong constant name unlock!
# wrong constant name unmet_deps
# wrong constant name uri
# wrong constant name uri_hash
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <Class:Git>
# wrong constant name <Class:Rubygems>
# wrong constant name install
# wrong constant name install_definition
# undefined method `generate_bin<defaultArg>1' for class `Bundler::Plugin::Installer::Git'
# uninitialized constant Bundler::Plugin::Installer::Git::DEFAULT_GLOB
# wrong constant name generate_bin<defaultArg>1
# wrong constant name generate_bin
# wrong constant name <static-init>
# uninitialized constant Bundler::Plugin::Installer::Rubygems::API_REQUEST_LIMIT
# Did you mean?  Bundler::Plugin::Installer::Rubygems::API_REQUEST_SIZE
# uninitialized constant Bundler::Plugin::Installer::Rubygems::API_REQUEST_SIZE
# Did you mean?  Bundler::Plugin::Installer::Rubygems::API_REQUEST_LIMIT
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined singleton method `lock<defaultArg>1' for `Bundler::ProcessLock'
# wrong constant name <static-init>
# wrong constant name lock<defaultArg>1
# wrong constant name lock
# undefined method `initialize<defaultArg>1' for class `Bundler::Retry'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Bundler::Retry'
# Did you mean?  initialize_dup
# wrong constant name attempt
# wrong constant name attempts
# wrong constant name current_run
# wrong constant name current_run=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name name
# wrong constant name name=
# wrong constant name total_runs
# wrong constant name total_runs=
# wrong constant name <static-init>
# wrong constant name attempts
# wrong constant name default_attempts
# wrong constant name default_retries
# undefined method `initialize<defaultArg>1' for class `Bundler::RubyGemsGemInstaller'
# Did you mean?  initialize_dup
# uninitialized constant Bundler::RubyGemsGemInstaller::ENV_PATHS
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Bundler::Settings::Mirror'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Bundler::Settings::Mirror'
# Did you mean?  initialize_dup
# undefined method `validate!<defaultArg>1' for class `Bundler::Settings::Mirror'
# wrong constant name ==
# wrong constant name fallback_timeout
# wrong constant name fallback_timeout=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name uri
# wrong constant name uri=
# wrong constant name valid?
# wrong constant name validate!<defaultArg>1
# wrong constant name validate!
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Bundler::Settings::Mirrors'
# Did you mean?  initialize_dup
# wrong constant name each
# wrong constant name for
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name parse
# wrong constant name <static-init>
# wrong constant name <Class:Rule>
# wrong constant name description
# wrong constant name fail!
# wrong constant name initialize
# wrong constant name k
# wrong constant name set
# wrong constant name validate!
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name validate!
# uninitialized constant Bundler::SpecSet::Elem
# undefined method `confirm<defaultArg>1' for class `Bundler::UI::Shell'
# undefined method `debug<defaultArg>1' for class `Bundler::UI::Shell'
# undefined method `error<defaultArg>1' for class `Bundler::UI::Shell'
# undefined method `info<defaultArg>1' for class `Bundler::UI::Shell'
# undefined method `initialize<defaultArg>1' for class `Bundler::UI::Shell'
# Did you mean?  initialize_dup
# undefined method `level<defaultArg>1' for class `Bundler::UI::Shell'
# undefined method `trace<defaultArg>1' for class `Bundler::UI::Shell'
# undefined method `trace<defaultArg>2' for class `Bundler::UI::Shell'
# undefined method `warn<defaultArg>1' for class `Bundler::UI::Shell'
# wrong constant name add_color
# wrong constant name ask
# wrong constant name confirm<defaultArg>1
# wrong constant name confirm
# wrong constant name debug<defaultArg>1
# wrong constant name debug
# wrong constant name debug?
# wrong constant name error<defaultArg>1
# wrong constant name error
# wrong constant name info<defaultArg>1
# wrong constant name info
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name level<defaultArg>1
# wrong constant name level
# wrong constant name level=
# wrong constant name no?
# wrong constant name quiet?
# wrong constant name shell=
# wrong constant name silence
# wrong constant name trace<defaultArg>1
# wrong constant name trace<defaultArg>2
# wrong constant name trace
# wrong constant name unprinted_warnings
# wrong constant name warn<defaultArg>1
# wrong constant name warn
# wrong constant name yes?
# wrong constant name <static-init>
# wrong constant name <Class:NEq>
# wrong constant name <Class:ReqR>
# uninitialized constant Bundler::VersionRanges::NEq::Elem
# wrong constant name version
# wrong constant name version=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# uninitialized constant Bundler::VersionRanges::ReqR::Elem
# wrong constant name <Class:Endpoint>
# wrong constant name cover?
# wrong constant name empty?
# wrong constant name left
# wrong constant name left=
# wrong constant name right
# wrong constant name right=
# wrong constant name single?
# uninitialized constant Bundler::VersionRanges::ReqR::Endpoint::Elem
# wrong constant name inclusive
# wrong constant name inclusive=
# wrong constant name version
# wrong constant name version=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# wrong constant name empty?
# wrong constant name for
# wrong constant name for_many
# undefined method `a<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `base<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `blockquote<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `caption<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `checkbox<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `checkbox<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `checkbox<defaultArg>3' for module `CGI::HtmlExtension'
# undefined method `checkbox_group<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `file_field<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `file_field<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `file_field<defaultArg>3' for module `CGI::HtmlExtension'
# undefined method `form<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `form<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `form<defaultArg>3' for module `CGI::HtmlExtension'
# undefined method `hidden<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `hidden<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `html<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `image_button<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `image_button<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `image_button<defaultArg>3' for module `CGI::HtmlExtension'
# undefined method `img<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `img<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `img<defaultArg>3' for module `CGI::HtmlExtension'
# undefined method `img<defaultArg>4' for module `CGI::HtmlExtension'
# undefined method `multipart_form<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `multipart_form<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `password_field<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `password_field<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `password_field<defaultArg>3' for module `CGI::HtmlExtension'
# undefined method `password_field<defaultArg>4' for module `CGI::HtmlExtension'
# undefined method `popup_menu<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `radio_button<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `radio_button<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `radio_button<defaultArg>3' for module `CGI::HtmlExtension'
# undefined method `radio_group<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `reset<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `reset<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `scrolling_list<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `submit<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `submit<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `text_field<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `text_field<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `text_field<defaultArg>3' for module `CGI::HtmlExtension'
# undefined method `text_field<defaultArg>4' for module `CGI::HtmlExtension'
# undefined method `textarea<defaultArg>1' for module `CGI::HtmlExtension'
# undefined method `textarea<defaultArg>2' for module `CGI::HtmlExtension'
# undefined method `textarea<defaultArg>3' for module `CGI::HtmlExtension'
# wrong constant name a<defaultArg>1
# wrong constant name a
# wrong constant name base<defaultArg>1
# wrong constant name base
# wrong constant name blockquote<defaultArg>1
# wrong constant name blockquote
# wrong constant name caption<defaultArg>1
# wrong constant name caption
# wrong constant name checkbox<defaultArg>1
# wrong constant name checkbox<defaultArg>2
# wrong constant name checkbox<defaultArg>3
# wrong constant name checkbox
# wrong constant name checkbox_group<defaultArg>1
# wrong constant name checkbox_group
# wrong constant name file_field<defaultArg>1
# wrong constant name file_field<defaultArg>2
# wrong constant name file_field<defaultArg>3
# wrong constant name file_field
# wrong constant name form<defaultArg>1
# wrong constant name form<defaultArg>2
# wrong constant name form<defaultArg>3
# wrong constant name form
# wrong constant name hidden<defaultArg>1
# wrong constant name hidden<defaultArg>2
# wrong constant name hidden
# wrong constant name html<defaultArg>1
# wrong constant name html
# wrong constant name image_button<defaultArg>1
# wrong constant name image_button<defaultArg>2
# wrong constant name image_button<defaultArg>3
# wrong constant name image_button
# wrong constant name img<defaultArg>1
# wrong constant name img<defaultArg>2
# wrong constant name img<defaultArg>3
# wrong constant name img<defaultArg>4
# wrong constant name img
# wrong constant name multipart_form<defaultArg>1
# wrong constant name multipart_form<defaultArg>2
# wrong constant name multipart_form
# wrong constant name password_field<defaultArg>1
# wrong constant name password_field<defaultArg>2
# wrong constant name password_field<defaultArg>3
# wrong constant name password_field<defaultArg>4
# wrong constant name password_field
# wrong constant name popup_menu<defaultArg>1
# wrong constant name popup_menu
# wrong constant name radio_button<defaultArg>1
# wrong constant name radio_button<defaultArg>2
# wrong constant name radio_button<defaultArg>3
# wrong constant name radio_button
# wrong constant name radio_group<defaultArg>1
# wrong constant name radio_group
# wrong constant name reset<defaultArg>1
# wrong constant name reset<defaultArg>2
# wrong constant name reset
# wrong constant name scrolling_list<defaultArg>1
# wrong constant name scrolling_list
# wrong constant name submit<defaultArg>1
# wrong constant name submit<defaultArg>2
# wrong constant name submit
# wrong constant name text_field<defaultArg>1
# wrong constant name text_field<defaultArg>2
# wrong constant name text_field<defaultArg>3
# wrong constant name text_field<defaultArg>4
# wrong constant name text_field
# wrong constant name textarea<defaultArg>1
# wrong constant name textarea<defaultArg>2
# wrong constant name textarea<defaultArg>3
# wrong constant name textarea
# wrong constant name <static-init>
# uninitialized constant CSV
# uninitialized constant CSV
# uninitialized constant Chalk
# uninitialized constant Chalk
# wrong constant name json_creatable?
# wrong constant name polar
# wrong constant name rect
# wrong constant name rectangular
# uninitialized constant Configatron
# uninitialized constant Configatron
# uninitialized constant Coverage
# uninitialized constant Coverage
# undefined method `initialize<defaultArg>1' for class `Date::Infinity'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# undefined method `methods<defaultArg>1' for class `Delegator'
# undefined method `protected_methods<defaultArg>1' for class `Delegator'
# Did you mean?  protected_methods
# undefined method `public_methods<defaultArg>1' for class `Delegator'
# Did you mean?  public_methods
# wrong constant name !=
# wrong constant name ==
# wrong constant name __getobj__
# wrong constant name __setobj__
# wrong constant name eql?
# wrong constant name initialize
# wrong constant name marshal_dump
# wrong constant name marshal_load
# wrong constant name method_missing
# wrong constant name methods<defaultArg>1
# wrong constant name methods
# wrong constant name protected_methods<defaultArg>1
# wrong constant name protected_methods
# wrong constant name public_methods<defaultArg>1
# wrong constant name public_methods
# wrong constant name const_missing
# wrong constant name delegating_block
# wrong constant name public_api
# wrong constant name class_name
# wrong constant name class_names
# wrong constant name corrections
# wrong constant name initialize
# wrong constant name scopes
# wrong constant name corrections
# wrong constant name original_message
# wrong constant name spell_checker
# wrong constant name to_s
# uninitialized constant DidYouMean::Formatter
# uninitialized constant DidYouMean::Formatter
# wrong constant name distance
# wrong constant name distance
# wrong constant name corrections
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name distance
# wrong constant name min3
# wrong constant name corrections
# wrong constant name initialize
# wrong constant name method_name
# wrong constant name method_names
# wrong constant name receiver
# wrong constant name corrections
# wrong constant name initialize
# wrong constant name message_for
# wrong constant name <static-init>
# wrong constant name corrections
# wrong constant name cvar_names
# wrong constant name initialize
# wrong constant name ivar_names
# wrong constant name lvar_names
# wrong constant name method_names
# wrong constant name name
# wrong constant name formatter
# wrong constant name formatter=
# wrong constant name children
# wrong constant name each_child
# undefined singleton method `mktmpdir<defaultArg>1' for `Dir'
# wrong constant name children
# wrong constant name each_child
# wrong constant name empty?
# wrong constant name exists?
# wrong constant name mktmpdir<defaultArg>1
# wrong constant name tmpdir
# undefined method `def_method<defaultArg>1' for class `ERB'
# undefined method `def_module<defaultArg>1' for class `ERB'
# undefined method `initialize<defaultArg>4' for class `ERB'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>5' for class `ERB'
# Did you mean?  initialize_dup
# wrong constant name def_method<defaultArg>1
# wrong constant name def_method
# wrong constant name def_module<defaultArg>1
# wrong constant name def_module
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize<defaultArg>5
# wrong constant name result_with_hash
# wrong constant name _dump
# wrong constant name convert
# wrong constant name convpath
# wrong constant name destination_encoding
# wrong constant name finish
# wrong constant name initialize
# wrong constant name insert_output
# wrong constant name last_error
# wrong constant name primitive_convert
# wrong constant name primitive_errinfo
# wrong constant name putback
# wrong constant name replacement
# wrong constant name replacement=
# wrong constant name source_encoding
# wrong constant name asciicompat_encoding
# wrong constant name search_convpath
# wrong constant name destination_encoding
# wrong constant name destination_encoding_name
# wrong constant name error_bytes
# wrong constant name incomplete_input?
# wrong constant name readagain_bytes
# wrong constant name source_encoding
# wrong constant name source_encoding_name
# wrong constant name destination_encoding
# wrong constant name destination_encoding_name
# wrong constant name error_char
# wrong constant name source_encoding
# wrong constant name source_encoding_name
# wrong constant name _load
# wrong constant name locale_charmap
# undefined method `to_set<defaultArg>1' for module `Enumerable'
# wrong constant name chain
# wrong constant name chunk
# wrong constant name chunk_while
# wrong constant name each_entry
# wrong constant name grep_v
# wrong constant name slice_after
# wrong constant name slice_before
# wrong constant name slice_when
# wrong constant name sum
# wrong constant name to_set<defaultArg>1
# wrong constant name to_set
# wrong constant name uniq
# wrong constant name +
# wrong constant name <Class:ArithmeticSequence>
# wrong constant name <Class:Chain>
# wrong constant name each_with_index
# uninitialized constant Enumerator::ArithmeticSequence::Elem
# wrong constant name begin
# wrong constant name each
# wrong constant name end
# wrong constant name exclude_end?
# wrong constant name last
# wrong constant name step
# wrong constant name <static-init>
# uninitialized constant Enumerator::Chain::Elem
# wrong constant name <static-init>
# wrong constant name each
# wrong constant name initialize
# wrong constant name chunk
# wrong constant name chunk_while
# wrong constant name force
# wrong constant name slice_when
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name gid
# wrong constant name gid=
# wrong constant name mem
# wrong constant name mem=
# wrong constant name name
# wrong constant name name=
# wrong constant name passwd
# wrong constant name passwd=
# wrong constant name []
# wrong constant name each
# wrong constant name members
# wrong constant name <Class:Group>
# wrong constant name change
# wrong constant name change=
# wrong constant name dir=
# wrong constant name expire
# wrong constant name expire=
# wrong constant name gecos
# wrong constant name gecos=
# wrong constant name gid=
# wrong constant name name=
# wrong constant name passwd=
# wrong constant name shell=
# wrong constant name uclass
# wrong constant name uclass=
# wrong constant name uid=
# wrong constant name []
# wrong constant name each
# wrong constant name members
# wrong constant name <Class:Passwd>
# wrong constant name full_message
# wrong constant name exception
# wrong constant name to_tty?
# wrong constant name <static-init>
# wrong constant name resume
# wrong constant name yield
# wrong constant name size?
# undefined singleton method `cleanpath<defaultArg>1' for `File'
# wrong constant name cleanpath<defaultArg>1
# wrong constant name cleanpath
# wrong constant name empty?
# wrong constant name exists?
# wrong constant name lutime
# wrong constant name mkfifo
# wrong constant name open!
# wrong constant name read_binary
# wrong constant name relative_path
# uninitialized constant FileUtils::DryRun::VERSION
# Did you mean?  FileUtils::VERSION
# uninitialized constant FileUtils::NoWrite::VERSION
# Did you mean?  FileUtils::VERSION
# uninitialized constant FileUtils::Verbose::VERSION
# Did you mean?  FileUtils::VERSION
# undefined singleton method `find<defaultArg>1' for `Find'
# wrong constant name <static-init>
# wrong constant name find<defaultArg>1
# wrong constant name find
# wrong constant name prune
# undefined method `def_delegator<defaultArg>1' for module `Forwardable'
# undefined method `def_instance_delegator<defaultArg>1' for module `Forwardable'
# wrong constant name def_delegator<defaultArg>1
# wrong constant name def_delegator
# wrong constant name def_delegators
# wrong constant name def_instance_delegator<defaultArg>1
# wrong constant name def_instance_delegator
# wrong constant name def_instance_delegators
# wrong constant name delegate
# wrong constant name instance_delegate
# wrong constant name _compile_method
# wrong constant name _delegator_method
# wrong constant name _valid_method?
# wrong constant name debug
# wrong constant name debug=
# wrong constant name garbage_collect
# wrong constant name latest_gc_info
# wrong constant name stress=
# wrong constant name verify_internal_consistency
# wrong constant name verify_transient_heap_internal_consistency
# uninitialized constant Gem::Resolver::Molinillo::DependencyGraph::Log::Elem
# wrong constant name source_index
# wrong constant name <
# wrong constant name <=
# wrong constant name >
# wrong constant name >=
# wrong constant name compact
# wrong constant name compact!
# wrong constant name default_proc
# wrong constant name default_proc=
# wrong constant name fetch_values
# wrong constant name flatten
# wrong constant name index
# wrong constant name replace
# wrong constant name slice
# wrong constant name to_h
# wrong constant name to_proc
# wrong constant name transform_keys
# wrong constant name transform_keys!
# wrong constant name transform_values
# wrong constant name transform_values!
# wrong constant name update
# wrong constant name try_convert
# undefined method `read_nonblock<defaultArg>1' for class `IO'
# undefined method `read_nonblock<defaultArg>2' for class `IO'
# undefined method `write_nonblock<defaultArg>1' for class `IO'
# wrong constant name beep
# wrong constant name cooked
# wrong constant name cooked!
# wrong constant name cursor
# wrong constant name cursor=
# wrong constant name echo=
# wrong constant name echo?
# wrong constant name external_encoding
# wrong constant name getch
# wrong constant name getpass
# wrong constant name goto
# wrong constant name iflush
# wrong constant name ioflush
# wrong constant name noecho
# wrong constant name nonblock
# wrong constant name nonblock=
# wrong constant name nonblock?
# wrong constant name nread
# wrong constant name oflush
# wrong constant name pathconf
# wrong constant name pread
# wrong constant name pressed?
# wrong constant name pwrite
# wrong constant name raw
# wrong constant name raw!
# wrong constant name read_nonblock<defaultArg>1
# wrong constant name read_nonblock<defaultArg>2
# wrong constant name ready?
# wrong constant name wait
# wrong constant name wait_readable
# wrong constant name wait_writable
# wrong constant name winsize
# wrong constant name winsize=
# wrong constant name write_nonblock<defaultArg>1
# wrong constant name write_nonblock
# wrong constant name console
# wrong constant name foreach
# undefined method `initialize<defaultArg>1' for class `IPAddr'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `IPAddr'
# Did you mean?  initialize_dup
# wrong constant name &
# wrong constant name <<
# wrong constant name <=>
# wrong constant name ==
# wrong constant name ===
# wrong constant name >>
# wrong constant name <Class:AddressFamilyError>
# wrong constant name <Class:Error>
# wrong constant name <Class:InvalidAddressError>
# wrong constant name <Class:InvalidPrefixError>
# wrong constant name eql?
# wrong constant name family
# wrong constant name hton
# wrong constant name include?
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name ip6_arpa
# wrong constant name ip6_int
# wrong constant name ipv4?
# wrong constant name ipv4_compat
# wrong constant name ipv4_compat?
# wrong constant name ipv4_mapped
# wrong constant name ipv4_mapped?
# wrong constant name ipv6?
# wrong constant name link_local?
# wrong constant name loopback?
# wrong constant name mask
# wrong constant name mask!
# wrong constant name native
# wrong constant name prefix
# wrong constant name prefix=
# wrong constant name private?
# wrong constant name reverse
# wrong constant name set
# wrong constant name succ
# wrong constant name to_i
# wrong constant name to_range
# wrong constant name to_string
# wrong constant name |
# wrong constant name ~
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name new_ntoh
# wrong constant name ntop
# wrong constant name allbits?
# wrong constant name anybits?
# wrong constant name digits
# wrong constant name nobits?
# wrong constant name pow
# wrong constant name to_bn
# wrong constant name sqrt
# wrong constant name from_state
# wrong constant name initialize
# wrong constant name <Class:Error>
# wrong constant name <Class:InvalidWeightError>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name distance
# wrong constant name jaro_distance
# wrong constant name gem
# wrong constant name itself
# wrong constant name object_id
# wrong constant name pretty_inspect
# wrong constant name then
# wrong constant name yield_self
# wrong constant name at_exit
# wrong constant name key
# wrong constant name receiver
# wrong constant name path
# wrong constant name exit_value
# wrong constant name reason
# wrong constant name restore
# uninitialized constant MessagePack
# uninitialized constant MessagePack
# wrong constant name <Class:Spec>
# wrong constant name <Class:DSL>
# wrong constant name <Class:AbstractReporter>
# wrong constant name <Class:Assertion>
# wrong constant name <Class:BacktraceFilter>
# wrong constant name <Class:CompositeReporter>
# wrong constant name <Class:Expectation>
# wrong constant name <Class:Expectations>
# wrong constant name <Class:Guard>
# wrong constant name <Class:Mock>
# wrong constant name <Class:Parallel>
# wrong constant name <Class:PrideIO>
# wrong constant name <Class:PrideLOL>
# wrong constant name <Class:ProgressReporter>
# wrong constant name <Class:Reportable>
# wrong constant name <Class:Reporter>
# wrong constant name <Class:Result>
# wrong constant name <Class:Skip>
# wrong constant name <Class:Spec>
# wrong constant name <Class:StatisticsReporter>
# wrong constant name <Class:SummaryReporter>
# wrong constant name <Class:UnexpectedError>
# wrong constant name <Class:Unit>
# uninitialized constant Minitest::AbstractReporter::VERSION
# Did you mean?  Minitest::VERSION
# wrong constant name lock
# wrong constant name locked?
# wrong constant name passed?
# wrong constant name prerecord
# wrong constant name record
# wrong constant name report
# wrong constant name start
# wrong constant name synchronize
# wrong constant name try_lock
# wrong constant name unlock
# wrong constant name <static-init>
# wrong constant name error
# wrong constant name location
# wrong constant name result_code
# wrong constant name result_label
# wrong constant name <static-init>
# undefined method `assert_in_delta<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_in_delta<defaultArg>2' for module `Minitest::Assertions'
# undefined method `assert_in_epsilon<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_in_epsilon<defaultArg>2' for module `Minitest::Assertions'
# undefined method `assert_instance_of<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_kind_of<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_match<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_operator<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_operator<defaultArg>2' for module `Minitest::Assertions'
# undefined method `assert_output<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_output<defaultArg>2' for module `Minitest::Assertions'
# undefined method `assert_path_exists<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_predicate<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_respond_to<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_same<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_send<defaultArg>1' for module `Minitest::Assertions'
# undefined method `assert_throws<defaultArg>1' for module `Minitest::Assertions'
# undefined method `flunk<defaultArg>1' for module `Minitest::Assertions'
# undefined method `message<defaultArg>1' for module `Minitest::Assertions'
# undefined method `message<defaultArg>2' for module `Minitest::Assertions'
# undefined method `pass<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_in_delta<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_in_delta<defaultArg>2' for module `Minitest::Assertions'
# undefined method `refute_in_epsilon<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_in_epsilon<defaultArg>2' for module `Minitest::Assertions'
# undefined method `refute_instance_of<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_kind_of<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_match<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_operator<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_operator<defaultArg>2' for module `Minitest::Assertions'
# undefined method `refute_path_exists<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_predicate<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_respond_to<defaultArg>1' for module `Minitest::Assertions'
# undefined method `refute_same<defaultArg>1' for module `Minitest::Assertions'
# undefined method `skip<defaultArg>1' for module `Minitest::Assertions'
# undefined method `skip<defaultArg>2' for module `Minitest::Assertions'
# wrong constant name _synchronize
# wrong constant name assert_in_delta<defaultArg>1
# wrong constant name assert_in_delta<defaultArg>2
# wrong constant name assert_in_delta
# wrong constant name assert_in_epsilon<defaultArg>1
# wrong constant name assert_in_epsilon<defaultArg>2
# wrong constant name assert_in_epsilon
# wrong constant name assert_instance_of<defaultArg>1
# wrong constant name assert_instance_of
# wrong constant name assert_kind_of<defaultArg>1
# wrong constant name assert_kind_of
# wrong constant name assert_match<defaultArg>1
# wrong constant name assert_match
# wrong constant name assert_mock
# wrong constant name assert_operator<defaultArg>1
# wrong constant name assert_operator<defaultArg>2
# wrong constant name assert_operator
# wrong constant name assert_output<defaultArg>1
# wrong constant name assert_output<defaultArg>2
# wrong constant name assert_output
# wrong constant name assert_path_exists<defaultArg>1
# wrong constant name assert_path_exists
# wrong constant name assert_predicate<defaultArg>1
# wrong constant name assert_predicate
# wrong constant name assert_respond_to<defaultArg>1
# wrong constant name assert_respond_to
# wrong constant name assert_same<defaultArg>1
# wrong constant name assert_same
# wrong constant name assert_send<defaultArg>1
# wrong constant name assert_send
# wrong constant name assert_silent
# wrong constant name assert_throws<defaultArg>1
# wrong constant name assert_throws
# wrong constant name capture_io
# wrong constant name capture_subprocess_io
# wrong constant name diff
# wrong constant name exception_details
# wrong constant name fail_after
# wrong constant name flunk<defaultArg>1
# wrong constant name flunk
# wrong constant name message<defaultArg>1
# wrong constant name message<defaultArg>2
# wrong constant name message
# wrong constant name mu_pp
# wrong constant name mu_pp_for_diff
# wrong constant name pass<defaultArg>1
# wrong constant name pass
# wrong constant name refute_in_delta<defaultArg>1
# wrong constant name refute_in_delta<defaultArg>2
# wrong constant name refute_in_delta
# wrong constant name refute_in_epsilon<defaultArg>1
# wrong constant name refute_in_epsilon<defaultArg>2
# wrong constant name refute_in_epsilon
# wrong constant name refute_instance_of<defaultArg>1
# wrong constant name refute_instance_of
# wrong constant name refute_kind_of<defaultArg>1
# wrong constant name refute_kind_of
# wrong constant name refute_match<defaultArg>1
# wrong constant name refute_match
# wrong constant name refute_operator<defaultArg>1
# wrong constant name refute_operator<defaultArg>2
# wrong constant name refute_operator
# wrong constant name refute_path_exists<defaultArg>1
# wrong constant name refute_path_exists
# wrong constant name refute_predicate<defaultArg>1
# wrong constant name refute_predicate
# wrong constant name refute_respond_to<defaultArg>1
# wrong constant name refute_respond_to
# wrong constant name refute_same<defaultArg>1
# wrong constant name refute_same
# wrong constant name skip<defaultArg>1
# wrong constant name skip<defaultArg>2
# wrong constant name skip
# wrong constant name skip_until
# wrong constant name skipped?
# wrong constant name things_to_diff
# wrong constant name diff
# wrong constant name diff=
# wrong constant name filter
# wrong constant name <static-init>
# wrong constant name <<
# uninitialized constant Minitest::CompositeReporter::VERSION
# Did you mean?  Minitest::VERSION
# wrong constant name initialize
# wrong constant name io
# wrong constant name reporters
# wrong constant name reporters=
# wrong constant name <static-init>
# uninitialized constant Minitest::Expectation::Elem
# wrong constant name ctx
# wrong constant name ctx=
# wrong constant name target
# wrong constant name target=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name must_be
# wrong constant name must_be_close_to
# wrong constant name must_be_empty
# wrong constant name must_be_instance_of
# wrong constant name must_be_kind_of
# wrong constant name must_be_nil
# wrong constant name must_be_same_as
# wrong constant name must_be_silent
# wrong constant name must_be_within_delta
# wrong constant name must_be_within_epsilon
# wrong constant name must_equal
# wrong constant name must_include
# wrong constant name must_match
# wrong constant name must_output
# wrong constant name must_raise
# wrong constant name must_respond_to
# wrong constant name must_throw
# wrong constant name path_must_exist
# wrong constant name path_wont_exist
# wrong constant name wont_be
# wrong constant name wont_be_close_to
# wrong constant name wont_be_empty
# wrong constant name wont_be_instance_of
# wrong constant name wont_be_kind_of
# wrong constant name wont_be_nil
# wrong constant name wont_be_same_as
# wrong constant name wont_be_within_delta
# wrong constant name wont_be_within_epsilon
# wrong constant name wont_equal
# wrong constant name wont_include
# wrong constant name wont_match
# wrong constant name wont_respond_to
# wrong constant name <static-init>
# undefined method `jruby?<defaultArg>1' for module `Minitest::Guard'
# undefined method `maglev?<defaultArg>1' for module `Minitest::Guard'
# undefined method `mri?<defaultArg>1' for module `Minitest::Guard'
# undefined method `osx?<defaultArg>1' for module `Minitest::Guard'
# undefined method `rubinius?<defaultArg>1' for module `Minitest::Guard'
# undefined method `windows?<defaultArg>1' for module `Minitest::Guard'
# wrong constant name jruby?<defaultArg>1
# wrong constant name jruby?
# wrong constant name maglev?<defaultArg>1
# wrong constant name maglev?
# wrong constant name mri?<defaultArg>1
# wrong constant name mri?
# wrong constant name osx?<defaultArg>1
# wrong constant name osx?
# wrong constant name rubinius?<defaultArg>1
# wrong constant name rubinius?
# wrong constant name windows?<defaultArg>1
# wrong constant name windows?
# wrong constant name <static-init>
# undefined method `expect<defaultArg>1' for class `Minitest::Mock'
# undefined method `initialize<defaultArg>1' for class `Minitest::Mock'
# Did you mean?  initialize_dup
# undefined method `respond_to?<defaultArg>1' for class `Minitest::Mock'
# wrong constant name ===
# wrong constant name __call
# wrong constant name __respond_to?
# wrong constant name class
# wrong constant name expect<defaultArg>1
# wrong constant name expect
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name inspect
# wrong constant name instance_eval
# wrong constant name instance_variables
# wrong constant name method_missing
# wrong constant name object_id
# wrong constant name public_send
# wrong constant name respond_to?<defaultArg>1
# wrong constant name respond_to?
# wrong constant name send
# wrong constant name to_s
# wrong constant name verify
# wrong constant name <static-init>
# wrong constant name <Class:Executor>
# wrong constant name <Class:Test>
# wrong constant name <<
# wrong constant name initialize
# wrong constant name shutdown
# wrong constant name size
# wrong constant name start
# wrong constant name <static-init>
# wrong constant name <Class:ClassMethods>
# wrong constant name _synchronize
# wrong constant name run_one_method
# wrong constant name test_order
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name io
# wrong constant name method_missing
# wrong constant name pride
# wrong constant name print
# wrong constant name puts
# wrong constant name <static-init>
# wrong constant name pride!
# wrong constant name pride?
# uninitialized constant Minitest::PrideLOL::ESC
# Did you mean?  Etc
# uninitialized constant Minitest::PrideLOL::NND
# wrong constant name <static-init>
# uninitialized constant Minitest::ProgressReporter::VERSION
# Did you mean?  Minitest::VERSION
# wrong constant name <static-init>
# wrong constant name class_name
# wrong constant name error?
# wrong constant name location
# wrong constant name passed?
# wrong constant name result_code
# wrong constant name skipped?
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Minitest::Reporter'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Minitest::Reporter'
# Did you mean?  initialize_dup
# uninitialized constant Minitest::Reporter::VERSION
# Did you mean?  Minitest::VERSION
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name io
# wrong constant name io=
# wrong constant name options
# wrong constant name options=
# wrong constant name <static-init>
# uninitialized constant Minitest::Result::SIGNALS
# Did you mean?  Signal
# wrong constant name klass
# wrong constant name klass=
# wrong constant name source_location
# wrong constant name source_location=
# wrong constant name <static-init>
# wrong constant name from
# wrong constant name assertions
# wrong constant name assertions=
# wrong constant name failure
# wrong constant name failures
# wrong constant name failures=
# wrong constant name initialize
# wrong constant name marshal_dump
# wrong constant name marshal_load
# wrong constant name name
# wrong constant name name=
# wrong constant name passed?
# wrong constant name result_code
# wrong constant name run
# wrong constant name skipped?
# wrong constant name time
# wrong constant name time=
# wrong constant name time_it
# undefined singleton method `run<defaultArg>1' for `Minitest::Runnable'
# wrong constant name inherited
# wrong constant name methods_matching
# wrong constant name on_signal
# wrong constant name reset
# wrong constant name run<defaultArg>1
# wrong constant name run
# wrong constant name run_one_method
# wrong constant name runnable_methods
# wrong constant name runnables
# wrong constant name with_info_handler
# wrong constant name <static-init>
# wrong constant name <Class:DSL>
# uninitialized constant Minitest::Spec::E
# uninitialized constant Minitest::Spec::PASSTHROUGH_EXCEPTIONS
# uninitialized constant Minitest::Spec::SIGNALS
# Did you mean?  Signal
# uninitialized constant Minitest::Spec::TEARDOWN_METHODS
# uninitialized constant Minitest::Spec::UNDEFINED
# undefined method `after<defaultArg>1' for module `Minitest::Spec::DSL'
# undefined method `before<defaultArg>1' for module `Minitest::Spec::DSL'
# undefined method `it<defaultArg>1' for module `Minitest::Spec::DSL'
# undefined method `specify<defaultArg>1' for module `Minitest::Spec::DSL'
# wrong constant name <Class:InstanceMethods>
# wrong constant name after<defaultArg>1
# wrong constant name after
# wrong constant name before<defaultArg>1
# wrong constant name before
# wrong constant name children
# wrong constant name create
# wrong constant name desc
# wrong constant name describe_stack
# wrong constant name it<defaultArg>1
# wrong constant name it
# wrong constant name let
# wrong constant name name
# wrong constant name nuke_test_methods!
# wrong constant name register_spec_type
# wrong constant name spec_type
# wrong constant name specify<defaultArg>1
# wrong constant name specify
# wrong constant name subject
# wrong constant name to_s
# undefined method `_<defaultArg>1' for module `Minitest::Spec::DSL::InstanceMethods'
# undefined method `expect<defaultArg>1' for module `Minitest::Spec::DSL::InstanceMethods'
# undefined method `value<defaultArg>1' for module `Minitest::Spec::DSL::InstanceMethods'
# wrong constant name _<defaultArg>1
# wrong constant name _
# wrong constant name before_setup
# wrong constant name expect<defaultArg>1
# wrong constant name expect
# wrong constant name value<defaultArg>1
# wrong constant name value
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name extended
# wrong constant name <static-init>
# wrong constant name current
# uninitialized constant Minitest::StatisticsReporter::VERSION
# Did you mean?  Minitest::VERSION
# wrong constant name assertions
# wrong constant name assertions=
# wrong constant name count
# wrong constant name count=
# wrong constant name errors
# wrong constant name errors=
# wrong constant name failures
# wrong constant name failures=
# wrong constant name results
# wrong constant name results=
# wrong constant name skips
# wrong constant name skips=
# wrong constant name start_time
# wrong constant name start_time=
# wrong constant name total_time
# wrong constant name total_time=
# wrong constant name <static-init>
# uninitialized constant Minitest::SummaryReporter::VERSION
# Did you mean?  Minitest::VERSION
# wrong constant name aggregated_results
# wrong constant name old_sync
# wrong constant name old_sync=
# wrong constant name statistics
# wrong constant name summary
# wrong constant name sync
# wrong constant name sync=
# wrong constant name <static-init>
# uninitialized constant Minitest::Test::E
# wrong constant name <Class:LifecycleHooks>
# uninitialized constant Minitest::Test::SIGNALS
# Did you mean?  Signal
# uninitialized constant Minitest::Test::UNDEFINED
# wrong constant name capture_exceptions
# wrong constant name with_info_handler
# wrong constant name after_setup
# wrong constant name after_teardown
# wrong constant name before_setup
# wrong constant name before_teardown
# wrong constant name setup
# wrong constant name teardown
# wrong constant name <static-init>
# wrong constant name i_suck_and_my_tests_are_order_dependent!
# wrong constant name io_lock
# wrong constant name io_lock=
# wrong constant name make_my_diffs_pretty!
# wrong constant name parallelize_me!
# wrong constant name test_order
# wrong constant name error=
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <Class:TestCase>
# uninitialized constant Minitest::Unit::TestCase::E
# uninitialized constant Minitest::Unit::TestCase::PASSTHROUGH_EXCEPTIONS
# uninitialized constant Minitest::Unit::TestCase::SIGNALS
# Did you mean?  Signal
# uninitialized constant Minitest::Unit::TestCase::TEARDOWN_METHODS
# uninitialized constant Minitest::Unit::TestCase::UNDEFINED
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name after_tests
# wrong constant name autorun
# undefined singleton method `process_args<defaultArg>1' for `Minitest'
# wrong constant name __run
# wrong constant name after_run
# wrong constant name backtrace_filter
# wrong constant name backtrace_filter=
# wrong constant name clock_time
# wrong constant name extensions
# wrong constant name extensions=
# wrong constant name filter_backtrace
# wrong constant name info_signal
# wrong constant name info_signal=
# wrong constant name init_plugins
# wrong constant name load_plugins
# wrong constant name parallel_executor
# wrong constant name parallel_executor=
# wrong constant name plugin_pride_init
# wrong constant name plugin_pride_options
# wrong constant name process_args<defaultArg>1
# wrong constant name process_args
# wrong constant name reporter
# wrong constant name reporter=
# wrong constant name run_one_method
# wrong constant name <static-init>
# undefined method `infect_an_assertion<defaultArg>1' for class `Module'
# Did you mean?  infect_an_assertion
# wrong constant name class_name
# wrong constant name deprecate_constant
# wrong constant name infect_an_assertion<defaultArg>1
# wrong constant name infect_an_assertion
# wrong constant name undef_method
# wrong constant name used_modules
# wrong constant name enter
# wrong constant name exit
# wrong constant name try_enter
# wrong constant name initialize
# wrong constant name mon_enter
# wrong constant name mon_exit
# wrong constant name mon_locked?
# wrong constant name mon_owned?
# wrong constant name mon_synchronize
# wrong constant name mon_try_enter
# wrong constant name new_cond
# wrong constant name synchronize
# wrong constant name try_mon_enter
# undefined method `wait<defaultArg>1' for class `MonitorMixin::ConditionVariable'
# wrong constant name broadcast
# wrong constant name initialize
# wrong constant name signal
# wrong constant name wait<defaultArg>1
# wrong constant name wait
# wrong constant name wait_until
# wrong constant name wait_while
# wrong constant name extend_object
# wrong constant name name
# wrong constant name receiver
# undefined method `initialize<defaultArg>4' for class `Net::BufferedIO'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>4
# wrong constant name write_timeout
# wrong constant name write_timeout=
# uninitialized constant Net::FTP
# uninitialized constant Net::FTP
# uninitialized constant Net::FTPConnectionError
# uninitialized constant Net::FTPConnectionError
# uninitialized constant Net::FTPError
# Did you mean?  Net::HTTPError
# uninitialized constant Net::FTPError
# Did you mean?  Net::HTTPError
# uninitialized constant Net::FTPPermError
# Did you mean?  FiberError
# uninitialized constant Net::FTPPermError
# Did you mean?  FiberError
# uninitialized constant Net::FTPProtoError
# uninitialized constant Net::FTPProtoError
# uninitialized constant Net::FTPReplyError
# uninitialized constant Net::FTPReplyError
# uninitialized constant Net::FTPTempError
# Did you mean?  TypeError
# uninitialized constant Net::FTPTempError
# Did you mean?  TypeError
# wrong constant name max_retries
# wrong constant name max_retries=
# wrong constant name max_version
# wrong constant name max_version=
# wrong constant name min_version
# wrong constant name min_version=
# wrong constant name write_timeout
# wrong constant name write_timeout=
# uninitialized constant Net::HTTP::DigestAuth
# uninitialized constant Net::HTTP::DigestAuth
# uninitialized constant Net::HTTP::Persistent
# uninitialized constant Net::HTTP::Persistent
# uninitialized constant Net::HTTPAlreadyReported::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPAlreadyReported::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPEarlyHints::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPEarlyHints::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPGatewayTimeout::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPGatewayTimeout::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPLoopDetected::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPLoopDetected::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPMisdirectedRequest::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPMisdirectedRequest::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPNotExtended::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPNotExtended::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPPayloadTooLarge::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPPayloadTooLarge::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPProcessing::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPProcessing::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPRangeNotSatisfiable::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPRangeNotSatisfiable::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPRequestTimeout::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPRequestTimeout::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPURITooLong::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPURITooLong::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::HTTPVariantAlsoNegotiates::CODE_CLASS_TO_OBJ
# uninitialized constant Net::HTTPVariantAlsoNegotiates::CODE_TO_OBJ
# wrong constant name <static-init>
# uninitialized constant Net::IMAP
# uninitialized constant Net::IMAP
# undefined method `initialize<defaultArg>1' for class `Net::ReadTimeout'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name io
# uninitialized constant Net::SMTP
# uninitialized constant Net::SMTP
# uninitialized constant Net::SMTPAuthenticationError
# uninitialized constant Net::SMTPAuthenticationError
# uninitialized constant Net::SMTPError
# Did you mean?  Net::HTTPError
# uninitialized constant Net::SMTPError
# Did you mean?  Net::HTTPError
# uninitialized constant Net::SMTPFatalError
# Did you mean?  Net::ProtoFatalError
#                Net::HTTPFatalError
# uninitialized constant Net::SMTPFatalError
# Did you mean?  Net::ProtoFatalError
#                Net::HTTPFatalError
# uninitialized constant Net::SMTPServerBusy
# uninitialized constant Net::SMTPServerBusy
# uninitialized constant Net::SMTPSyntaxError
# Did you mean?  Net::ProtoSyntaxError
# uninitialized constant Net::SMTPSyntaxError
# Did you mean?  Net::ProtoSyntaxError
# uninitialized constant Net::SMTPUnknownError
# uninitialized constant Net::SMTPUnknownError
# uninitialized constant Net::SMTPUnsupportedCommand
# uninitialized constant Net::SMTPUnsupportedCommand
# undefined method `initialize<defaultArg>1' for class `Net::WriteTimeout'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name io
# wrong constant name <static-init>
# wrong constant name to_i
# wrong constant name args
# wrong constant name private_call?
# undefined method `to_yaml<defaultArg>1' for class `Object'
# uninitialized constant RUBYGEMS_ACTIVATION_MONITOR
# wrong constant name dclone
# wrong constant name stub
# wrong constant name to_yaml<defaultArg>1
# wrong constant name to_yaml
# wrong constant name yaml_tag
# wrong constant name <Class:Object>
# wrong constant name []
# wrong constant name []=
# wrong constant name each
# wrong constant name each_key
# wrong constant name each_pair
# wrong constant name each_value
# wrong constant name key?
# wrong constant name keys
# wrong constant name length
# wrong constant name size
# wrong constant name values
# wrong constant name count_objects
# wrong constant name define_finalizer
# wrong constant name garbage_collect
# wrong constant name undefine_finalizer
# undefined method `add_observer<defaultArg>1' for module `Observable'
# undefined method `changed<defaultArg>1' for module `Observable'
# wrong constant name add_observer<defaultArg>1
# wrong constant name add_observer
# wrong constant name changed<defaultArg>1
# wrong constant name changed
# wrong constant name changed?
# wrong constant name count_observers
# wrong constant name delete_observer
# wrong constant name delete_observers
# wrong constant name notify_observers
# wrong constant name <static-init>
# wrong constant name indefinite_length
# wrong constant name indefinite_length=
# wrong constant name +@
# wrong constant name -@
# wrong constant name /
# wrong constant name negative?
# uninitialized constant OpenSSL::Digest::DSS
# uninitialized constant OpenSSL::Digest::DSS
# uninitialized constant OpenSSL::Digest::DSS1
# uninitialized constant OpenSSL::Digest::DSS1
# uninitialized constant OpenSSL::Digest::SHA
# Did you mean?  OpenSSL::Digest::SHA1
# uninitialized constant OpenSSL::Digest::SHA
# Did you mean?  OpenSSL::Digest::SHA1
# wrong constant name <Class:KDFError>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name hkdf
# wrong constant name pbkdf2_hmac
# wrong constant name scrypt
# wrong constant name signed?
# uninitialized constant OpenSSL::PKCS5::PKCS5Error
# uninitialized constant OpenSSL::PKCS5::PKCS5Error
# undefined method `to_bn<defaultArg>1' for class `OpenSSL::PKey::EC::Point'
# wrong constant name to_bn<defaultArg>1
# wrong constant name to_octet_string
# wrong constant name sign_pss
# wrong constant name verify_pss
# wrong constant name add_certificate
# wrong constant name alpn_protocols
# wrong constant name alpn_protocols=
# wrong constant name alpn_select_cb
# wrong constant name alpn_select_cb=
# wrong constant name enable_fallback_scsv
# wrong constant name max_version=
# wrong constant name min_version=
# uninitialized constant OpenSSL::SSL::SSLSocket::BLOCK_SIZE
# wrong constant name alpn_protocol
# wrong constant name tmp_key
# wrong constant name ==
# wrong constant name ==
# wrong constant name ==
# wrong constant name to_utf8
# wrong constant name ==
# wrong constant name ==
# wrong constant name to_der
# wrong constant name fips_mode
# uninitialized constant Opus
# uninitialized constant Opus
# wrong constant name <Class:Break>
# wrong constant name <Class:DeadWorker>
# wrong constant name <Class:ExceptionWrapper>
# wrong constant name <Class:JobFactory>
# wrong constant name <Class:Kill>
# wrong constant name <Class:ProcessorCount>
# wrong constant name <Class:UndumpableException>
# wrong constant name <Class:UserInterruptHandler>
# wrong constant name <Class:Worker>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name exception
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name next
# wrong constant name pack
# wrong constant name size
# wrong constant name unpack
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name physical_processor_count
# wrong constant name processor_count
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name kill
# wrong constant name kill_on_ctrl_c
# wrong constant name close_pipes
# wrong constant name initialize
# wrong constant name pid
# wrong constant name read
# wrong constant name stop
# wrong constant name thread
# wrong constant name thread=
# wrong constant name work
# wrong constant name write
# wrong constant name <static-init>
# undefined singleton method `each<defaultArg>1' for `Parallel'
# undefined singleton method `each_with_index<defaultArg>1' for `Parallel'
# undefined singleton method `in_processes<defaultArg>1' for `Parallel'
# undefined singleton method `in_threads<defaultArg>1' for `Parallel'
# undefined singleton method `map<defaultArg>1' for `Parallel'
# undefined singleton method `map_with_index<defaultArg>1' for `Parallel'
# wrong constant name <static-init>
# wrong constant name all?
# wrong constant name any?
# wrong constant name each<defaultArg>1
# wrong constant name each
# wrong constant name each_with_index<defaultArg>1
# wrong constant name each_with_index
# wrong constant name flat_map
# wrong constant name in_processes<defaultArg>1
# wrong constant name in_processes
# wrong constant name in_threads<defaultArg>1
# wrong constant name in_threads
# wrong constant name map<defaultArg>1
# wrong constant name map
# wrong constant name map_with_index<defaultArg>1
# wrong constant name map_with_index
# wrong constant name worker_number
# wrong constant name worker_number=
# wrong constant name <Class:AST>
# wrong constant name <Class:Base>
# wrong constant name <Class:Builders>
# wrong constant name <Class:ClobberingError>
# wrong constant name <Class:Context>
# wrong constant name <Class:CurrentArgStack>
# wrong constant name <Class:Deprecation>
# wrong constant name <Class:Diagnostic>
# wrong constant name <Class:Lexer>
# wrong constant name <Class:MaxNumparamStack>
# wrong constant name <Class:Meta>
# wrong constant name <Class:Rewriter>
# wrong constant name <Class:Source>
# wrong constant name <Class:StaticEnvironment>
# wrong constant name <Class:SyntaxError>
# wrong constant name <Class:TreeRewriter>
# wrong constant name <Class:VariablesStack>
# wrong constant name <Class:Node>
# wrong constant name <Class:Processor>
# wrong constant name loc
# wrong constant name location
# wrong constant name <static-init>
# wrong constant name on_alias
# wrong constant name on_and
# wrong constant name on_and_asgn
# wrong constant name on_arg
# wrong constant name on_arg_expr
# wrong constant name on_args
# wrong constant name on_argument
# wrong constant name on_array
# wrong constant name on_array_pattern
# wrong constant name on_array_pattern_with_tail
# wrong constant name on_back_ref
# wrong constant name on_begin
# wrong constant name on_block
# wrong constant name on_block_pass
# wrong constant name on_blockarg
# wrong constant name on_blockarg_expr
# wrong constant name on_break
# wrong constant name on_case
# wrong constant name on_case_match
# wrong constant name on_casgn
# wrong constant name on_class
# wrong constant name on_const
# wrong constant name on_const_pattern
# wrong constant name on_csend
# wrong constant name on_cvar
# wrong constant name on_cvasgn
# wrong constant name on_def
# wrong constant name on_defined?
# wrong constant name on_defs
# wrong constant name on_dstr
# wrong constant name on_dsym
# wrong constant name on_eflipflop
# wrong constant name on_ensure
# wrong constant name on_erange
# wrong constant name on_for
# wrong constant name on_gvar
# wrong constant name on_gvasgn
# wrong constant name on_hash
# wrong constant name on_hash_pattern
# wrong constant name on_if
# wrong constant name on_if_guard
# wrong constant name on_iflipflop
# wrong constant name on_in_match
# wrong constant name on_in_pattern
# wrong constant name on_index
# wrong constant name on_indexasgn
# wrong constant name on_irange
# wrong constant name on_ivar
# wrong constant name on_ivasgn
# wrong constant name on_kwarg
# wrong constant name on_kwbegin
# wrong constant name on_kwoptarg
# wrong constant name on_kwrestarg
# wrong constant name on_kwsplat
# wrong constant name on_lambda
# wrong constant name on_lvar
# wrong constant name on_lvasgn
# wrong constant name on_masgn
# wrong constant name on_match_alt
# wrong constant name on_match_as
# wrong constant name on_match_current_line
# wrong constant name on_match_rest
# wrong constant name on_match_var
# wrong constant name on_match_with_lvasgn
# wrong constant name on_mlhs
# wrong constant name on_module
# wrong constant name on_next
# wrong constant name on_not
# wrong constant name on_nth_ref
# wrong constant name on_numblock
# wrong constant name on_op_asgn
# wrong constant name on_optarg
# wrong constant name on_or
# wrong constant name on_or_asgn
# wrong constant name on_pair
# wrong constant name on_pin
# wrong constant name on_postexe
# wrong constant name on_preexe
# wrong constant name on_procarg0
# wrong constant name on_redo
# wrong constant name on_regexp
# wrong constant name on_resbody
# wrong constant name on_rescue
# wrong constant name on_restarg
# wrong constant name on_restarg_expr
# wrong constant name on_retry
# wrong constant name on_return
# wrong constant name on_sclass
# wrong constant name on_send
# wrong constant name on_shadowarg
# wrong constant name on_splat
# wrong constant name on_super
# wrong constant name on_undef
# wrong constant name on_unless_guard
# wrong constant name on_until
# wrong constant name on_until_post
# wrong constant name on_var
# wrong constant name on_vasgn
# wrong constant name on_when
# wrong constant name on_while
# wrong constant name on_while_post
# wrong constant name on_xstr
# wrong constant name on_yield
# wrong constant name process_argument_node
# wrong constant name process_regular_node
# wrong constant name process_var_asgn_node
# wrong constant name process_variable_node
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Parser::Base'
# Did you mean?  initialize_dup
# undefined method `tokenize<defaultArg>1' for class `Parser::Base'
# uninitialized constant Parser::Base::Racc_Main_Parsing_Routine
# uninitialized constant Parser::Base::Racc_Runtime_Core_Id_C
# Did you mean?  Parser::Base::Racc_Runtime_Core_Version_C
# uninitialized constant Parser::Base::Racc_Runtime_Core_Revision
# Did you mean?  Parser::Base::Racc_Runtime_Core_Revision_C
#                Parser::Base::Racc_Runtime_Core_Revision_R
#                Parser::Base::Racc_Runtime_Revision
#                Parser::Base::Racc_Runtime_Core_Version
#                Parser::Base::Racc_Runtime_Core_Version_C
#                Parser::Base::Racc_Runtime_Core_Version_R
#                Parser::Base::Racc_Runtime_Version
#                Parser::Base::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Base::Racc_Runtime_Core_Revision_C
# Did you mean?  Parser::Base::Racc_Runtime_Core_Revision_R
#                Parser::Base::Racc_Runtime_Revision
#                Parser::Base::Racc_Runtime_Core_Version_C
#                Parser::Base::Racc_Runtime_Core_Version_R
#                Parser::Base::Racc_Runtime_Core_Version
#                Parser::Base::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Base::Racc_Runtime_Core_Revision_R
# Did you mean?  Parser::Base::Racc_Runtime_Core_Revision_C
#                Parser::Base::Racc_Runtime_Revision
#                Parser::Base::Racc_Runtime_Core_Version_C
#                Parser::Base::Racc_Runtime_Core_Version_R
#                Parser::Base::Racc_Runtime_Core_Version
# uninitialized constant Parser::Base::Racc_Runtime_Core_Version
# Did you mean?  Parser::Base::Racc_Runtime_Revision
#                Parser::Base::Racc_Runtime_Core_Revision
#                Parser::Base::Racc_Runtime_Core_Version_C
#                Parser::Base::Racc_Runtime_Core_Version_R
#                Parser::Base::Racc_Runtime_Core_Revision_C
#                Parser::Base::Racc_Runtime_Core_Revision_R
#                Parser::Base::Racc_Runtime_Version
#                Parser::Base::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Base::Racc_Runtime_Core_Version_C
# Did you mean?  Parser::Base::Racc_Runtime_Core_Version_R
#                Parser::Base::Racc_Runtime_Core_Revision_C
#                Parser::Base::Racc_Runtime_Core_Revision_R
#                Parser::Base::Racc_Runtime_Revision
#                Parser::Base::Racc_Runtime_Core_Revision
#                Parser::Base::Racc_Runtime_Version
#                Parser::Base::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Base::Racc_Runtime_Core_Version_R
# Did you mean?  Parser::Base::Racc_Runtime_Core_Version_C
#                Parser::Base::Racc_Runtime_Core_Revision_C
#                Parser::Base::Racc_Runtime_Core_Revision_R
#                Parser::Base::Racc_Runtime_Revision
#                Parser::Base::Racc_Runtime_Core_Revision
#                Parser::Base::Racc_Runtime_Version
#                Parser::Base::Racc_Runtime_Core_Id_C
# uninitialized constant Parser::Base::Racc_Runtime_Revision
# Did you mean?  Parser::Base::Racc_Runtime_Version
#                Parser::Base::Racc_Runtime_Core_Version
#                Parser::Base::Racc_Runtime_Core_Revision
# uninitialized constant Parser::Base::Racc_Runtime_Type
# uninitialized constant Parser::Base::Racc_Runtime_Version
# Did you mean?  Parser::Base::Racc_Runtime_Revision
#                Parser::Base::Racc_Runtime_Core_Version
# uninitialized constant Parser::Base::Racc_YY_Parse_Method
# wrong constant name builder
# wrong constant name context
# wrong constant name current_arg_stack
# wrong constant name diagnostics
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name max_numparam_stack
# wrong constant name parse
# wrong constant name parse_with_comments
# wrong constant name pattern_hash_keys
# wrong constant name pattern_variables
# wrong constant name reset
# wrong constant name source_buffer
# wrong constant name static_env
# wrong constant name tokenize<defaultArg>1
# wrong constant name tokenize
# undefined singleton method `parse<defaultArg>1' for `Parser::Base'
# undefined singleton method `parse<defaultArg>2' for `Parser::Base'
# undefined singleton method `parse_with_comments<defaultArg>1' for `Parser::Base'
# undefined singleton method `parse_with_comments<defaultArg>2' for `Parser::Base'
# wrong constant name <static-init>
# wrong constant name default_parser
# wrong constant name parse<defaultArg>1
# wrong constant name parse<defaultArg>2
# wrong constant name parse
# wrong constant name parse_file
# wrong constant name parse_file_with_comments
# wrong constant name parse_with_comments<defaultArg>1
# wrong constant name parse_with_comments<defaultArg>2
# wrong constant name parse_with_comments
# wrong constant name <Class:Default>
# undefined method `args<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `begin_body<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `begin_body<defaultArg>2' for class `Parser::Builders::Default'
# undefined method `begin_body<defaultArg>3' for class `Parser::Builders::Default'
# undefined method `begin_body<defaultArg>4' for class `Parser::Builders::Default'
# undefined method `begin_body<defaultArg>5' for class `Parser::Builders::Default'
# undefined method `call_method<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `call_method<defaultArg>2' for class `Parser::Builders::Default'
# undefined method `call_method<defaultArg>3' for class `Parser::Builders::Default'
# undefined method `keyword_cmd<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `keyword_cmd<defaultArg>2' for class `Parser::Builders::Default'
# undefined method `keyword_cmd<defaultArg>3' for class `Parser::Builders::Default'
# undefined method `kwrestarg<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `match_rest<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `not_op<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `not_op<defaultArg>2' for class `Parser::Builders::Default'
# undefined method `not_op<defaultArg>3' for class `Parser::Builders::Default'
# undefined method `objc_restarg<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `restarg<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `restarg_expr<defaultArg>1' for class `Parser::Builders::Default'
# undefined method `splat<defaultArg>1' for class `Parser::Builders::Default'
# wrong constant name __ENCODING__
# wrong constant name __FILE__
# wrong constant name __LINE__
# wrong constant name accessible
# wrong constant name alias
# wrong constant name arg
# wrong constant name arg_expr
# wrong constant name args<defaultArg>1
# wrong constant name args
# wrong constant name array
# wrong constant name array_pattern
# wrong constant name assign
# wrong constant name assignable
# wrong constant name associate
# wrong constant name attr_asgn
# wrong constant name back_ref
# wrong constant name begin
# wrong constant name begin_body<defaultArg>1
# wrong constant name begin_body<defaultArg>2
# wrong constant name begin_body<defaultArg>3
# wrong constant name begin_body<defaultArg>4
# wrong constant name begin_body<defaultArg>5
# wrong constant name begin_body
# wrong constant name begin_keyword
# wrong constant name binary_op
# wrong constant name block
# wrong constant name block_pass
# wrong constant name blockarg
# wrong constant name blockarg_expr
# wrong constant name call_lambda
# wrong constant name call_method<defaultArg>1
# wrong constant name call_method<defaultArg>2
# wrong constant name call_method<defaultArg>3
# wrong constant name call_method
# wrong constant name call_type_for_dot
# wrong constant name case
# wrong constant name case_match
# wrong constant name character
# wrong constant name complex
# wrong constant name compstmt
# wrong constant name condition
# wrong constant name condition_mod
# wrong constant name const
# wrong constant name const_fetch
# wrong constant name const_global
# wrong constant name const_op_assignable
# wrong constant name const_pattern
# wrong constant name cvar
# wrong constant name dedent_string
# wrong constant name def_class
# wrong constant name def_method
# wrong constant name def_module
# wrong constant name def_sclass
# wrong constant name def_singleton
# wrong constant name emit_file_line_as_literals
# wrong constant name emit_file_line_as_literals=
# wrong constant name false
# wrong constant name float
# wrong constant name for
# wrong constant name forward_args
# wrong constant name forwarded_args
# wrong constant name gvar
# wrong constant name hash_pattern
# wrong constant name ident
# wrong constant name if_guard
# wrong constant name in_match
# wrong constant name in_pattern
# wrong constant name index
# wrong constant name index_asgn
# wrong constant name integer
# wrong constant name ivar
# wrong constant name keyword_cmd<defaultArg>1
# wrong constant name keyword_cmd<defaultArg>2
# wrong constant name keyword_cmd<defaultArg>3
# wrong constant name keyword_cmd
# wrong constant name kwarg
# wrong constant name kwnilarg
# wrong constant name kwoptarg
# wrong constant name kwrestarg<defaultArg>1
# wrong constant name kwrestarg
# wrong constant name kwsplat
# wrong constant name logical_op
# wrong constant name loop
# wrong constant name loop_mod
# wrong constant name match_alt
# wrong constant name match_as
# wrong constant name match_hash_var
# wrong constant name match_hash_var_from_str
# wrong constant name match_label
# wrong constant name match_nil_pattern
# wrong constant name match_op
# wrong constant name match_pair
# wrong constant name match_rest<defaultArg>1
# wrong constant name match_rest
# wrong constant name match_var
# wrong constant name match_with_trailing_comma
# wrong constant name multi_assign
# wrong constant name multi_lhs
# wrong constant name nil
# wrong constant name not_op<defaultArg>1
# wrong constant name not_op<defaultArg>2
# wrong constant name not_op<defaultArg>3
# wrong constant name not_op
# wrong constant name nth_ref
# wrong constant name numargs
# wrong constant name objc_kwarg
# wrong constant name objc_restarg<defaultArg>1
# wrong constant name objc_restarg
# wrong constant name objc_varargs
# wrong constant name op_assign
# wrong constant name optarg
# wrong constant name pair
# wrong constant name pair_keyword
# wrong constant name pair_list_18
# wrong constant name pair_quoted
# wrong constant name parser
# wrong constant name parser=
# wrong constant name pin
# wrong constant name postexe
# wrong constant name preexe
# wrong constant name procarg0
# wrong constant name range_exclusive
# wrong constant name range_inclusive
# wrong constant name rational
# wrong constant name regexp_compose
# wrong constant name regexp_options
# wrong constant name rescue_body
# wrong constant name restarg<defaultArg>1
# wrong constant name restarg
# wrong constant name restarg_expr<defaultArg>1
# wrong constant name restarg_expr
# wrong constant name self
# wrong constant name shadowarg
# wrong constant name splat<defaultArg>1
# wrong constant name splat
# wrong constant name string
# wrong constant name string_compose
# wrong constant name string_internal
# wrong constant name symbol
# wrong constant name symbol_compose
# wrong constant name symbol_internal
# wrong constant name symbols_compose
# wrong constant name ternary
# wrong constant name true
# wrong constant name unary_num
# wrong constant name unary_op
# wrong constant name undef_method
# wrong constant name unless_guard
# wrong constant name when
# wrong constant name word
# wrong constant name words_compose
# wrong constant name xstring_compose
# wrong constant name <static-init>
# wrong constant name emit_arg_inside_procarg0
# wrong constant name emit_arg_inside_procarg0=
# wrong constant name emit_encoding
# wrong constant name emit_encoding=
# wrong constant name emit_index
# wrong constant name emit_index=
# wrong constant name emit_lambda
# wrong constant name emit_lambda=
# wrong constant name emit_procarg0
# wrong constant name emit_procarg0=
# wrong constant name modernize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name class_definition_allowed?
# wrong constant name dynamic_const_definition_allowed?
# wrong constant name in_block?
# wrong constant name in_class?
# wrong constant name in_dynamic_block?
# wrong constant name in_lambda?
# wrong constant name indirectly_in_def?
# wrong constant name module_definition_allowed?
# wrong constant name pop
# wrong constant name push
# wrong constant name reset
# wrong constant name stack
# wrong constant name <static-init>
# wrong constant name pop
# wrong constant name push
# wrong constant name reset
# wrong constant name set
# wrong constant name stack
# wrong constant name top
# wrong constant name <static-init>
# wrong constant name warn_of_deprecation
# wrong constant name warned_of_deprecation=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Parser::Diagnostic'
# Did you mean?  initialize_dup
# wrong constant name <Class:Engine>
# wrong constant name arguments
# wrong constant name highlights
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name level
# wrong constant name location
# wrong constant name message
# wrong constant name reason
# wrong constant name render
# undefined method `initialize<defaultArg>1' for class `Parser::Diagnostic::Engine'
# Did you mean?  initialize_dup
# wrong constant name all_errors_are_fatal
# wrong constant name all_errors_are_fatal=
# wrong constant name consumer
# wrong constant name consumer=
# wrong constant name ignore?
# wrong constant name ignore_warnings
# wrong constant name ignore_warnings=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name process
# wrong constant name raise?
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `diagnostic<defaultArg>1' for class `Parser::Lexer'
# undefined method `diagnostic<defaultArg>2' for class `Parser::Lexer'
# undefined method `diagnostic<defaultArg>3' for class `Parser::Lexer'
# undefined method `emit<defaultArg>1' for class `Parser::Lexer'
# undefined method `emit<defaultArg>2' for class `Parser::Lexer'
# undefined method `emit<defaultArg>3' for class `Parser::Lexer'
# undefined method `emit_comment<defaultArg>1' for class `Parser::Lexer'
# undefined method `emit_comment<defaultArg>2' for class `Parser::Lexer'
# undefined method `emit_do<defaultArg>1' for class `Parser::Lexer'
# undefined method `emit_table<defaultArg>1' for class `Parser::Lexer'
# undefined method `emit_table<defaultArg>2' for class `Parser::Lexer'
# undefined method `range<defaultArg>1' for class `Parser::Lexer'
# undefined method `range<defaultArg>2' for class `Parser::Lexer'
# undefined method `reset<defaultArg>1' for class `Parser::Lexer'
# undefined method `tok<defaultArg>1' for class `Parser::Lexer'
# undefined method `tok<defaultArg>2' for class `Parser::Lexer'
# wrong constant name <Class:Dedenter>
# wrong constant name <Class:Literal>
# wrong constant name <Class:StackState>
# wrong constant name advance
# wrong constant name arg_or_cmdarg
# wrong constant name cmdarg
# wrong constant name cmdarg=
# wrong constant name command_start
# wrong constant name command_start=
# wrong constant name comments
# wrong constant name comments=
# wrong constant name cond
# wrong constant name cond=
# wrong constant name context
# wrong constant name context=
# wrong constant name dedent_level
# wrong constant name diagnostic<defaultArg>1
# wrong constant name diagnostic<defaultArg>2
# wrong constant name diagnostic<defaultArg>3
# wrong constant name diagnostic
# wrong constant name diagnostics
# wrong constant name diagnostics=
# wrong constant name emit<defaultArg>1
# wrong constant name emit<defaultArg>2
# wrong constant name emit<defaultArg>3
# wrong constant name emit
# wrong constant name emit_comment<defaultArg>1
# wrong constant name emit_comment<defaultArg>2
# wrong constant name emit_comment
# wrong constant name emit_do<defaultArg>1
# wrong constant name emit_do
# wrong constant name emit_table<defaultArg>1
# wrong constant name emit_table<defaultArg>2
# wrong constant name emit_table
# wrong constant name encode_escape
# wrong constant name encoding
# wrong constant name eof_codepoint?
# wrong constant name force_utf32
# wrong constant name force_utf32=
# wrong constant name in_kwarg
# wrong constant name in_kwarg=
# wrong constant name initialize
# wrong constant name literal
# wrong constant name next_state_for_literal
# wrong constant name pop_cmdarg
# wrong constant name pop_cond
# wrong constant name pop_literal
# wrong constant name push_cmdarg
# wrong constant name push_cond
# wrong constant name push_literal
# wrong constant name range<defaultArg>1
# wrong constant name range<defaultArg>2
# wrong constant name range
# wrong constant name reset<defaultArg>1
# wrong constant name reset
# wrong constant name source_buffer
# wrong constant name source_buffer=
# wrong constant name stack_pop
# wrong constant name state
# wrong constant name state=
# wrong constant name static_env
# wrong constant name static_env=
# wrong constant name tok<defaultArg>1
# wrong constant name tok<defaultArg>2
# wrong constant name tok
# wrong constant name tokens
# wrong constant name tokens=
# wrong constant name version?
# wrong constant name dedent
# wrong constant name initialize
# wrong constant name interrupt
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Parser::Lexer::Literal'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Parser::Lexer::Literal'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Parser::Lexer::Literal'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Parser::Lexer::Literal'
# Did you mean?  initialize_dup
# undefined method `nest_and_try_closing<defaultArg>1' for class `Parser::Lexer::Literal'
# wrong constant name backslash_delimited?
# wrong constant name clear_buffer
# wrong constant name coerce_encoding
# wrong constant name dedent_level
# wrong constant name delimiter?
# wrong constant name emit
# wrong constant name emit_start_tok
# wrong constant name end_interp_brace_and_try_closing
# wrong constant name extend_content
# wrong constant name extend_space
# wrong constant name extend_string
# wrong constant name flush_string
# wrong constant name heredoc?
# wrong constant name heredoc_e
# wrong constant name infer_indent_level
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize
# wrong constant name interpolate?
# wrong constant name munge_escape?
# wrong constant name nest_and_try_closing<defaultArg>1
# wrong constant name nest_and_try_closing
# wrong constant name plain_heredoc?
# wrong constant name regexp?
# wrong constant name saved_herebody_s
# wrong constant name saved_herebody_s=
# wrong constant name squiggly_heredoc?
# wrong constant name start_interp_brace
# wrong constant name str_s
# wrong constant name supports_line_continuation_via_slash?
# wrong constant name type
# wrong constant name words?
# wrong constant name <static-init>
# wrong constant name active?
# wrong constant name clear
# wrong constant name empty?
# wrong constant name initialize
# wrong constant name lexpop
# wrong constant name pop
# wrong constant name push
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name lex_en_expr_arg
# wrong constant name lex_en_expr_arg=
# wrong constant name lex_en_expr_beg
# wrong constant name lex_en_expr_beg=
# wrong constant name lex_en_expr_cmdarg
# wrong constant name lex_en_expr_cmdarg=
# wrong constant name lex_en_expr_dot
# wrong constant name lex_en_expr_dot=
# wrong constant name lex_en_expr_end
# wrong constant name lex_en_expr_end=
# wrong constant name lex_en_expr_endarg
# wrong constant name lex_en_expr_endarg=
# wrong constant name lex_en_expr_endfn
# wrong constant name lex_en_expr_endfn=
# wrong constant name lex_en_expr_fname
# wrong constant name lex_en_expr_fname=
# wrong constant name lex_en_expr_labelarg
# wrong constant name lex_en_expr_labelarg=
# wrong constant name lex_en_expr_mid
# wrong constant name lex_en_expr_mid=
# wrong constant name lex_en_expr_value
# wrong constant name lex_en_expr_value=
# wrong constant name lex_en_expr_variable
# wrong constant name lex_en_expr_variable=
# wrong constant name lex_en_interp_backslash_delimited
# wrong constant name lex_en_interp_backslash_delimited=
# wrong constant name lex_en_interp_backslash_delimited_words
# wrong constant name lex_en_interp_backslash_delimited_words=
# wrong constant name lex_en_interp_string
# wrong constant name lex_en_interp_string=
# wrong constant name lex_en_interp_words
# wrong constant name lex_en_interp_words=
# wrong constant name lex_en_leading_dot
# wrong constant name lex_en_leading_dot=
# wrong constant name lex_en_line_begin
# wrong constant name lex_en_line_begin=
# wrong constant name lex_en_line_comment
# wrong constant name lex_en_line_comment=
# wrong constant name lex_en_plain_backslash_delimited
# wrong constant name lex_en_plain_backslash_delimited=
# wrong constant name lex_en_plain_backslash_delimited_words
# wrong constant name lex_en_plain_backslash_delimited_words=
# wrong constant name lex_en_plain_string
# wrong constant name lex_en_plain_string=
# wrong constant name lex_en_plain_words
# wrong constant name lex_en_plain_words=
# wrong constant name lex_en_regexp_modifiers
# wrong constant name lex_en_regexp_modifiers=
# wrong constant name lex_error
# wrong constant name lex_error=
# wrong constant name lex_start
# wrong constant name lex_start=
# wrong constant name has_numparams?
# wrong constant name has_ordinary_params!
# wrong constant name has_ordinary_params?
# wrong constant name pop
# wrong constant name push
# wrong constant name register
# wrong constant name stack
# wrong constant name top
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name assignment?
# wrong constant name initialize
# wrong constant name insert_after
# wrong constant name insert_before
# wrong constant name remove
# wrong constant name replace
# wrong constant name rewrite
# wrong constant name wrap
# wrong constant name <static-init>
# wrong constant name <Class:Buffer>
# wrong constant name <Class:Comment>
# wrong constant name <Class:Map>
# wrong constant name <Class:Range>
# wrong constant name <Class:Rewriter>
# wrong constant name <Class:TreeRewriter>
# undefined method `initialize<defaultArg>1' for class `Parser::Source::Buffer'
# Did you mean?  initialize_dup
# wrong constant name column_for_position
# wrong constant name decompose_position
# wrong constant name first_line
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name last_line
# wrong constant name line_for_position
# wrong constant name line_range
# wrong constant name name
# wrong constant name raw_source=
# wrong constant name read
# wrong constant name slice
# wrong constant name source
# wrong constant name source=
# wrong constant name source_line
# wrong constant name source_lines
# wrong constant name source_range
# wrong constant name <static-init>
# wrong constant name recognize_encoding
# wrong constant name reencode_string
# wrong constant name ==
# wrong constant name <Class:Associator>
# wrong constant name document?
# wrong constant name initialize
# wrong constant name inline?
# wrong constant name loc
# wrong constant name location
# wrong constant name text
# wrong constant name type
# wrong constant name associate
# wrong constant name associate_locations
# wrong constant name initialize
# wrong constant name skip_directives
# wrong constant name skip_directives=
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name associate
# wrong constant name associate_locations
# wrong constant name ==
# wrong constant name <Class:Collection>
# wrong constant name <Class:Condition>
# wrong constant name <Class:Constant>
# wrong constant name <Class:Definition>
# wrong constant name <Class:For>
# wrong constant name <Class:Heredoc>
# wrong constant name <Class:Index>
# wrong constant name <Class:Keyword>
# wrong constant name <Class:ObjcKwarg>
# wrong constant name <Class:Operator>
# wrong constant name <Class:RescueBody>
# wrong constant name <Class:Send>
# wrong constant name <Class:Ternary>
# wrong constant name <Class:Variable>
# wrong constant name column
# wrong constant name expression
# wrong constant name first_line
# wrong constant name initialize
# wrong constant name last_column
# wrong constant name last_line
# wrong constant name line
# wrong constant name node
# wrong constant name node=
# wrong constant name to_hash
# wrong constant name update_expression
# wrong constant name with
# wrong constant name with_expression
# wrong constant name begin
# wrong constant name end
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name begin
# wrong constant name else
# wrong constant name end
# wrong constant name initialize
# wrong constant name keyword
# wrong constant name <static-init>
# wrong constant name double_colon
# wrong constant name initialize
# wrong constant name name
# wrong constant name operator
# wrong constant name update_operator
# wrong constant name with_operator
# wrong constant name <static-init>
# wrong constant name end
# wrong constant name initialize
# wrong constant name keyword
# wrong constant name name
# wrong constant name operator
# wrong constant name <static-init>
# wrong constant name begin
# wrong constant name end
# wrong constant name in
# wrong constant name initialize
# wrong constant name keyword
# wrong constant name <static-init>
# wrong constant name heredoc_body
# wrong constant name heredoc_end
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name begin
# wrong constant name end
# wrong constant name initialize
# wrong constant name operator
# wrong constant name update_operator
# wrong constant name with_operator
# wrong constant name <static-init>
# wrong constant name begin
# wrong constant name end
# wrong constant name initialize
# wrong constant name keyword
# wrong constant name <static-init>
# wrong constant name argument
# wrong constant name initialize
# wrong constant name keyword
# wrong constant name operator
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name operator
# wrong constant name <static-init>
# wrong constant name assoc
# wrong constant name begin
# wrong constant name initialize
# wrong constant name keyword
# wrong constant name <static-init>
# wrong constant name begin
# wrong constant name dot
# wrong constant name end
# wrong constant name initialize
# wrong constant name operator
# wrong constant name selector
# wrong constant name update_operator
# wrong constant name with_operator
# wrong constant name <static-init>
# wrong constant name colon
# wrong constant name initialize
# wrong constant name question
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Parser::Source::Map::Variable'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name name
# wrong constant name operator
# wrong constant name update_operator
# wrong constant name with_operator
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `adjust<defaultArg>1' for class `Parser::Source::Range'
# undefined method `adjust<defaultArg>2' for class `Parser::Source::Range'
# undefined method `with<defaultArg>1' for class `Parser::Source::Range'
# undefined method `with<defaultArg>2' for class `Parser::Source::Range'
# wrong constant name <=>
# wrong constant name adjust<defaultArg>1
# wrong constant name adjust<defaultArg>2
# wrong constant name adjust
# wrong constant name begin
# wrong constant name begin_pos
# wrong constant name column
# wrong constant name column_range
# wrong constant name contained?
# wrong constant name contains?
# wrong constant name crossing?
# wrong constant name disjoint?
# wrong constant name empty?
# wrong constant name end
# wrong constant name end_pos
# wrong constant name first_line
# wrong constant name initialize
# wrong constant name intersect
# wrong constant name is?
# wrong constant name join
# wrong constant name last_column
# wrong constant name last_line
# wrong constant name length
# wrong constant name line
# wrong constant name overlaps?
# wrong constant name resize
# wrong constant name size
# wrong constant name source
# wrong constant name source_buffer
# wrong constant name source_line
# wrong constant name to_a
# wrong constant name with<defaultArg>1
# wrong constant name with<defaultArg>2
# wrong constant name with
# wrong constant name <static-init>
# wrong constant name <Class:Action>
# wrong constant name diagnostics
# wrong constant name initialize
# wrong constant name insert_after
# wrong constant name insert_after_multi
# wrong constant name insert_before
# wrong constant name insert_before_multi
# wrong constant name process
# wrong constant name remove
# wrong constant name replace
# wrong constant name source_buffer
# wrong constant name transaction
# wrong constant name wrap
# undefined method `initialize<defaultArg>1' for class `Parser::Source::Rewriter::Action'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Parser::Source::Rewriter::Action'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Parser::Source::Rewriter::Action'
# Did you mean?  initialize_dup
# wrong constant name <=>
# wrong constant name allow_multiple_insertions
# wrong constant name allow_multiple_insertions?
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name order
# wrong constant name range
# wrong constant name replacement
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Parser::Source::TreeRewriter'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Parser::Source::TreeRewriter'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Parser::Source::TreeRewriter'
# Did you mean?  initialize_dup
# wrong constant name <Class:Action>
# wrong constant name diagnostics
# wrong constant name in_transaction?
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name insert_after
# wrong constant name insert_after_multi
# wrong constant name insert_before
# wrong constant name insert_before_multi
# wrong constant name process
# wrong constant name remove
# wrong constant name replace
# wrong constant name source_buffer
# wrong constant name transaction
# wrong constant name wrap
# undefined method `initialize<defaultArg>1' for class `Parser::Source::TreeRewriter::Action'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Parser::Source::TreeRewriter::Action'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Parser::Source::TreeRewriter::Action'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Parser::Source::TreeRewriter::Action'
# Did you mean?  initialize_dup
# undefined method `with<defaultArg>1' for class `Parser::Source::TreeRewriter::Action'
# undefined method `with<defaultArg>2' for class `Parser::Source::TreeRewriter::Action'
# undefined method `with<defaultArg>3' for class `Parser::Source::TreeRewriter::Action'
# undefined method `with<defaultArg>4' for class `Parser::Source::TreeRewriter::Action'
# undefined method `with<defaultArg>5' for class `Parser::Source::TreeRewriter::Action'
# wrong constant name call_enforcer_for_merge
# wrong constant name combine
# wrong constant name do_combine
# wrong constant name fuse_deletions
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize
# wrong constant name insert_after
# wrong constant name insert_before
# wrong constant name insertion?
# wrong constant name merge
# wrong constant name ordered_replacements
# wrong constant name place_in_hierachy
# wrong constant name range
# wrong constant name relationship_with
# wrong constant name replacement
# wrong constant name swallow
# wrong constant name with<defaultArg>1
# wrong constant name with<defaultArg>2
# wrong constant name with<defaultArg>3
# wrong constant name with<defaultArg>4
# wrong constant name with<defaultArg>5
# wrong constant name with
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name declare
# wrong constant name declare_forward_args
# wrong constant name declared?
# wrong constant name declared_forward_args?
# wrong constant name extend_dynamic
# wrong constant name extend_static
# wrong constant name reset
# wrong constant name unextend
# wrong constant name <static-init>
# wrong constant name diagnostic
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name assignment?
# wrong constant name insert_after
# wrong constant name insert_before
# wrong constant name remove
# wrong constant name replace
# wrong constant name rewrite
# wrong constant name wrap
# wrong constant name <static-init>
# wrong constant name declare
# wrong constant name declared?
# wrong constant name pop
# wrong constant name push
# wrong constant name reset
# wrong constant name <static-init>
# undefined method `children<defaultArg>1' for class `Pathname'
# undefined method `find<defaultArg>1' for class `Pathname'
# wrong constant name children<defaultArg>1
# wrong constant name empty?
# wrong constant name find<defaultArg>1
# wrong constant name fnmatch?
# wrong constant name glob
# wrong constant name make_symlink
# wrong constant name <<
# wrong constant name ===
# wrong constant name >>
# wrong constant name clone
# wrong constant name yield
# uninitialized constant Proc0
# uninitialized constant Proc0
# uninitialized constant Proc1
# uninitialized constant Proc1
# uninitialized constant Proc10
# uninitialized constant Proc10
# uninitialized constant Proc2
# uninitialized constant Proc2
# uninitialized constant Proc3
# uninitialized constant Proc3
# uninitialized constant Proc4
# uninitialized constant Proc4
# uninitialized constant Proc5
# uninitialized constant Proc5
# uninitialized constant Proc6
# uninitialized constant Proc6
# uninitialized constant Proc7
# uninitialized constant Proc7
# uninitialized constant Proc8
# uninitialized constant Proc8
# uninitialized constant Proc9
# uninitialized constant Proc9
# wrong constant name getegid
# wrong constant name cstime
# wrong constant name cstime=
# wrong constant name cutime
# wrong constant name cutime=
# wrong constant name stime
# wrong constant name stime=
# wrong constant name utime
# wrong constant name utime=
# wrong constant name []
# wrong constant name members
# wrong constant name last_status
# wrong constant name setpgrp
# wrong constant name <Class:Base>
# wrong constant name <Class:Calculators>
# wrong constant name <Class:Components>
# wrong constant name <Class:Format>
# wrong constant name <Class:InvalidProgressError>
# wrong constant name <Class:Output>
# wrong constant name <Class:Outputs>
# wrong constant name <Class:Progress>
# wrong constant name <Class:Refinements>
# wrong constant name <Class:Throttle>
# wrong constant name <Class:Time>
# wrong constant name <Class:Timer>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Base'
# Did you mean?  initialize_dup
# undefined method `start<defaultArg>1' for class `ProgressBar::Base'
# undefined method `to_s<defaultArg>1' for class `ProgressBar::Base'
# wrong constant name autofinish
# wrong constant name autofinish=
# wrong constant name autostart
# wrong constant name autostart=
# wrong constant name bar
# wrong constant name bar=
# wrong constant name clear
# wrong constant name decrement
# wrong constant name finish
# wrong constant name finished
# wrong constant name finished=
# wrong constant name finished?
# wrong constant name format
# wrong constant name format=
# wrong constant name increment
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name log
# wrong constant name output
# wrong constant name output=
# wrong constant name pause
# wrong constant name paused?
# wrong constant name percentage
# wrong constant name percentage=
# wrong constant name progress
# wrong constant name progress=
# wrong constant name progress_mark=
# wrong constant name progressable
# wrong constant name progressable=
# wrong constant name rate
# wrong constant name rate=
# wrong constant name refresh
# wrong constant name remainder_mark=
# wrong constant name reset
# wrong constant name resume
# wrong constant name start<defaultArg>1
# wrong constant name start
# wrong constant name started?
# wrong constant name stop
# wrong constant name stopped?
# wrong constant name time
# wrong constant name time=
# wrong constant name timer
# wrong constant name timer=
# wrong constant name title
# wrong constant name title=
# wrong constant name title_comp
# wrong constant name title_comp=
# wrong constant name to_h
# wrong constant name to_s<defaultArg>1
# wrong constant name to_s
# wrong constant name total
# wrong constant name total=
# wrong constant name update_progress
# wrong constant name <static-init>
# wrong constant name <Class:Length>
# wrong constant name <Class:RunningAverage>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Calculators::Length'
# Did you mean?  initialize_dup
# wrong constant name calculate_length
# wrong constant name current_length
# wrong constant name current_length=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name length
# wrong constant name length_changed?
# wrong constant name length_override
# wrong constant name length_override=
# wrong constant name output
# wrong constant name output=
# wrong constant name reset_length
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name calculate
# wrong constant name <static-init>
# wrong constant name <Class:Bar>
# wrong constant name <Class:Percentage>
# wrong constant name <Class:Rate>
# wrong constant name <Class:Time>
# wrong constant name <Class:Title>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Components::Bar'
# Did you mean?  initialize_dup
# undefined method `to_s<defaultArg>1' for class `ProgressBar::Components::Bar'
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name length
# wrong constant name length=
# wrong constant name progress
# wrong constant name progress=
# wrong constant name progress_mark
# wrong constant name progress_mark=
# wrong constant name remainder_mark
# wrong constant name remainder_mark=
# wrong constant name to_s<defaultArg>1
# wrong constant name to_s
# wrong constant name upa_steps
# wrong constant name upa_steps=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Components::Percentage'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name progress
# wrong constant name progress=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Components::Rate'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name progress
# wrong constant name progress=
# wrong constant name rate_scale
# wrong constant name rate_scale=
# wrong constant name started_at
# wrong constant name started_at=
# wrong constant name stopped_at
# wrong constant name stopped_at=
# wrong constant name timer
# wrong constant name timer=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Components::Time'
# Did you mean?  initialize_dup
# wrong constant name elapsed_with_label
# wrong constant name estimated_with_friendly_oob
# wrong constant name estimated_with_label
# wrong constant name estimated_with_no_oob
# wrong constant name estimated_with_unknown_oob
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name out_of_bounds_time_format
# wrong constant name out_of_bounds_time_format=
# wrong constant name progress
# wrong constant name progress=
# wrong constant name timer
# wrong constant name timer=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Components::Title'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name title
# wrong constant name title=
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:Formatter>
# wrong constant name <Class:Molecule>
# wrong constant name <Class:String>
# wrong constant name <static-init>
# wrong constant name process
# undefined method `lookup_value<defaultArg>1' for class `ProgressBar::Format::Molecule'
# wrong constant name bar_molecule?
# wrong constant name full_key
# wrong constant name initialize
# wrong constant name key
# wrong constant name key=
# wrong constant name lookup_value<defaultArg>1
# wrong constant name lookup_value
# wrong constant name method_name
# wrong constant name method_name=
# wrong constant name non_bar_molecule?
# wrong constant name <static-init>
# wrong constant name bar_molecule_placeholder_length
# wrong constant name bar_molecules
# wrong constant name displayable_length
# wrong constant name molecules
# wrong constant name non_bar_molecules
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Output'
# Did you mean?  initialize_dup
# undefined method `refresh<defaultArg>1' for class `ProgressBar::Output'
# wrong constant name bar
# wrong constant name bar=
# wrong constant name clear_string
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name length
# wrong constant name length_calculator
# wrong constant name length_calculator=
# wrong constant name log
# wrong constant name refresh<defaultArg>1
# wrong constant name refresh
# wrong constant name stream
# wrong constant name stream=
# wrong constant name throttle
# wrong constant name throttle=
# wrong constant name with_refresh
# undefined singleton method `detect<defaultArg>1' for `ProgressBar::Output'
# wrong constant name <static-init>
# wrong constant name detect<defaultArg>1
# wrong constant name detect
# wrong constant name <Class:NonTty>
# wrong constant name <Class:Tty>
# uninitialized constant ProgressBar::Outputs::NonTty::DEFAULT_OUTPUT_STREAM
# wrong constant name bar_update_string
# wrong constant name clear
# wrong constant name default_format
# wrong constant name eol
# wrong constant name last_update_length
# wrong constant name last_update_length=
# wrong constant name refresh_with_format_change
# wrong constant name resolve_format
# wrong constant name <static-init>
# uninitialized constant ProgressBar::Outputs::Tty::DEFAULT_OUTPUT_STREAM
# wrong constant name bar_update_string
# wrong constant name clear
# wrong constant name default_format
# wrong constant name eol
# wrong constant name refresh_with_format_change
# wrong constant name resolve_format
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Progress'
# Did you mean?  initialize_dup
# undefined method `start<defaultArg>1' for class `ProgressBar::Progress'
# wrong constant name absolute
# wrong constant name decrement
# wrong constant name finish
# wrong constant name finished?
# wrong constant name increment
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name none?
# wrong constant name percentage_completed
# wrong constant name percentage_completed_with_precision
# wrong constant name progress
# wrong constant name progress=
# wrong constant name reset
# wrong constant name running_average
# wrong constant name running_average=
# wrong constant name smoothing
# wrong constant name smoothing=
# wrong constant name start<defaultArg>1
# wrong constant name start
# wrong constant name starting_position
# wrong constant name starting_position=
# wrong constant name total
# wrong constant name total=
# wrong constant name total_with_unknown_indicator
# wrong constant name unknown?
# wrong constant name <static-init>
# wrong constant name <Class:Enumerator>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `choke<defaultArg>1' for class `ProgressBar::Throttle'
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Throttle'
# Did you mean?  initialize_dup
# wrong constant name choke<defaultArg>1
# wrong constant name choke
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name rate
# wrong constant name rate=
# wrong constant name started_at
# wrong constant name started_at=
# wrong constant name stopped_at
# wrong constant name stopped_at=
# wrong constant name timer
# wrong constant name timer=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Time'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name now
# wrong constant name time
# wrong constant name time=
# wrong constant name unmocked_time_method
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `ProgressBar::Timer'
# Did you mean?  initialize_dup
# wrong constant name divide_seconds
# wrong constant name elapsed_seconds
# wrong constant name elapsed_whole_seconds
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name pause
# wrong constant name reset
# wrong constant name reset?
# wrong constant name restart
# wrong constant name resume
# wrong constant name start
# wrong constant name started?
# wrong constant name started_at
# wrong constant name started_at=
# wrong constant name stop
# wrong constant name stopped?
# wrong constant name stopped_at
# wrong constant name stopped_at=
# wrong constant name time
# wrong constant name time=
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name create
# wrong constant name <Class:BadAlias>
# wrong constant name <Class:ClassLoader>
# wrong constant name <Class:Coder>
# wrong constant name <Class:DisallowedClass>
# wrong constant name <Class:Emitter>
# wrong constant name <Class:Exception>
# wrong constant name <Class:Handler>
# wrong constant name <Class:Handlers>
# wrong constant name <Class:JSON>
# wrong constant name <Class:Nodes>
# wrong constant name <Class:Omap>
# wrong constant name <Class:Parser>
# wrong constant name <Class:ScalarScanner>
# wrong constant name <Class:Set>
# wrong constant name <Class:Stream>
# wrong constant name <Class:Streaming>
# wrong constant name <Class:SyntaxError>
# wrong constant name <Class:TreeBuilder>
# wrong constant name <Class:Visitors>
# wrong constant name <static-init>
# wrong constant name <Class:Restricted>
# wrong constant name big_decimal
# wrong constant name complex
# wrong constant name date
# wrong constant name date_time
# wrong constant name exception
# wrong constant name load
# wrong constant name object
# wrong constant name psych_omap
# wrong constant name psych_set
# wrong constant name range
# wrong constant name rational
# wrong constant name regexp
# wrong constant name struct
# wrong constant name symbol
# wrong constant name symbolize
# uninitialized constant Psych::ClassLoader::Restricted::BIG_DECIMAL
# Did you mean?  BigDecimal
#                Psych::ClassLoader::BIG_DECIMAL
# uninitialized constant Psych::ClassLoader::Restricted::CACHE
# Did you mean?  Psych::ClassLoader::CACHE
# uninitialized constant Psych::ClassLoader::Restricted::COMPLEX
# Did you mean?  Complex
#                Psych::ClassLoader::COMPLEX
# uninitialized constant Psych::ClassLoader::Restricted::DATE
# Did you mean?  Date
#                Data
#                Psych::ClassLoader::DATE
# uninitialized constant Psych::ClassLoader::Restricted::DATE_TIME
# Did you mean?  DateTime
#                Psych::ClassLoader::DATE_TIME
# uninitialized constant Psych::ClassLoader::Restricted::EXCEPTION
# Did you mean?  Psych::Exception
#                Exception
#                Psych::ClassLoader::EXCEPTION
# uninitialized constant Psych::ClassLoader::Restricted::OBJECT
# Did you mean?  Object
#                Psych::ClassLoader::OBJECT
# uninitialized constant Psych::ClassLoader::Restricted::PSYCH_OMAP
# Did you mean?  Psych::ClassLoader::PSYCH_OMAP
# uninitialized constant Psych::ClassLoader::Restricted::PSYCH_SET
# Did you mean?  Psych::ClassLoader::PSYCH_SET
# uninitialized constant Psych::ClassLoader::Restricted::RANGE
# Did you mean?  Range
#                Psych::ClassLoader::RANGE
# uninitialized constant Psych::ClassLoader::Restricted::RATIONAL
# Did you mean?  Rational
#                Psych::ClassLoader::RATIONAL
# uninitialized constant Psych::ClassLoader::Restricted::REGEXP
# Did you mean?  Regexp
#                Psych::ClassLoader::REGEXP
# uninitialized constant Psych::ClassLoader::Restricted::STRUCT
# Did you mean?  Struct
#                Psych::ClassLoader::STRUCT
# uninitialized constant Psych::ClassLoader::Restricted::SYMBOL
# Did you mean?  Symbol
#                Psych::ClassLoader::SYMBOL
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `map<defaultArg>1' for class `Psych::Coder'
# undefined method `map<defaultArg>2' for class `Psych::Coder'
# wrong constant name []
# wrong constant name []=
# wrong constant name add
# wrong constant name implicit
# wrong constant name implicit=
# wrong constant name initialize
# wrong constant name map<defaultArg>1
# wrong constant name map<defaultArg>2
# wrong constant name map
# wrong constant name map=
# wrong constant name object
# wrong constant name object=
# wrong constant name represent_map
# wrong constant name represent_object
# wrong constant name represent_scalar
# wrong constant name represent_seq
# wrong constant name scalar
# wrong constant name scalar=
# wrong constant name seq
# wrong constant name seq=
# wrong constant name style
# wrong constant name style=
# wrong constant name tag
# wrong constant name tag=
# wrong constant name type
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# uninitialized constant Psych::Emitter::EVENTS
# uninitialized constant Psych::Emitter::OPTIONS
# wrong constant name alias
# wrong constant name canonical
# wrong constant name canonical=
# wrong constant name end_document
# wrong constant name indentation
# wrong constant name indentation=
# wrong constant name initialize
# wrong constant name line_width
# wrong constant name line_width=
# wrong constant name scalar
# wrong constant name start_document
# wrong constant name start_mapping
# wrong constant name start_sequence
# wrong constant name start_stream
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:DumperOptions>
# wrong constant name alias
# wrong constant name empty
# wrong constant name end_document
# wrong constant name end_mapping
# wrong constant name end_sequence
# wrong constant name end_stream
# wrong constant name event_location
# wrong constant name scalar
# wrong constant name start_document
# wrong constant name start_mapping
# wrong constant name start_sequence
# wrong constant name start_stream
# wrong constant name streaming?
# wrong constant name canonical
# wrong constant name canonical=
# wrong constant name indentation
# wrong constant name indentation=
# wrong constant name line_width
# wrong constant name line_width=
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:DocumentStream>
# uninitialized constant Psych::Handlers::DocumentStream::EVENTS
# uninitialized constant Psych::Handlers::DocumentStream::OPTIONS
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:RubyEvents>
# wrong constant name <Class:Stream>
# wrong constant name <Class:TreeBuilder>
# wrong constant name <Class:YAMLEvents>
# wrong constant name visit_DateTime
# wrong constant name visit_String
# wrong constant name visit_Symbol
# wrong constant name visit_Time
# wrong constant name <static-init>
# uninitialized constant Psych::JSON::Stream::DISPATCH
# wrong constant name <Class:Emitter>
# uninitialized constant Psych::JSON::Stream::Emitter::EVENTS
# uninitialized constant Psych::JSON::Stream::Emitter::OPTIONS
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant Psych::JSON::TreeBuilder::EVENTS
# uninitialized constant Psych::JSON::TreeBuilder::OPTIONS
# wrong constant name <static-init>
# undefined method `end_document<defaultArg>1' for module `Psych::JSON::YAMLEvents'
# wrong constant name end_document<defaultArg>1
# wrong constant name end_document
# wrong constant name scalar
# wrong constant name start_document
# wrong constant name start_mapping
# wrong constant name start_sequence
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:Alias>
# wrong constant name <Class:Document>
# wrong constant name <Class:Mapping>
# wrong constant name <Class:Node>
# wrong constant name <Class:Scalar>
# wrong constant name <Class:Sequence>
# wrong constant name <Class:Stream>
# uninitialized constant Psych::Nodes::Alias::Elem
# wrong constant name anchor
# wrong constant name anchor=
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Psych::Nodes::Document'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Psych::Nodes::Document'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Psych::Nodes::Document'
# Did you mean?  initialize_dup
# uninitialized constant Psych::Nodes::Document::Elem
# wrong constant name implicit
# wrong constant name implicit=
# wrong constant name implicit_end
# wrong constant name implicit_end=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name root
# wrong constant name tag_directives
# wrong constant name tag_directives=
# wrong constant name version
# wrong constant name version=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Psych::Nodes::Mapping'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Psych::Nodes::Mapping'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Psych::Nodes::Mapping'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Psych::Nodes::Mapping'
# Did you mean?  initialize_dup
# uninitialized constant Psych::Nodes::Mapping::Elem
# wrong constant name anchor
# wrong constant name anchor=
# wrong constant name implicit
# wrong constant name implicit=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize
# wrong constant name style
# wrong constant name style=
# wrong constant name tag=
# wrong constant name <static-init>
# undefined method `to_yaml<defaultArg>1' for class `Psych::Nodes::Node'
# undefined method `to_yaml<defaultArg>2' for class `Psych::Nodes::Node'
# undefined method `yaml<defaultArg>1' for class `Psych::Nodes::Node'
# undefined method `yaml<defaultArg>2' for class `Psych::Nodes::Node'
# uninitialized constant Psych::Nodes::Node::Elem
# wrong constant name alias?
# wrong constant name children
# wrong constant name document?
# wrong constant name each
# wrong constant name end_column
# wrong constant name end_column=
# wrong constant name end_line
# wrong constant name end_line=
# wrong constant name mapping?
# wrong constant name scalar?
# wrong constant name sequence?
# wrong constant name start_column
# wrong constant name start_column=
# wrong constant name start_line
# wrong constant name start_line=
# wrong constant name stream?
# wrong constant name tag
# wrong constant name to_ruby
# wrong constant name to_yaml<defaultArg>1
# wrong constant name to_yaml<defaultArg>2
# wrong constant name to_yaml
# wrong constant name transform
# wrong constant name yaml<defaultArg>1
# wrong constant name yaml<defaultArg>2
# wrong constant name yaml
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Psych::Nodes::Scalar'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Psych::Nodes::Scalar'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Psych::Nodes::Scalar'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Psych::Nodes::Scalar'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>5' for class `Psych::Nodes::Scalar'
# Did you mean?  initialize_dup
# uninitialized constant Psych::Nodes::Scalar::Elem
# wrong constant name anchor
# wrong constant name anchor=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize<defaultArg>5
# wrong constant name initialize
# wrong constant name plain
# wrong constant name plain=
# wrong constant name quoted
# wrong constant name quoted=
# wrong constant name style
# wrong constant name style=
# wrong constant name tag=
# wrong constant name value
# wrong constant name value=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Psych::Nodes::Sequence'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Psych::Nodes::Sequence'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Psych::Nodes::Sequence'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Psych::Nodes::Sequence'
# Did you mean?  initialize_dup
# uninitialized constant Psych::Nodes::Sequence::Elem
# wrong constant name anchor
# wrong constant name anchor=
# wrong constant name implicit
# wrong constant name implicit=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize
# wrong constant name style
# wrong constant name style=
# wrong constant name tag=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Psych::Nodes::Stream'
# Did you mean?  initialize_dup
# uninitialized constant Psych::Nodes::Stream::Elem
# wrong constant name encoding
# wrong constant name encoding=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant Psych::Omap::Elem
# uninitialized constant Psych::Omap::K
# uninitialized constant Psych::Omap::V
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Psych::Parser'
# Did you mean?  initialize_dup
# wrong constant name <Class:Mark>
# wrong constant name external_encoding=
# wrong constant name handler
# wrong constant name handler=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name mark
# wrong constant name parse
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name class_loader
# wrong constant name initialize
# wrong constant name parse_int
# wrong constant name parse_time
# wrong constant name tokenize
# wrong constant name <static-init>
# uninitialized constant Psych::Set::Elem
# uninitialized constant Psych::Set::K
# uninitialized constant Psych::Set::V
# wrong constant name <static-init>
# uninitialized constant Psych::Stream::DISPATCH
# wrong constant name <Class:Emitter>
# undefined method `end_document<defaultArg>1' for class `Psych::Stream::Emitter'
# uninitialized constant Psych::Stream::Emitter::EVENTS
# uninitialized constant Psych::Stream::Emitter::OPTIONS
# wrong constant name end_document<defaultArg>1
# wrong constant name end_document
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `start<defaultArg>1' for module `Psych::Streaming'
# wrong constant name <Class:ClassMethods>
# wrong constant name start<defaultArg>1
# wrong constant name start
# wrong constant name new
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name column
# wrong constant name context
# wrong constant name file
# wrong constant name initialize
# wrong constant name line
# wrong constant name offset
# wrong constant name problem
# wrong constant name <static-init>
# undefined method `end_document<defaultArg>1' for class `Psych::TreeBuilder'
# uninitialized constant Psych::TreeBuilder::EVENTS
# uninitialized constant Psych::TreeBuilder::OPTIONS
# wrong constant name end_document<defaultArg>1
# wrong constant name end_document
# wrong constant name root
# wrong constant name <static-init>
# wrong constant name <Class:DepthFirst>
# wrong constant name <Class:Emitter>
# wrong constant name <Class:JSONTree>
# wrong constant name <Class:NoAliasRuby>
# wrong constant name <Class:ToRuby>
# wrong constant name <Class:Visitor>
# wrong constant name <Class:YAMLTree>
# uninitialized constant Psych::Visitors::DepthFirst::DISPATCH
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Psych::Visitors::Emitter'
# Did you mean?  initialize_dup
# uninitialized constant Psych::Visitors::Emitter::DISPATCH
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name visit_Psych_Nodes_Alias
# wrong constant name visit_Psych_Nodes_Document
# wrong constant name visit_Psych_Nodes_Mapping
# wrong constant name visit_Psych_Nodes_Scalar
# wrong constant name visit_Psych_Nodes_Sequence
# wrong constant name visit_Psych_Nodes_Stream
# wrong constant name <static-init>
# uninitialized constant Psych::Visitors::JSONTree::DISPATCH
# undefined singleton method `create<defaultArg>1' for `Psych::Visitors::JSONTree'
# wrong constant name <static-init>
# wrong constant name create<defaultArg>1
# wrong constant name create
# uninitialized constant Psych::Visitors::NoAliasRuby::DISPATCH
# uninitialized constant Psych::Visitors::NoAliasRuby::SHOVEL
# wrong constant name <static-init>
# uninitialized constant Psych::Visitors::ToRuby::DISPATCH
# wrong constant name class_loader
# wrong constant name initialize
# wrong constant name visit_Psych_Nodes_Alias
# wrong constant name visit_Psych_Nodes_Document
# wrong constant name visit_Psych_Nodes_Mapping
# wrong constant name visit_Psych_Nodes_Scalar
# wrong constant name visit_Psych_Nodes_Sequence
# wrong constant name visit_Psych_Nodes_Stream
# wrong constant name <static-init>
# wrong constant name create
# wrong constant name accept
# wrong constant name <static-init>
# undefined method `start<defaultArg>1' for class `Psych::Visitors::YAMLTree'
# wrong constant name <<
# uninitialized constant Psych::Visitors::YAMLTree::DISPATCH
# wrong constant name finish
# wrong constant name finished
# wrong constant name finished?
# wrong constant name initialize
# wrong constant name push
# wrong constant name start<defaultArg>1
# wrong constant name start
# wrong constant name started
# wrong constant name started?
# wrong constant name tree
# wrong constant name visit_Array
# wrong constant name visit_BasicObject
# wrong constant name visit_BigDecimal
# wrong constant name visit_Class
# wrong constant name visit_Complex
# wrong constant name visit_Date
# wrong constant name visit_DateTime
# wrong constant name visit_Delegator
# wrong constant name visit_Encoding
# wrong constant name visit_Enumerator
# wrong constant name visit_Exception
# wrong constant name visit_FalseClass
# wrong constant name visit_Float
# wrong constant name visit_Hash
# wrong constant name visit_Integer
# wrong constant name visit_Module
# wrong constant name visit_NameError
# wrong constant name visit_NilClass
# wrong constant name visit_Object
# wrong constant name visit_Psych_Omap
# wrong constant name visit_Psych_Set
# wrong constant name visit_Range
# wrong constant name visit_Rational
# wrong constant name visit_Regexp
# wrong constant name visit_String
# wrong constant name visit_Struct
# wrong constant name visit_Symbol
# wrong constant name visit_Time
# wrong constant name visit_TrueClass
# undefined singleton method `create<defaultArg>1' for `Psych::Visitors::YAMLTree'
# undefined singleton method `create<defaultArg>2' for `Psych::Visitors::YAMLTree'
# wrong constant name <static-init>
# wrong constant name create<defaultArg>1
# wrong constant name create<defaultArg>2
# wrong constant name create
# wrong constant name <static-init>
# undefined singleton method `dump<defaultArg>1' for `Psych'
# undefined singleton method `dump<defaultArg>2' for `Psych'
# undefined singleton method `load<defaultArg>1' for `Psych'
# undefined singleton method `load<defaultArg>2' for `Psych'
# undefined singleton method `load<defaultArg>3' for `Psych'
# undefined singleton method `load<defaultArg>4' for `Psych'
# undefined singleton method `load_file<defaultArg>1' for `Psych'
# undefined singleton method `load_stream<defaultArg>1' for `Psych'
# undefined singleton method `load_stream<defaultArg>2' for `Psych'
# undefined singleton method `load_stream<defaultArg>3' for `Psych'
# undefined singleton method `parse<defaultArg>1' for `Psych'
# undefined singleton method `parse<defaultArg>2' for `Psych'
# undefined singleton method `parse<defaultArg>3' for `Psych'
# undefined singleton method `parse_file<defaultArg>1' for `Psych'
# undefined singleton method `parse_stream<defaultArg>1' for `Psych'
# undefined singleton method `parse_stream<defaultArg>2' for `Psych'
# undefined singleton method `safe_load<defaultArg>10' for `Psych'
# undefined singleton method `safe_load<defaultArg>1' for `Psych'
# undefined singleton method `safe_load<defaultArg>2' for `Psych'
# undefined singleton method `safe_load<defaultArg>3' for `Psych'
# undefined singleton method `safe_load<defaultArg>4' for `Psych'
# undefined singleton method `safe_load<defaultArg>5' for `Psych'
# undefined singleton method `safe_load<defaultArg>6' for `Psych'
# undefined singleton method `safe_load<defaultArg>7' for `Psych'
# undefined singleton method `safe_load<defaultArg>8' for `Psych'
# undefined singleton method `safe_load<defaultArg>9' for `Psych'
# wrong constant name <static-init>
# wrong constant name add_builtin_type
# wrong constant name add_domain_type
# wrong constant name add_tag
# wrong constant name domain_types
# wrong constant name domain_types=
# wrong constant name dump<defaultArg>1
# wrong constant name dump<defaultArg>2
# wrong constant name dump
# wrong constant name dump_stream
# wrong constant name dump_tags
# wrong constant name dump_tags=
# wrong constant name libyaml_version
# wrong constant name load<defaultArg>1
# wrong constant name load<defaultArg>2
# wrong constant name load<defaultArg>3
# wrong constant name load<defaultArg>4
# wrong constant name load
# wrong constant name load_file<defaultArg>1
# wrong constant name load_file
# wrong constant name load_stream<defaultArg>1
# wrong constant name load_stream<defaultArg>2
# wrong constant name load_stream<defaultArg>3
# wrong constant name load_stream
# wrong constant name load_tags
# wrong constant name load_tags=
# wrong constant name parse<defaultArg>1
# wrong constant name parse<defaultArg>2
# wrong constant name parse<defaultArg>3
# wrong constant name parse
# wrong constant name parse_file<defaultArg>1
# wrong constant name parse_file
# wrong constant name parse_stream<defaultArg>1
# wrong constant name parse_stream<defaultArg>2
# wrong constant name parse_stream
# wrong constant name parser
# wrong constant name remove_type
# wrong constant name safe_load<defaultArg>10
# wrong constant name safe_load<defaultArg>1
# wrong constant name safe_load<defaultArg>2
# wrong constant name safe_load<defaultArg>3
# wrong constant name safe_load<defaultArg>4
# wrong constant name safe_load<defaultArg>5
# wrong constant name safe_load<defaultArg>6
# wrong constant name safe_load<defaultArg>7
# wrong constant name safe_load<defaultArg>8
# wrong constant name safe_load<defaultArg>9
# wrong constant name safe_load
# wrong constant name to_json
# wrong constant name <Class:AttlistDecl>
# wrong constant name <Class:Attribute>
# wrong constant name <Class:Attributes>
# wrong constant name <Class:CData>
# wrong constant name <Class:Child>
# wrong constant name <Class:Comment>
# wrong constant name <Class:Declaration>
# wrong constant name <Class:DocType>
# wrong constant name <Class:Document>
# wrong constant name <Class:Element>
# wrong constant name <Class:ElementDecl>
# wrong constant name <Class:Elements>
# wrong constant name <Class:Encoding>
# wrong constant name <Class:Entity>
# wrong constant name <Class:EntityConst>
# wrong constant name <Class:ExternalEntity>
# wrong constant name <Class:Formatters>
# wrong constant name <Class:Functions>
# wrong constant name <Class:IOSource>
# wrong constant name <Class:Instruction>
# wrong constant name <Class:Namespace>
# wrong constant name <Class:Node>
# wrong constant name <Class:NotationDecl>
# wrong constant name <Class:Output>
# wrong constant name <Class:Parent>
# wrong constant name <Class:ParseException>
# wrong constant name <Class:Parsers>
# wrong constant name <Class:Security>
# wrong constant name <Class:Source>
# wrong constant name <Class:SourceFactory>
# wrong constant name <Class:Text>
# wrong constant name <Class:UndefinedNamespaceException>
# wrong constant name <Class:Validation>
# wrong constant name <Class:XMLDecl>
# wrong constant name <Class:XMLTokens>
# wrong constant name <Class:XPath>
# wrong constant name <Class:XPathNode>
# wrong constant name <Class:XPathParser>
# undefined method `write<defaultArg>1' for class `REXML::AttlistDecl'
# uninitialized constant REXML::AttlistDecl::Elem
# Did you mean?  REXML::Element
# wrong constant name []
# wrong constant name each
# wrong constant name element_name
# wrong constant name include?
# wrong constant name initialize
# wrong constant name node_type
# wrong constant name write<defaultArg>1
# wrong constant name write
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::Attribute'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::Attribute'
# Did you mean?  initialize_dup
# undefined method `namespace<defaultArg>1' for class `REXML::Attribute'
# undefined method `write<defaultArg>1' for class `REXML::Attribute'
# wrong constant name ==
# uninitialized constant REXML::Attribute::NAME
# uninitialized constant REXML::Attribute::NAMECHAR
# Did you mean?  REXML::Attribute::NAME_CHAR
# uninitialized constant REXML::Attribute::NAMESPLIT
# Did you mean?  REXML::Namespace
# uninitialized constant REXML::Attribute::NAME_CHAR
# Did you mean?  REXML::Attribute::NAME_STR
#                REXML::Attribute::NAMECHAR
# uninitialized constant REXML::Attribute::NAME_START_CHAR
# uninitialized constant REXML::Attribute::NAME_STR
# Did you mean?  REXML::Attribute::NCNAME_STR
# uninitialized constant REXML::Attribute::NCNAME_STR
# Did you mean?  REXML::Attribute::NAME_STR
# uninitialized constant REXML::Attribute::NMTOKEN
# Did you mean?  Token
#                REXML::Attribute::NMTOKENS
# uninitialized constant REXML::Attribute::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::Attribute::REFERENCE
# wrong constant name clone
# wrong constant name doctype
# wrong constant name element
# wrong constant name element=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name namespace<defaultArg>1
# wrong constant name namespace
# wrong constant name node_type
# wrong constant name normalized=
# wrong constant name remove
# wrong constant name to_s
# wrong constant name to_string
# wrong constant name value
# wrong constant name write<defaultArg>1
# wrong constant name write
# wrong constant name xpath
# wrong constant name <static-init>
# wrong constant name <<
# uninitialized constant REXML::Attributes::Elem
# Did you mean?  REXML::Element
# uninitialized constant REXML::Attributes::K
# uninitialized constant REXML::Attributes::V
# wrong constant name []
# wrong constant name []=
# wrong constant name add
# wrong constant name delete
# wrong constant name delete_all
# wrong constant name each_attribute
# wrong constant name get_attribute
# wrong constant name get_attribute_ns
# wrong constant name initialize
# wrong constant name namespaces
# wrong constant name prefixes
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::CData'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::CData'
# Did you mean?  initialize_dup
# undefined method `write<defaultArg>1' for class `REXML::CData'
# undefined method `write<defaultArg>2' for class `REXML::CData'
# undefined method `write<defaultArg>3' for class `REXML::CData'
# undefined method `write<defaultArg>4' for class `REXML::CData'
# uninitialized constant REXML::CData::EREFERENCE
# uninitialized constant REXML::CData::NEEDS_A_SECOND_CHECK
# uninitialized constant REXML::CData::NUMERICENTITY
# uninitialized constant REXML::CData::REFERENCE
# uninitialized constant REXML::CData::SETUTITSBUS
# uninitialized constant REXML::CData::SLAICEPS
# uninitialized constant REXML::CData::SPECIALS
# uninitialized constant REXML::CData::SUBSTITUTES
# uninitialized constant REXML::CData::VALID_CHAR
# uninitialized constant REXML::CData::VALID_XML_CHARS
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name write<defaultArg>1
# wrong constant name write<defaultArg>2
# wrong constant name write<defaultArg>3
# wrong constant name write<defaultArg>4
# wrong constant name write
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::Child'
# Did you mean?  initialize_dup
# wrong constant name bytes
# wrong constant name document
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name next_sibling
# wrong constant name next_sibling=
# wrong constant name parent
# wrong constant name parent=
# wrong constant name previous_sibling
# wrong constant name previous_sibling=
# wrong constant name remove
# wrong constant name replace_with
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::Comment'
# Did you mean?  initialize_dup
# undefined method `write<defaultArg>1' for class `REXML::Comment'
# undefined method `write<defaultArg>2' for class `REXML::Comment'
# undefined method `write<defaultArg>3' for class `REXML::Comment'
# wrong constant name <=>
# wrong constant name ==
# wrong constant name clone
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name node_type
# wrong constant name string
# wrong constant name string=
# wrong constant name to_s
# wrong constant name write<defaultArg>1
# wrong constant name write<defaultArg>2
# wrong constant name write<defaultArg>3
# wrong constant name write
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name to_s
# wrong constant name write
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::DocType'
# Did you mean?  initialize_dup
# undefined method `write<defaultArg>1' for class `REXML::DocType'
# undefined method `write<defaultArg>2' for class `REXML::DocType'
# undefined method `write<defaultArg>3' for class `REXML::DocType'
# uninitialized constant REXML::DocType::Elem
# Did you mean?  REXML::Element
# uninitialized constant REXML::DocType::NAME
# uninitialized constant REXML::DocType::NAMECHAR
# Did you mean?  REXML::DocType::NAME_CHAR
# uninitialized constant REXML::DocType::NAME_CHAR
# Did you mean?  REXML::DocType::NAME_STR
#                REXML::DocType::NAMECHAR
# uninitialized constant REXML::DocType::NAME_START_CHAR
# uninitialized constant REXML::DocType::NAME_STR
# Did you mean?  REXML::DocType::NCNAME_STR
# uninitialized constant REXML::DocType::NCNAME_STR
# Did you mean?  REXML::DocType::NAME_STR
# uninitialized constant REXML::DocType::NMTOKEN
# Did you mean?  Token
#                REXML::DocType::NMTOKENS
# uninitialized constant REXML::DocType::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::DocType::REFERENCE
# wrong constant name add
# wrong constant name attribute_of
# wrong constant name attributes_of
# wrong constant name clone
# wrong constant name context
# wrong constant name entities
# wrong constant name entity
# wrong constant name external_id
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name name
# wrong constant name namespaces
# wrong constant name node_type
# wrong constant name notation
# wrong constant name notations
# wrong constant name public
# wrong constant name system
# wrong constant name write<defaultArg>1
# wrong constant name write<defaultArg>2
# wrong constant name write<defaultArg>3
# wrong constant name write
# wrong constant name <static-init>
# undefined method `add_element<defaultArg>1' for class `REXML::Document'
# undefined method `add_element<defaultArg>2' for class `REXML::Document'
# undefined method `initialize<defaultArg>1' for class `REXML::Document'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::Document'
# Did you mean?  initialize_dup
# wrong constant name <<
# uninitialized constant REXML::Document::Elem
# Did you mean?  REXML::Element
# uninitialized constant REXML::Document::NAME
# uninitialized constant REXML::Document::NAMECHAR
# Did you mean?  REXML::Document::NAME_CHAR
# uninitialized constant REXML::Document::NAMESPLIT
# Did you mean?  REXML::Namespace
# uninitialized constant REXML::Document::NAME_CHAR
# Did you mean?  REXML::Document::NAME_STR
#                REXML::Document::NAMECHAR
# uninitialized constant REXML::Document::NAME_START_CHAR
# uninitialized constant REXML::Document::NAME_STR
# Did you mean?  REXML::Document::NCNAME_STR
# uninitialized constant REXML::Document::NCNAME_STR
# Did you mean?  REXML::Document::NAME_STR
# uninitialized constant REXML::Document::NMTOKEN
# Did you mean?  Token
#                REXML::Document::NMTOKENS
# uninitialized constant REXML::Document::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::Document::REFERENCE
# uninitialized constant REXML::Document::UNDEFINED
# wrong constant name add
# wrong constant name add_element<defaultArg>1
# wrong constant name add_element<defaultArg>2
# wrong constant name add_element
# wrong constant name doctype
# wrong constant name encoding
# wrong constant name entity_expansion_count
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name record_entity_expansion
# wrong constant name stand_alone?
# wrong constant name version
# wrong constant name write
# wrong constant name xml_decl
# wrong constant name <static-init>
# wrong constant name entity_expansion_limit
# wrong constant name entity_expansion_limit=
# wrong constant name entity_expansion_text_limit
# wrong constant name entity_expansion_text_limit=
# wrong constant name parse_stream
# undefined method `add_attribute<defaultArg>1' for class `REXML::Element'
# undefined method `add_element<defaultArg>1' for class `REXML::Element'
# undefined method `add_namespace<defaultArg>1' for class `REXML::Element'
# undefined method `attribute<defaultArg>1' for class `REXML::Element'
# undefined method `delete_namespace<defaultArg>1' for class `REXML::Element'
# undefined method `each_element<defaultArg>1' for class `REXML::Element'
# undefined method `each_element_with_attribute<defaultArg>1' for class `REXML::Element'
# undefined method `each_element_with_attribute<defaultArg>2' for class `REXML::Element'
# undefined method `each_element_with_attribute<defaultArg>3' for class `REXML::Element'
# undefined method `each_element_with_text<defaultArg>1' for class `REXML::Element'
# undefined method `each_element_with_text<defaultArg>2' for class `REXML::Element'
# undefined method `each_element_with_text<defaultArg>3' for class `REXML::Element'
# undefined method `get_text<defaultArg>1' for class `REXML::Element'
# undefined method `initialize<defaultArg>1' for class `REXML::Element'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::Element'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `REXML::Element'
# Did you mean?  initialize_dup
# undefined method `namespace<defaultArg>1' for class `REXML::Element'
# undefined method `text<defaultArg>1' for class `REXML::Element'
# undefined method `write<defaultArg>1' for class `REXML::Element'
# undefined method `write<defaultArg>2' for class `REXML::Element'
# undefined method `write<defaultArg>3' for class `REXML::Element'
# undefined method `write<defaultArg>4' for class `REXML::Element'
# uninitialized constant REXML::Element::Elem
# uninitialized constant REXML::Element::NAME
# uninitialized constant REXML::Element::NAMECHAR
# Did you mean?  REXML::Element::NAME_CHAR
# uninitialized constant REXML::Element::NAMESPLIT
# Did you mean?  REXML::Namespace
# uninitialized constant REXML::Element::NAME_CHAR
# Did you mean?  REXML::Element::NAME_STR
#                REXML::Element::NAMECHAR
# uninitialized constant REXML::Element::NAME_START_CHAR
# uninitialized constant REXML::Element::NAME_STR
# Did you mean?  REXML::Element::NCNAME_STR
# uninitialized constant REXML::Element::NCNAME_STR
# Did you mean?  REXML::Element::NAME_STR
# uninitialized constant REXML::Element::NMTOKEN
# Did you mean?  Token
#                REXML::Element::NMTOKENS
# uninitialized constant REXML::Element::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::Element::REFERENCE
# wrong constant name []
# wrong constant name add_attribute<defaultArg>1
# wrong constant name add_attribute
# wrong constant name add_attributes
# wrong constant name add_element<defaultArg>1
# wrong constant name add_element
# wrong constant name add_namespace<defaultArg>1
# wrong constant name add_namespace
# wrong constant name add_text
# wrong constant name attribute<defaultArg>1
# wrong constant name attribute
# wrong constant name attributes
# wrong constant name cdatas
# wrong constant name clone
# wrong constant name comments
# wrong constant name context
# wrong constant name context=
# wrong constant name delete_attribute
# wrong constant name delete_element
# wrong constant name delete_namespace<defaultArg>1
# wrong constant name delete_namespace
# wrong constant name each_element<defaultArg>1
# wrong constant name each_element
# wrong constant name each_element_with_attribute<defaultArg>1
# wrong constant name each_element_with_attribute<defaultArg>2
# wrong constant name each_element_with_attribute<defaultArg>3
# wrong constant name each_element_with_attribute
# wrong constant name each_element_with_text<defaultArg>1
# wrong constant name each_element_with_text<defaultArg>2
# wrong constant name each_element_with_text<defaultArg>3
# wrong constant name each_element_with_text
# wrong constant name elements
# wrong constant name get_elements
# wrong constant name get_text<defaultArg>1
# wrong constant name get_text
# wrong constant name has_attributes?
# wrong constant name has_elements?
# wrong constant name has_text?
# wrong constant name ignore_whitespace_nodes
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name instructions
# wrong constant name namespace<defaultArg>1
# wrong constant name namespace
# wrong constant name namespaces
# wrong constant name next_element
# wrong constant name node_type
# wrong constant name prefixes
# wrong constant name previous_element
# wrong constant name raw
# wrong constant name root
# wrong constant name root_node
# wrong constant name text<defaultArg>1
# wrong constant name text
# wrong constant name text=
# wrong constant name texts
# wrong constant name whitespace
# wrong constant name write<defaultArg>1
# wrong constant name write<defaultArg>2
# wrong constant name write<defaultArg>3
# wrong constant name write<defaultArg>4
# wrong constant name write
# wrong constant name xpath
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `<<<defaultArg>1' for class `REXML::Elements'
# undefined method `[]<defaultArg>1' for class `REXML::Elements'
# undefined method `add<defaultArg>1' for class `REXML::Elements'
# undefined method `collect<defaultArg>1' for class `REXML::Elements'
# undefined method `each<defaultArg>1' for class `REXML::Elements'
# undefined method `inject<defaultArg>1' for class `REXML::Elements'
# undefined method `inject<defaultArg>2' for class `REXML::Elements'
# undefined method `to_a<defaultArg>1' for class `REXML::Elements'
# wrong constant name <<<defaultArg>1
# wrong constant name <<
# uninitialized constant REXML::Elements::Elem
# wrong constant name []<defaultArg>1
# wrong constant name []
# wrong constant name []=
# wrong constant name add<defaultArg>1
# wrong constant name add
# wrong constant name collect<defaultArg>1
# wrong constant name collect
# wrong constant name delete
# wrong constant name delete_all
# wrong constant name each<defaultArg>1
# wrong constant name each
# wrong constant name empty?
# wrong constant name index
# wrong constant name initialize
# wrong constant name inject<defaultArg>1
# wrong constant name inject<defaultArg>2
# wrong constant name inject
# wrong constant name size
# wrong constant name to_a<defaultArg>1
# wrong constant name to_a
# wrong constant name <static-init>
# wrong constant name decode
# wrong constant name encode
# wrong constant name encoding
# wrong constant name encoding=
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::Entity'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::Entity'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `REXML::Entity'
# Did you mean?  initialize_dup
# undefined method `write<defaultArg>1' for class `REXML::Entity'
# uninitialized constant REXML::Entity::NAME
# uninitialized constant REXML::Entity::NAMECHAR
# Did you mean?  REXML::Entity::NAME_CHAR
# uninitialized constant REXML::Entity::NAME_CHAR
# Did you mean?  REXML::Entity::NAME_STR
#                REXML::Entity::NAMECHAR
# uninitialized constant REXML::Entity::NAME_START_CHAR
# uninitialized constant REXML::Entity::NAME_STR
# Did you mean?  REXML::Entity::NCNAME_STR
# uninitialized constant REXML::Entity::NCNAME_STR
# Did you mean?  REXML::Entity::NAME_STR
# uninitialized constant REXML::Entity::NMTOKEN
# Did you mean?  Token
#                REXML::Entity::NMTOKENS
# uninitialized constant REXML::Entity::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::Entity::REFERENCE
# wrong constant name external
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name name
# wrong constant name ndata
# wrong constant name normalized
# wrong constant name pubid
# wrong constant name ref
# wrong constant name to_s
# wrong constant name unnormalized
# wrong constant name value
# wrong constant name write<defaultArg>1
# wrong constant name write
# wrong constant name <static-init>
# wrong constant name matches?
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name to_s
# wrong constant name write
# wrong constant name <static-init>
# wrong constant name <Class:Default>
# wrong constant name <Class:Pretty>
# undefined method `initialize<defaultArg>1' for class `REXML::Formatters::Default'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name write
# wrong constant name write_cdata
# wrong constant name write_comment
# wrong constant name write_document
# wrong constant name write_element
# wrong constant name write_instruction
# wrong constant name write_text
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::Formatters::Pretty'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::Formatters::Pretty'
# Did you mean?  initialize_dup
# wrong constant name compact
# wrong constant name compact=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name width
# wrong constant name width=
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined singleton method `boolean<defaultArg>1' for `REXML::Functions'
# undefined singleton method `get_namespace<defaultArg>1' for `REXML::Functions'
# undefined singleton method `local_name<defaultArg>1' for `REXML::Functions'
# undefined singleton method `name<defaultArg>1' for `REXML::Functions'
# undefined singleton method `namespace_uri<defaultArg>1' for `REXML::Functions'
# undefined singleton method `normalize_space<defaultArg>1' for `REXML::Functions'
# undefined singleton method `number<defaultArg>1' for `REXML::Functions'
# undefined singleton method `string<defaultArg>1' for `REXML::Functions'
# undefined singleton method `substring<defaultArg>1' for `REXML::Functions'
# wrong constant name <static-init>
# wrong constant name boolean<defaultArg>1
# wrong constant name boolean
# wrong constant name ceiling
# wrong constant name compare_language
# wrong constant name concat
# wrong constant name contains
# wrong constant name context=
# wrong constant name count
# wrong constant name false
# wrong constant name floor
# wrong constant name get_namespace<defaultArg>1
# wrong constant name get_namespace
# wrong constant name id
# wrong constant name lang
# wrong constant name last
# wrong constant name local_name<defaultArg>1
# wrong constant name local_name
# wrong constant name name<defaultArg>1
# wrong constant name name
# wrong constant name namespace_context
# wrong constant name namespace_context=
# wrong constant name namespace_uri<defaultArg>1
# wrong constant name namespace_uri
# wrong constant name normalize_space<defaultArg>1
# wrong constant name normalize_space
# wrong constant name not
# wrong constant name number<defaultArg>1
# wrong constant name number
# wrong constant name position
# wrong constant name processing_instruction
# wrong constant name round
# wrong constant name send
# wrong constant name singleton_method_added
# wrong constant name starts_with
# wrong constant name string<defaultArg>1
# wrong constant name string
# wrong constant name string_length
# wrong constant name string_value
# wrong constant name substring<defaultArg>1
# wrong constant name substring
# wrong constant name substring_after
# wrong constant name substring_before
# wrong constant name sum
# wrong constant name text
# wrong constant name translate
# wrong constant name true
# wrong constant name variables
# wrong constant name variables=
# undefined method `initialize<defaultArg>1' for class `REXML::IOSource'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::IOSource'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::Instruction'
# Did you mean?  initialize_dup
# undefined method `write<defaultArg>1' for class `REXML::Instruction'
# undefined method `write<defaultArg>2' for class `REXML::Instruction'
# undefined method `write<defaultArg>3' for class `REXML::Instruction'
# wrong constant name ==
# wrong constant name clone
# wrong constant name content
# wrong constant name content=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name node_type
# wrong constant name target
# wrong constant name target=
# wrong constant name write<defaultArg>1
# wrong constant name write<defaultArg>2
# wrong constant name write<defaultArg>3
# wrong constant name write
# wrong constant name <static-init>
# undefined method `has_name?<defaultArg>1' for module `REXML::Namespace'
# uninitialized constant REXML::Namespace::NAME
# uninitialized constant REXML::Namespace::NAMECHAR
# Did you mean?  REXML::Namespace::NAME_CHAR
# uninitialized constant REXML::Namespace::NAME_CHAR
# Did you mean?  REXML::Namespace::NAME_STR
#                REXML::Namespace::NAMECHAR
# uninitialized constant REXML::Namespace::NAME_START_CHAR
# uninitialized constant REXML::Namespace::NAME_STR
# Did you mean?  REXML::Namespace::NCNAME_STR
# uninitialized constant REXML::Namespace::NCNAME_STR
# Did you mean?  REXML::Namespace::NAME_STR
# uninitialized constant REXML::Namespace::NMTOKEN
# Did you mean?  Token
#                REXML::Namespace::NMTOKENS
# uninitialized constant REXML::Namespace::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::Namespace::REFERENCE
# wrong constant name expanded_name
# wrong constant name fully_expanded_name
# wrong constant name has_name?<defaultArg>1
# wrong constant name has_name?
# wrong constant name local_name
# wrong constant name name
# wrong constant name name=
# wrong constant name prefix
# wrong constant name prefix=
# wrong constant name <static-init>
# undefined method `to_s<defaultArg>1' for module `REXML::Node'
# wrong constant name each_recursive
# wrong constant name find_first_recursive
# wrong constant name indent
# wrong constant name index_in_parent
# wrong constant name next_sibling_node
# wrong constant name parent?
# wrong constant name previous_sibling_node
# wrong constant name to_s<defaultArg>1
# wrong constant name to_s
# wrong constant name <static-init>
# undefined method `write<defaultArg>1' for class `REXML::NotationDecl'
# wrong constant name initialize
# wrong constant name name
# wrong constant name public
# wrong constant name public=
# wrong constant name system
# wrong constant name system=
# wrong constant name to_s
# wrong constant name write<defaultArg>1
# wrong constant name write
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::Output'
# Did you mean?  initialize_dup
# wrong constant name <<
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <<
# uninitialized constant REXML::Parent::Elem
# Did you mean?  REXML::Element
# wrong constant name []
# wrong constant name []=
# wrong constant name add
# wrong constant name children
# wrong constant name deep_clone
# wrong constant name delete
# wrong constant name delete_at
# wrong constant name delete_if
# wrong constant name each
# wrong constant name each_child
# wrong constant name each_index
# wrong constant name index
# wrong constant name insert_after
# wrong constant name insert_before
# wrong constant name length
# wrong constant name push
# wrong constant name replace_child
# wrong constant name size
# wrong constant name to_a
# wrong constant name unshift
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::ParseException'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::ParseException'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `REXML::ParseException'
# Did you mean?  initialize_dup
# wrong constant name context
# wrong constant name continued_exception
# wrong constant name continued_exception=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name line
# wrong constant name parser
# wrong constant name parser=
# wrong constant name position
# wrong constant name source
# wrong constant name source=
# wrong constant name <static-init>
# wrong constant name <Class:BaseParser>
# wrong constant name <Class:StreamParser>
# wrong constant name <Class:TreeParser>
# wrong constant name <Class:XPathParser>
# undefined method `normalize<defaultArg>1' for class `REXML::Parsers::BaseParser'
# undefined method `normalize<defaultArg>2' for class `REXML::Parsers::BaseParser'
# undefined method `peek<defaultArg>1' for class `REXML::Parsers::BaseParser'
# undefined method `unnormalize<defaultArg>1' for class `REXML::Parsers::BaseParser'
# undefined method `unnormalize<defaultArg>2' for class `REXML::Parsers::BaseParser'
# wrong constant name add_listener
# wrong constant name empty?
# wrong constant name entity
# wrong constant name has_next?
# wrong constant name initialize
# wrong constant name normalize<defaultArg>1
# wrong constant name normalize<defaultArg>2
# wrong constant name normalize
# wrong constant name peek<defaultArg>1
# wrong constant name peek
# wrong constant name position
# wrong constant name pull
# wrong constant name source
# wrong constant name stream=
# wrong constant name unnormalize<defaultArg>1
# wrong constant name unnormalize<defaultArg>2
# wrong constant name unnormalize
# wrong constant name unshift
# wrong constant name <static-init>
# wrong constant name add_listener
# wrong constant name initialize
# wrong constant name parse
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::Parsers::TreeParser'
# Did you mean?  initialize_dup
# wrong constant name add_listener
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name parse
# wrong constant name <static-init>
# uninitialized constant REXML::Parsers::XPathParser::NAME
# Did you mean?  REXML::Parsers::XPathParser::QNAME
# uninitialized constant REXML::Parsers::XPathParser::NAMECHAR
# Did you mean?  REXML::Parsers::XPathParser::NAME_CHAR
# uninitialized constant REXML::Parsers::XPathParser::NAME_CHAR
# Did you mean?  REXML::Parsers::XPathParser::NAME_STR
#                REXML::Parsers::XPathParser::NAMECHAR
# uninitialized constant REXML::Parsers::XPathParser::NAME_START_CHAR
# uninitialized constant REXML::Parsers::XPathParser::NAME_STR
# Did you mean?  REXML::Parsers::XPathParser::NCNAME_STR
# uninitialized constant REXML::Parsers::XPathParser::NCNAME_STR
# Did you mean?  REXML::Parsers::XPathParser::NAME_STR
# uninitialized constant REXML::Parsers::XPathParser::NMTOKEN
# Did you mean?  Token
#                REXML::Parsers::XPathParser::NMTOKENS
# uninitialized constant REXML::Parsers::XPathParser::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::Parsers::XPathParser::REFERENCE
# wrong constant name abbreviate
# wrong constant name expand
# wrong constant name namespaces=
# wrong constant name parse
# wrong constant name predicate
# wrong constant name predicate_to_string
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name entity_expansion_limit
# wrong constant name entity_expansion_limit=
# wrong constant name entity_expansion_text_limit
# wrong constant name entity_expansion_text_limit=
# undefined method `initialize<defaultArg>1' for class `REXML::Source'
# Did you mean?  initialize_dup
# undefined method `match<defaultArg>1' for class `REXML::Source'
# undefined method `scan<defaultArg>1' for class `REXML::Source'
# wrong constant name buffer
# wrong constant name consume
# wrong constant name current_line
# wrong constant name empty?
# wrong constant name encoding=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name line
# wrong constant name match<defaultArg>1
# wrong constant name match
# wrong constant name match_to
# wrong constant name match_to_consume
# wrong constant name position
# wrong constant name read
# wrong constant name scan<defaultArg>1
# wrong constant name scan
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name create_from
# undefined method `indent_text<defaultArg>1' for class `REXML::Text'
# undefined method `indent_text<defaultArg>2' for class `REXML::Text'
# undefined method `indent_text<defaultArg>3' for class `REXML::Text'
# undefined method `initialize<defaultArg>1' for class `REXML::Text'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::Text'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `REXML::Text'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `REXML::Text'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>5' for class `REXML::Text'
# Did you mean?  initialize_dup
# undefined method `wrap<defaultArg>1' for class `REXML::Text'
# undefined method `write<defaultArg>1' for class `REXML::Text'
# undefined method `write<defaultArg>2' for class `REXML::Text'
# undefined method `write<defaultArg>3' for class `REXML::Text'
# wrong constant name <<
# wrong constant name <=>
# wrong constant name clone
# wrong constant name doctype
# wrong constant name empty?
# wrong constant name indent_text<defaultArg>1
# wrong constant name indent_text<defaultArg>2
# wrong constant name indent_text<defaultArg>3
# wrong constant name indent_text
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize<defaultArg>5
# wrong constant name initialize
# wrong constant name node_type
# wrong constant name parent=
# wrong constant name raw
# wrong constant name raw=
# wrong constant name to_s
# wrong constant name value
# wrong constant name value=
# wrong constant name wrap<defaultArg>1
# wrong constant name wrap
# wrong constant name write<defaultArg>1
# wrong constant name write<defaultArg>2
# wrong constant name write<defaultArg>3
# wrong constant name write
# wrong constant name write_with_substitution
# wrong constant name xpath
# undefined singleton method `normalize<defaultArg>1' for `REXML::Text'
# undefined singleton method `normalize<defaultArg>2' for `REXML::Text'
# undefined singleton method `read_with_substitution<defaultArg>1' for `REXML::Text'
# undefined singleton method `unnormalize<defaultArg>1' for `REXML::Text'
# undefined singleton method `unnormalize<defaultArg>2' for `REXML::Text'
# undefined singleton method `unnormalize<defaultArg>3' for `REXML::Text'
# wrong constant name <static-init>
# wrong constant name check
# wrong constant name expand
# wrong constant name normalize<defaultArg>1
# wrong constant name normalize<defaultArg>2
# wrong constant name normalize
# wrong constant name read_with_substitution<defaultArg>1
# wrong constant name read_with_substitution
# wrong constant name unnormalize<defaultArg>1
# wrong constant name unnormalize<defaultArg>2
# wrong constant name unnormalize<defaultArg>3
# wrong constant name unnormalize
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <Class:ValidationException>
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::XMLDecl'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `REXML::XMLDecl'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `REXML::XMLDecl'
# Did you mean?  initialize_dup
# undefined method `write<defaultArg>1' for class `REXML::XMLDecl'
# undefined method `write<defaultArg>2' for class `REXML::XMLDecl'
# undefined method `write<defaultArg>3' for class `REXML::XMLDecl'
# wrong constant name ==
# wrong constant name clone
# wrong constant name dowrite
# wrong constant name encoding=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name node_type
# wrong constant name nowrite
# wrong constant name old_enc=
# wrong constant name stand_alone?
# wrong constant name standalone
# wrong constant name standalone=
# wrong constant name version
# wrong constant name version=
# wrong constant name write<defaultArg>1
# wrong constant name write<defaultArg>2
# wrong constant name write<defaultArg>3
# wrong constant name write
# wrong constant name writeencoding
# wrong constant name writethis
# wrong constant name xmldecl
# wrong constant name <static-init>
# wrong constant name default
# wrong constant name <static-init>
# uninitialized constant REXML::XPath::INTERNAL_METHODS
# undefined singleton method `each<defaultArg>1' for `REXML::XPath'
# undefined singleton method `each<defaultArg>2' for `REXML::XPath'
# undefined singleton method `each<defaultArg>3' for `REXML::XPath'
# undefined singleton method `each<defaultArg>4' for `REXML::XPath'
# undefined singleton method `first<defaultArg>1' for `REXML::XPath'
# undefined singleton method `first<defaultArg>2' for `REXML::XPath'
# undefined singleton method `first<defaultArg>3' for `REXML::XPath'
# undefined singleton method `first<defaultArg>4' for `REXML::XPath'
# undefined singleton method `match<defaultArg>1' for `REXML::XPath'
# undefined singleton method `match<defaultArg>2' for `REXML::XPath'
# undefined singleton method `match<defaultArg>3' for `REXML::XPath'
# undefined singleton method `match<defaultArg>4' for `REXML::XPath'
# wrong constant name <static-init>
# wrong constant name each<defaultArg>1
# wrong constant name each<defaultArg>2
# wrong constant name each<defaultArg>3
# wrong constant name each<defaultArg>4
# wrong constant name each
# wrong constant name first<defaultArg>1
# wrong constant name first<defaultArg>2
# wrong constant name first<defaultArg>3
# wrong constant name first<defaultArg>4
# wrong constant name first
# wrong constant name match<defaultArg>1
# wrong constant name match<defaultArg>2
# wrong constant name match<defaultArg>3
# wrong constant name match<defaultArg>4
# wrong constant name match
# undefined method `initialize<defaultArg>1' for class `REXML::XPathNode'
# Did you mean?  initialize_dup
# wrong constant name context
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name position
# wrong constant name raw_node
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `REXML::XPathParser'
# Did you mean?  initialize_dup
# undefined method `namespaces=<defaultArg>1' for class `REXML::XPathParser'
# undefined method `variables=<defaultArg>1' for class `REXML::XPathParser'
# uninitialized constant REXML::XPathParser::NAME
# uninitialized constant REXML::XPathParser::NAMECHAR
# Did you mean?  REXML::XPathParser::NAME_CHAR
# uninitialized constant REXML::XPathParser::NAME_CHAR
# Did you mean?  REXML::XPathParser::NAME_STR
#                REXML::XPathParser::NAMECHAR
# uninitialized constant REXML::XPathParser::NAME_START_CHAR
# uninitialized constant REXML::XPathParser::NAME_STR
# Did you mean?  REXML::XPathParser::NCNAME_STR
# uninitialized constant REXML::XPathParser::NCNAME_STR
# Did you mean?  REXML::XPathParser::NAME_STR
# uninitialized constant REXML::XPathParser::NMTOKEN
# Did you mean?  Token
#                REXML::XPathParser::NMTOKENS
# uninitialized constant REXML::XPathParser::NMTOKENS
# Did you mean?  REXML::XMLTokens
# uninitialized constant REXML::XPathParser::REFERENCE
# wrong constant name []=
# wrong constant name first
# wrong constant name get_first
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name match
# wrong constant name namespaces=<defaultArg>1
# wrong constant name namespaces=
# wrong constant name parse
# wrong constant name predicate
# wrong constant name variables=<defaultArg>1
# wrong constant name variables=
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:CparseParams>
# wrong constant name <static-init>
# wrong constant name to_ansi_domain
# wrong constant name method_missing
# wrong constant name method_missing
# wrong constant name uncolor
# wrong constant name new
# undefined method `alphanumeric<defaultArg>1' for module `Random::Formatter'
# undefined method `random_bytes<defaultArg>1' for module `Random::Formatter'
# undefined method `urlsafe_base64<defaultArg>1' for module `Random::Formatter'
# undefined method `urlsafe_base64<defaultArg>2' for module `Random::Formatter'
# wrong constant name alphanumeric<defaultArg>1
# wrong constant name alphanumeric
# wrong constant name random_bytes<defaultArg>1
# wrong constant name urlsafe_base64<defaultArg>1
# wrong constant name urlsafe_base64<defaultArg>2
# wrong constant name bytes
# wrong constant name urandom
# wrong constant name %
# wrong constant name entries
# wrong constant name to_a
# undefined singleton method `expand<defaultArg>1' for `RbConfig'
# undefined singleton method `fire_update!<defaultArg>1' for `RbConfig'
# undefined singleton method `fire_update!<defaultArg>2' for `RbConfig'
# wrong constant name expand<defaultArg>1
# wrong constant name expand
# wrong constant name fire_update!<defaultArg>1
# wrong constant name fire_update!<defaultArg>2
# wrong constant name fire_update!
# wrong constant name ruby
# wrong constant name <Class:Config>
# wrong constant name <Class:Label>
# wrong constant name <Class:Message>
# wrong constant name <Class:OpCode>
# wrong constant name <Class:RCode>
# wrong constant name <Class:Requester>
# wrong constant name extract_resources
# wrong constant name fetch_resource
# wrong constant name lazy_initialize
# wrong constant name make_tcp_requester
# wrong constant name make_udp_requester
# undefined method `initialize<defaultArg>1' for class `Resolv::DNS::Config'
# Did you mean?  initialize_dup
# wrong constant name <Class:NXDomain>
# wrong constant name <Class:OtherResolvError>
# wrong constant name generate_candidates
# wrong constant name generate_timeouts
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name lazy_initialize
# wrong constant name nameserver_port
# wrong constant name resolv
# wrong constant name single?
# wrong constant name timeouts=
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined singleton method `default_config_hash<defaultArg>1' for `Resolv::DNS::Config'
# wrong constant name <static-init>
# wrong constant name default_config_hash<defaultArg>1
# wrong constant name default_config_hash
# wrong constant name parse_resolv_conf
# wrong constant name <Class:Str>
# wrong constant name ==
# wrong constant name downcase
# wrong constant name eql?
# wrong constant name initialize
# wrong constant name string
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name split
# undefined method `initialize<defaultArg>1' for class `Resolv::DNS::Message'
# Did you mean?  initialize_dup
# wrong constant name ==
# wrong constant name <Class:MessageDecoder>
# wrong constant name <Class:MessageEncoder>
# wrong constant name aa
# wrong constant name aa=
# wrong constant name add_additional
# wrong constant name add_answer
# wrong constant name add_authority
# wrong constant name add_question
# wrong constant name additional
# wrong constant name answer
# wrong constant name authority
# wrong constant name each_additional
# wrong constant name each_answer
# wrong constant name each_authority
# wrong constant name each_question
# wrong constant name each_resource
# wrong constant name encode
# wrong constant name id
# wrong constant name id=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name opcode
# wrong constant name opcode=
# wrong constant name qr
# wrong constant name qr=
# wrong constant name question
# wrong constant name ra
# wrong constant name ra=
# wrong constant name rcode
# wrong constant name rcode=
# wrong constant name rd
# wrong constant name rd=
# wrong constant name tc
# wrong constant name tc=
# undefined method `get_bytes<defaultArg>1' for class `Resolv::DNS::Message::MessageDecoder'
# wrong constant name get_bytes<defaultArg>1
# wrong constant name get_bytes
# wrong constant name get_label
# wrong constant name get_labels
# wrong constant name get_length16
# wrong constant name get_name
# wrong constant name get_question
# wrong constant name get_rr
# wrong constant name get_string
# wrong constant name get_string_list
# wrong constant name get_unpack
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name put_bytes
# wrong constant name put_label
# wrong constant name put_labels
# wrong constant name put_length16
# wrong constant name put_name
# wrong constant name put_pack
# wrong constant name put_string
# wrong constant name put_string_list
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name decode
# wrong constant name ==
# wrong constant name []
# wrong constant name eql?
# wrong constant name length
# wrong constant name to_a
# wrong constant name <static-init>
# wrong constant name encode_rdata
# wrong constant name decode_rdata
# wrong constant name <static-init>
# wrong constant name <Class:ConnectedUDP>
# wrong constant name <Class:MDNSOneShot>
# wrong constant name <Class:RequestError>
# wrong constant name <Class:Sender>
# wrong constant name <Class:TCP>
# wrong constant name <Class:UnconnectedUDP>
# wrong constant name close
# wrong constant name request
# wrong constant name sender_for
# undefined method `initialize<defaultArg>1' for class `Resolv::DNS::Requester::ConnectedUDP'
# Did you mean?  initialize_dup
# undefined method `sender<defaultArg>1' for class `Resolv::DNS::Requester::ConnectedUDP'
# undefined method `sender<defaultArg>2' for class `Resolv::DNS::Requester::ConnectedUDP'
# wrong constant name <Class:Sender>
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name lazy_initialize
# wrong constant name recv_reply
# wrong constant name sender<defaultArg>1
# wrong constant name sender<defaultArg>2
# wrong constant name sender
# wrong constant name data
# wrong constant name send
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Resolv::DNS::Requester::TCP'
# Did you mean?  initialize_dup
# undefined method `sender<defaultArg>1' for class `Resolv::DNS::Requester::TCP'
# undefined method `sender<defaultArg>2' for class `Resolv::DNS::Requester::TCP'
# wrong constant name <Class:Sender>
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name recv_reply
# wrong constant name sender<defaultArg>1
# wrong constant name sender<defaultArg>2
# wrong constant name sender
# wrong constant name data
# wrong constant name send
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `sender<defaultArg>1' for class `Resolv::DNS::Requester::UnconnectedUDP'
# wrong constant name <Class:Sender>
# wrong constant name initialize
# wrong constant name lazy_initialize
# wrong constant name recv_reply
# wrong constant name sender<defaultArg>1
# wrong constant name sender
# wrong constant name data
# wrong constant name initialize
# wrong constant name send
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name ==
# wrong constant name eql?
# uninitialized constant Resolv::DNS::Resource::CNAME::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::CNAME::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::CNAME::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# wrong constant name create
# uninitialized constant Resolv::DNS::Resource::HINFO::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::HINFO::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::HINFO::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# wrong constant name <Class:ANY>
# wrong constant name <Class:CNAME>
# wrong constant name <Class:HINFO>
# wrong constant name <Class:LOC>
# wrong constant name <Class:MINFO>
# wrong constant name <Class:MX>
# wrong constant name <Class:NS>
# wrong constant name <Class:PTR>
# wrong constant name <Class:SOA>
# wrong constant name <Class:TXT>
# uninitialized constant Resolv::DNS::Resource::IN::A::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::A::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::IN::AAAA::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::AAAA::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::CNAME::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::CNAME::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::HINFO::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::HINFO::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::LOC::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::LOC::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::MINFO::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::MINFO::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::MX::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::MX::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::NS::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::NS::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::PTR::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::PTR::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::SOA::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::SOA::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::SRV::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::SRV::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::IN::TXT::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::TXT::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# wrong constant name <static-init>
# uninitialized constant Resolv::DNS::Resource::IN::WKS::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::IN::WKS::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::LOC::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::LOC::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::LOC::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# uninitialized constant Resolv::DNS::Resource::MINFO::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::MINFO::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::MINFO::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# uninitialized constant Resolv::DNS::Resource::MX::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::MX::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::MX::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# uninitialized constant Resolv::DNS::Resource::NS::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::NS::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::NS::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# uninitialized constant Resolv::DNS::Resource::PTR::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::PTR::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::PTR::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# uninitialized constant Resolv::DNS::Resource::SOA::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::SOA::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::SOA::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# uninitialized constant Resolv::DNS::Resource::TXT::ClassHash
# Did you mean?  Resolv::DNS::Resource::ClassHash
# uninitialized constant Resolv::DNS::Resource::TXT::ClassInsensitiveTypes
# Did you mean?  Resolv::DNS::Resource::ClassInsensitiveTypes
# uninitialized constant Resolv::DNS::Resource::TXT::ClassValue
# Did you mean?  Resolv::DNS::Resource::ClassValue
# wrong constant name get_class
# undefined singleton method `bind_random_port<defaultArg>1' for `Resolv::DNS'
# wrong constant name allocate_request_id
# wrong constant name bind_random_port<defaultArg>1
# wrong constant name bind_random_port
# wrong constant name free_request_id
# wrong constant name random
# wrong constant name lazy_initialize
# wrong constant name ==
# wrong constant name eql?
# wrong constant name ==
# wrong constant name eql?
# wrong constant name ==
# wrong constant name eql?
# wrong constant name ==
# wrong constant name eql?
# wrong constant name ==
# wrong constant name eql?
# wrong constant name <Class:AST>
# wrong constant name <Class:CLI>
# wrong constant name <Class:CachedData>
# wrong constant name <Class:CommentConfig>
# wrong constant name <Class:Config>
# wrong constant name <Class:ConfigLoader>
# wrong constant name <Class:ConfigLoaderResolver>
# wrong constant name <Class:ConfigNotFoundError>
# wrong constant name <Class:ConfigObsoletion>
# wrong constant name <Class:ConfigStore>
# wrong constant name <Class:ConfigValidator>
# wrong constant name <Class:Cop>
# wrong constant name <Class:Error>
# wrong constant name <Class:ErrorWithAnalyzedFileLocation>
# wrong constant name <Class:FileFinder>
# wrong constant name <Class:Formatter>
# wrong constant name <Class:IncorrectCopNameError>
# wrong constant name <Class:MagicComment>
# wrong constant name <Class:NameSimilarity>
# wrong constant name <Class:NodePattern>
# wrong constant name <Class:OptionArgumentError>
# wrong constant name <Class:Options>
# wrong constant name <Class:OptionsHelp>
# wrong constant name <Class:OptionsValidator>
# wrong constant name <Class:PathUtil>
# wrong constant name <Class:Platform>
# wrong constant name <Class:ProcessedSource>
# wrong constant name <Class:RemoteConfig>
# wrong constant name <Class:ResultCache>
# wrong constant name <Class:Runner>
# wrong constant name <Class:StringInterpreter>
# wrong constant name <Class:StringUtil>
# wrong constant name <Class:TargetFinder>
# wrong constant name <Class:TargetRuby>
# wrong constant name <Class:Token>
# wrong constant name <Class:ValidationError>
# wrong constant name <Class:Version>
# wrong constant name <Class:Warning>
# wrong constant name <Class:YAMLDuplicationChecker>
# wrong constant name <Class:AliasNode>
# wrong constant name <Class:AndNode>
# wrong constant name <Class:ArgsNode>
# wrong constant name <Class:ArrayNode>
# wrong constant name <Class:BasicLiteralNode>
# wrong constant name <Class:BinaryOperatorNode>
# wrong constant name <Class:BlockNode>
# wrong constant name <Class:BreakNode>
# wrong constant name <Class:Builder>
# wrong constant name <Class:CaseNode>
# wrong constant name <Class:ClassNode>
# wrong constant name <Class:CollectionNode>
# wrong constant name <Class:ConditionalNode>
# wrong constant name <Class:DefNode>
# wrong constant name <Class:DefinedNode>
# wrong constant name <Class:EnsureNode>
# wrong constant name <Class:FloatNode>
# wrong constant name <Class:ForNode>
# wrong constant name <Class:ForwardArgsNode>
# wrong constant name <Class:HashElementNode>
# wrong constant name <Class:HashNode>
# wrong constant name <Class:IfNode>
# wrong constant name <Class:IntNode>
# wrong constant name <Class:KeywordSplatNode>
# wrong constant name <Class:MethodDispatchNode>
# wrong constant name <Class:MethodIdentifierPredicates>
# wrong constant name <Class:ModifierNode>
# wrong constant name <Class:ModuleNode>
# wrong constant name <Class:Node>
# wrong constant name <Class:NumericNode>
# wrong constant name <Class:OrNode>
# wrong constant name <Class:PairNode>
# wrong constant name <Class:ParameterizedNode>
# wrong constant name <Class:PredicateOperatorNode>
# wrong constant name <Class:RangeNode>
# wrong constant name <Class:RegexpNode>
# wrong constant name <Class:ResbodyNode>
# wrong constant name <Class:RetryNode>
# wrong constant name <Class:ReturnNode>
# wrong constant name <Class:SelfClassNode>
# wrong constant name <Class:SendNode>
# wrong constant name <Class:Sexp>
# wrong constant name <Class:StrNode>
# wrong constant name <Class:SuperNode>
# wrong constant name <Class:SymbolNode>
# wrong constant name <Class:Traversal>
# wrong constant name <Class:UntilNode>
# wrong constant name <Class:WhenNode>
# wrong constant name <Class:WhileNode>
# wrong constant name <Class:YieldNode>
# uninitialized constant RuboCop::AST::AliasNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::AliasNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::AliasNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::AliasNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::AliasNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::AliasNode::CONDITIONALS
# uninitialized constant RuboCop::AST::AliasNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::AliasNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::AliasNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::AliasNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::AliasNode::KEYWORDS
# uninitialized constant RuboCop::AST::AliasNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::AliasNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::AliasNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::AliasNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::AliasNode::REFERENCES
# uninitialized constant RuboCop::AST::AliasNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::AliasNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::AliasNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::AliasNode::VARIABLES
# wrong constant name new_identifier
# wrong constant name old_identifier
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::AndNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::AndNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::AndNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::AndNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::AndNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::AndNode::CONDITIONALS
# uninitialized constant RuboCop::AST::AndNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::AndNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::AndNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::AndNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::AndNode::KEYWORDS
# uninitialized constant RuboCop::AST::AndNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::AndNode::LOGICAL_AND
# Did you mean?  RuboCop::AST::AndNode::LOGICAL_OR
# uninitialized constant RuboCop::AST::AndNode::LOGICAL_OR
# Did you mean?  RuboCop::AST::AndNode::LOGICAL_AND
# uninitialized constant RuboCop::AST::AndNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::AndNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::AndNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::AndNode::REFERENCES
# uninitialized constant RuboCop::AST::AndNode::SEMANTIC_AND
# Did you mean?  RuboCop::AST::AndNode::SEMANTIC_OR
# uninitialized constant RuboCop::AST::AndNode::SEMANTIC_OR
# Did you mean?  RuboCop::AST::AndNode::SEMANTIC_AND
# uninitialized constant RuboCop::AST::AndNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::AndNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::AndNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::AndNode::VARIABLES
# wrong constant name alternate_operator
# wrong constant name inverse_operator
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::ArgsNode::ARRAY_METHODS
# uninitialized constant RuboCop::AST::ArgsNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::ArgsNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::ArgsNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::ArgsNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::ArgsNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::ArgsNode::CONDITIONALS
# uninitialized constant RuboCop::AST::ArgsNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ArgsNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::ArgsNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ArgsNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ArgsNode::KEYWORDS
# uninitialized constant RuboCop::AST::ArgsNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::ArgsNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ArgsNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ArgsNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::ArgsNode::REFERENCES
# uninitialized constant RuboCop::AST::ArgsNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ArgsNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::ArgsNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::ArgsNode::VARIABLES
# wrong constant name empty_and_without_delimiters?
# wrong constant name <static-init>
# undefined method `percent_literal?<defaultArg>1' for class `RuboCop::AST::ArrayNode'
# uninitialized constant RuboCop::AST::ArrayNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::ArrayNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::ArrayNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::ArrayNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::ArrayNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::ArrayNode::CONDITIONALS
# uninitialized constant RuboCop::AST::ArrayNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ArrayNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::ArrayNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ArrayNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ArrayNode::KEYWORDS
# uninitialized constant RuboCop::AST::ArrayNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::ArrayNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ArrayNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ArrayNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::ArrayNode::REFERENCES
# uninitialized constant RuboCop::AST::ArrayNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ArrayNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::ArrayNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::ArrayNode::VARIABLES
# wrong constant name bracketed?
# wrong constant name percent_literal?<defaultArg>1
# wrong constant name percent_literal?
# wrong constant name square_brackets?
# wrong constant name values
# wrong constant name <static-init>
# wrong constant name value
# wrong constant name <static-init>
# wrong constant name conditions
# wrong constant name lhs
# wrong constant name rhs
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::BlockNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::BlockNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::BlockNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::BlockNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::BlockNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::BlockNode::CONDITIONALS
# uninitialized constant RuboCop::AST::BlockNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::BlockNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::BlockNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::BlockNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::BlockNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::BlockNode::KEYWORDS
# uninitialized constant RuboCop::AST::BlockNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::BlockNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::BlockNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::BlockNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::BlockNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::BlockNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::BlockNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::BlockNode::REFERENCES
# uninitialized constant RuboCop::AST::BlockNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::BlockNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::BlockNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::BlockNode::VARIABLES
# wrong constant name arguments
# wrong constant name arguments?
# wrong constant name body
# wrong constant name braces?
# wrong constant name closing_delimiter
# wrong constant name delimiters
# wrong constant name keywords?
# wrong constant name lambda?
# wrong constant name method_name
# wrong constant name opening_delimiter
# wrong constant name send_node
# wrong constant name void_context?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::BreakNode::ARITHMETIC_OPERATORS
# uninitialized constant RuboCop::AST::BreakNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::BreakNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::BreakNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::BreakNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::BreakNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::BreakNode::CONDITIONALS
# uninitialized constant RuboCop::AST::BreakNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::BreakNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::BreakNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::BreakNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::BreakNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::BreakNode::KEYWORDS
# uninitialized constant RuboCop::AST::BreakNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::BreakNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::BreakNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::BreakNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::BreakNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::BreakNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::BreakNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::BreakNode::REFERENCES
# uninitialized constant RuboCop::AST::BreakNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::BreakNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::BreakNode::SPECIAL_MODIFIERS
# uninitialized constant RuboCop::AST::BreakNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::BreakNode::VARIABLES
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::CaseNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::CaseNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::CaseNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::CaseNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::CaseNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::CaseNode::CONDITIONALS
# uninitialized constant RuboCop::AST::CaseNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::CaseNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::CaseNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::CaseNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::CaseNode::KEYWORDS
# uninitialized constant RuboCop::AST::CaseNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::CaseNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::CaseNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::CaseNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::CaseNode::REFERENCES
# uninitialized constant RuboCop::AST::CaseNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::CaseNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::CaseNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::CaseNode::VARIABLES
# wrong constant name each_when
# wrong constant name else?
# wrong constant name else_branch
# wrong constant name keyword
# wrong constant name when_branches
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::ClassNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::ClassNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::ClassNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::ClassNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::ClassNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::ClassNode::CONDITIONALS
# uninitialized constant RuboCop::AST::ClassNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ClassNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::ClassNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ClassNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ClassNode::KEYWORDS
# uninitialized constant RuboCop::AST::ClassNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::ClassNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ClassNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ClassNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::ClassNode::REFERENCES
# uninitialized constant RuboCop::AST::ClassNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ClassNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::ClassNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::ClassNode::VARIABLES
# wrong constant name body
# wrong constant name identifier
# wrong constant name parent_class
# wrong constant name <static-init>
# wrong constant name &
# wrong constant name *
# wrong constant name +
# wrong constant name -
# wrong constant name <<
# wrong constant name []
# wrong constant name []=
# wrong constant name all?
# wrong constant name any?
# wrong constant name append
# wrong constant name assoc
# wrong constant name at
# wrong constant name bsearch
# wrong constant name bsearch_index
# wrong constant name chain
# wrong constant name chunk
# wrong constant name chunk_while
# wrong constant name clear
# wrong constant name collect
# wrong constant name collect!
# wrong constant name collect_concat
# wrong constant name combination
# wrong constant name compact
# wrong constant name compact!
# wrong constant name concat
# wrong constant name count
# wrong constant name cycle
# wrong constant name delete
# wrong constant name delete_at
# wrong constant name delete_if
# wrong constant name detect
# wrong constant name difference
# wrong constant name dig
# wrong constant name drop
# wrong constant name drop_while
# wrong constant name each
# wrong constant name each_cons
# wrong constant name each_entry
# wrong constant name each_index
# wrong constant name each_slice
# wrong constant name each_with_index
# wrong constant name each_with_object
# wrong constant name empty?
# wrong constant name entries
# wrong constant name fetch
# wrong constant name fill
# wrong constant name filter
# wrong constant name filter!
# wrong constant name find
# wrong constant name find_all
# wrong constant name find_index
# wrong constant name first
# wrong constant name flat_map
# wrong constant name flatten
# wrong constant name flatten!
# wrong constant name grep
# wrong constant name grep_v
# wrong constant name group_by
# wrong constant name include?
# wrong constant name index
# wrong constant name inject
# wrong constant name insert
# wrong constant name join
# wrong constant name keep_if
# wrong constant name last
# wrong constant name lazy
# wrong constant name length
# wrong constant name map
# wrong constant name map!
# wrong constant name max
# wrong constant name max_by
# wrong constant name member?
# wrong constant name min
# wrong constant name min_by
# wrong constant name minmax
# wrong constant name minmax_by
# wrong constant name none?
# wrong constant name one?
# wrong constant name pack
# wrong constant name partition
# wrong constant name permutation
# wrong constant name pop
# wrong constant name prepend
# wrong constant name product
# wrong constant name push
# wrong constant name rassoc
# wrong constant name reduce
# wrong constant name reject
# wrong constant name reject!
# wrong constant name repeated_combination
# wrong constant name repeated_permutation
# wrong constant name replace
# wrong constant name reverse
# wrong constant name reverse!
# wrong constant name reverse_each
# wrong constant name rindex
# wrong constant name rotate
# wrong constant name rotate!
# wrong constant name sample
# wrong constant name select
# wrong constant name select!
# wrong constant name shift
# wrong constant name shuffle
# wrong constant name shuffle!
# wrong constant name size
# wrong constant name slice
# wrong constant name slice!
# wrong constant name slice_after
# wrong constant name slice_before
# wrong constant name slice_when
# wrong constant name sort
# wrong constant name sort!
# wrong constant name sort_by
# wrong constant name sort_by!
# wrong constant name sum
# wrong constant name take
# wrong constant name take_while
# wrong constant name to_ary
# wrong constant name to_h
# wrong constant name to_set
# wrong constant name transpose
# wrong constant name union
# wrong constant name uniq
# wrong constant name uniq!
# wrong constant name unshift
# wrong constant name values_at
# wrong constant name zip
# wrong constant name |
# wrong constant name <static-init>
# wrong constant name body
# wrong constant name condition
# wrong constant name multiline_condition?
# wrong constant name single_line_condition?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::DefNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::DefNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::DefNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::DefNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::DefNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::DefNode::CONDITIONALS
# uninitialized constant RuboCop::AST::DefNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::DefNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::DefNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::DefNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::DefNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::DefNode::KEYWORDS
# uninitialized constant RuboCop::AST::DefNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::DefNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::DefNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::DefNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::DefNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::DefNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::DefNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::DefNode::REFERENCES
# uninitialized constant RuboCop::AST::DefNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::DefNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::DefNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::DefNode::VARIABLES
# wrong constant name argument_forwarding?
# wrong constant name arguments
# wrong constant name body
# wrong constant name method_name
# wrong constant name receiver
# wrong constant name void_context?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::DefinedNode::ARITHMETIC_OPERATORS
# uninitialized constant RuboCop::AST::DefinedNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::DefinedNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::DefinedNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::DefinedNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::DefinedNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::DefinedNode::CONDITIONALS
# uninitialized constant RuboCop::AST::DefinedNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::DefinedNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::DefinedNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::DefinedNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::DefinedNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::DefinedNode::KEYWORDS
# uninitialized constant RuboCop::AST::DefinedNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::DefinedNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::DefinedNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::DefinedNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::DefinedNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::DefinedNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::DefinedNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::DefinedNode::REFERENCES
# uninitialized constant RuboCop::AST::DefinedNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::DefinedNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::DefinedNode::SPECIAL_MODIFIERS
# uninitialized constant RuboCop::AST::DefinedNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::DefinedNode::VARIABLES
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::EnsureNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::EnsureNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::EnsureNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::EnsureNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::EnsureNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::EnsureNode::CONDITIONALS
# uninitialized constant RuboCop::AST::EnsureNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::EnsureNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::EnsureNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::EnsureNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::EnsureNode::KEYWORDS
# uninitialized constant RuboCop::AST::EnsureNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::EnsureNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::EnsureNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::EnsureNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::EnsureNode::REFERENCES
# uninitialized constant RuboCop::AST::EnsureNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::EnsureNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::EnsureNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::EnsureNode::VARIABLES
# wrong constant name body
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::FloatNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::FloatNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::FloatNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::FloatNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::FloatNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::FloatNode::CONDITIONALS
# uninitialized constant RuboCop::AST::FloatNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::FloatNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::FloatNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::FloatNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::FloatNode::KEYWORDS
# uninitialized constant RuboCop::AST::FloatNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::FloatNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::FloatNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::FloatNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::FloatNode::REFERENCES
# uninitialized constant RuboCop::AST::FloatNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::FloatNode::SIGN_REGEX
# uninitialized constant RuboCop::AST::FloatNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::FloatNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::FloatNode::VARIABLES
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::ForNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::ForNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::ForNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::ForNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::ForNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::ForNode::CONDITIONALS
# uninitialized constant RuboCop::AST::ForNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ForNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::ForNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ForNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ForNode::KEYWORDS
# uninitialized constant RuboCop::AST::ForNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::ForNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ForNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ForNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::ForNode::REFERENCES
# uninitialized constant RuboCop::AST::ForNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ForNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::ForNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::ForNode::VARIABLES
# wrong constant name body
# wrong constant name collection
# wrong constant name do?
# wrong constant name keyword
# wrong constant name variable
# wrong constant name void_context?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::ForwardArgsNode::ARRAY_METHODS
# uninitialized constant RuboCop::AST::ForwardArgsNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::ForwardArgsNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::ForwardArgsNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::ForwardArgsNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::ForwardArgsNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::ForwardArgsNode::CONDITIONALS
# uninitialized constant RuboCop::AST::ForwardArgsNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ForwardArgsNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::ForwardArgsNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ForwardArgsNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ForwardArgsNode::KEYWORDS
# uninitialized constant RuboCop::AST::ForwardArgsNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::ForwardArgsNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ForwardArgsNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ForwardArgsNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::ForwardArgsNode::REFERENCES
# uninitialized constant RuboCop::AST::ForwardArgsNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ForwardArgsNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::ForwardArgsNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::ForwardArgsNode::VARIABLES
# wrong constant name <static-init>
# undefined method `key_delta<defaultArg>1' for module `RuboCop::AST::HashElementNode'
# wrong constant name delimiter_delta
# wrong constant name key
# wrong constant name key_delta<defaultArg>1
# wrong constant name key_delta
# wrong constant name same_line?
# wrong constant name value
# wrong constant name value_delta
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::HashNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::HashNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::HashNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::HashNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::HashNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::HashNode::CONDITIONALS
# uninitialized constant RuboCop::AST::HashNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::HashNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::HashNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::HashNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::HashNode::KEYWORDS
# uninitialized constant RuboCop::AST::HashNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::HashNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::HashNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::HashNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::HashNode::REFERENCES
# uninitialized constant RuboCop::AST::HashNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::HashNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::HashNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::HashNode::VARIABLES
# wrong constant name braces?
# wrong constant name each_key
# wrong constant name each_pair
# wrong constant name each_value
# wrong constant name empty?
# wrong constant name keys
# wrong constant name mixed_delimiters?
# wrong constant name pairs
# wrong constant name pairs_on_same_line?
# wrong constant name values
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::IfNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::IfNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::IfNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::IfNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::IfNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::IfNode::CONDITIONALS
# uninitialized constant RuboCop::AST::IfNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::IfNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::IfNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::IfNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::IfNode::KEYWORDS
# uninitialized constant RuboCop::AST::IfNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::IfNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::IfNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::IfNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::IfNode::REFERENCES
# uninitialized constant RuboCop::AST::IfNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::IfNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::IfNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::IfNode::VARIABLES
# wrong constant name branches
# wrong constant name each_branch
# wrong constant name else?
# wrong constant name else_branch
# wrong constant name elsif?
# wrong constant name elsif_conditional?
# wrong constant name if?
# wrong constant name if_branch
# wrong constant name inverse_keyword
# wrong constant name keyword
# wrong constant name nested_conditional?
# wrong constant name ternary?
# wrong constant name unless?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::IntNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::IntNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::IntNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::IntNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::IntNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::IntNode::CONDITIONALS
# uninitialized constant RuboCop::AST::IntNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::IntNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::IntNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::IntNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::IntNode::KEYWORDS
# uninitialized constant RuboCop::AST::IntNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::IntNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::IntNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::IntNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::IntNode::REFERENCES
# uninitialized constant RuboCop::AST::IntNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::IntNode::SIGN_REGEX
# uninitialized constant RuboCop::AST::IntNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::IntNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::IntNode::VARIABLES
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::KeywordSplatNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::KeywordSplatNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::KeywordSplatNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::KeywordSplatNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::KeywordSplatNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::KeywordSplatNode::CONDITIONALS
# uninitialized constant RuboCop::AST::KeywordSplatNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::KeywordSplatNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::KeywordSplatNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::KeywordSplatNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::KeywordSplatNode::KEYWORDS
# uninitialized constant RuboCop::AST::KeywordSplatNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::KeywordSplatNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::KeywordSplatNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::KeywordSplatNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::KeywordSplatNode::REFERENCES
# uninitialized constant RuboCop::AST::KeywordSplatNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::KeywordSplatNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::KeywordSplatNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::KeywordSplatNode::VARIABLES
# wrong constant name colon?
# wrong constant name hash_rocket?
# wrong constant name operator
# wrong constant name <static-init>
# undefined method `adjacent_def_modifier?<defaultArg>1' for module `RuboCop::AST::MethodDispatchNode'
# undefined method `bare_access_modifier_declaration?<defaultArg>1' for module `RuboCop::AST::MethodDispatchNode'
# undefined method `macro_scope?<defaultArg>1' for module `RuboCop::AST::MethodDispatchNode'
# undefined method `non_bare_access_modifier_declaration?<defaultArg>1' for module `RuboCop::AST::MethodDispatchNode'
# uninitialized constant RuboCop::AST::MethodDispatchNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::MethodDispatchNode::OPERATOR_METHODS
# wrong constant name access_modifier?
# wrong constant name adjacent_def_modifier?<defaultArg>1
# wrong constant name adjacent_def_modifier?
# wrong constant name arguments
# wrong constant name arithmetic_operation?
# wrong constant name assignment?
# wrong constant name bare_access_modifier?
# wrong constant name bare_access_modifier_declaration?<defaultArg>1
# wrong constant name bare_access_modifier_declaration?
# wrong constant name binary_operation?
# wrong constant name block_literal?
# wrong constant name block_node
# wrong constant name command?
# wrong constant name const_receiver?
# wrong constant name def_modifier?
# wrong constant name dot?
# wrong constant name double_colon?
# wrong constant name implicit_call?
# wrong constant name lambda?
# wrong constant name lambda_literal?
# wrong constant name macro?
# wrong constant name macro_scope?<defaultArg>1
# wrong constant name macro_scope?
# wrong constant name method_name
# wrong constant name non_bare_access_modifier?
# wrong constant name non_bare_access_modifier_declaration?<defaultArg>1
# wrong constant name non_bare_access_modifier_declaration?
# wrong constant name receiver
# wrong constant name self_receiver?
# wrong constant name setter_method?
# wrong constant name special_modifier?
# wrong constant name unary_operation?
# wrong constant name <static-init>
# wrong constant name assignment_method?
# wrong constant name bang_method?
# wrong constant name camel_case_method?
# wrong constant name comparison_method?
# wrong constant name const_receiver?
# wrong constant name enumerator_method?
# wrong constant name method?
# wrong constant name negation_method?
# wrong constant name operator_method?
# wrong constant name predicate_method?
# wrong constant name prefix_bang?
# wrong constant name prefix_not?
# wrong constant name self_receiver?
# wrong constant name <static-init>
# wrong constant name modifier_form?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::ModuleNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::ModuleNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::ModuleNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::ModuleNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::ModuleNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::ModuleNode::CONDITIONALS
# uninitialized constant RuboCop::AST::ModuleNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ModuleNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::ModuleNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ModuleNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ModuleNode::KEYWORDS
# uninitialized constant RuboCop::AST::ModuleNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::ModuleNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ModuleNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ModuleNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::ModuleNode::REFERENCES
# uninitialized constant RuboCop::AST::ModuleNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ModuleNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::ModuleNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::ModuleNode::VARIABLES
# wrong constant name body
# wrong constant name identifier
# wrong constant name <static-init>
# undefined method `assignment_or_similar?<defaultArg>1' for class `RuboCop::AST::Node'
# undefined method `class_constructor?<defaultArg>1' for class `RuboCop::AST::Node'
# undefined method `guard_clause?<defaultArg>1' for class `RuboCop::AST::Node'
# undefined method `lambda?<defaultArg>1' for class `RuboCop::AST::Node'
# undefined method `lambda_or_proc?<defaultArg>1' for class `RuboCop::AST::Node'
# undefined method `new_class_or_module_block?<defaultArg>1' for class `RuboCop::AST::Node'
# undefined method `proc?<defaultArg>1' for class `RuboCop::AST::Node'
# undefined method `receiver<defaultArg>1' for class `RuboCop::AST::Node'
# undefined method `str_content<defaultArg>1' for class `RuboCop::AST::Node'
# wrong constant name __ENCODING___type?
# wrong constant name __FILE___type?
# wrong constant name __LINE___type?
# wrong constant name alias_type?
# wrong constant name ancestors
# wrong constant name and_asgn_type?
# wrong constant name and_type?
# wrong constant name arg_expr_type?
# wrong constant name arg_type?
# wrong constant name args_type?
# wrong constant name argument?
# wrong constant name array_pattern_type?
# wrong constant name array_pattern_with_tail_type?
# wrong constant name array_type?
# wrong constant name assignment?
# wrong constant name assignment_or_similar?<defaultArg>1
# wrong constant name assignment_or_similar?
# wrong constant name back_ref_type?
# wrong constant name basic_conditional?
# wrong constant name basic_literal?
# wrong constant name begin_type?
# wrong constant name block_pass_type?
# wrong constant name block_type?
# wrong constant name blockarg_expr_type?
# wrong constant name blockarg_type?
# wrong constant name boolean_type?
# wrong constant name break_type?
# wrong constant name call_type?
# wrong constant name case_match_type?
# wrong constant name case_type?
# wrong constant name casgn_type?
# wrong constant name cbase_type?
# wrong constant name chained?
# wrong constant name child_nodes
# wrong constant name class_constructor?<defaultArg>1
# wrong constant name class_constructor?
# wrong constant name class_type?
# wrong constant name complete!
# wrong constant name complete?
# wrong constant name complex_type?
# wrong constant name conditional?
# wrong constant name const_name
# wrong constant name const_pattern_type?
# wrong constant name const_type?
# wrong constant name csend_type?
# wrong constant name cvar_type?
# wrong constant name cvasgn_type?
# wrong constant name def_type?
# wrong constant name defined_module
# wrong constant name defined_module_name
# wrong constant name defined_type?
# wrong constant name defs_type?
# wrong constant name descendants
# wrong constant name dstr_type?
# wrong constant name dsym_type?
# wrong constant name each_ancestor
# wrong constant name each_child_node
# wrong constant name each_descendant
# wrong constant name each_node
# wrong constant name eflipflop_type?
# wrong constant name empty_source?
# wrong constant name ensure_type?
# wrong constant name equals_asgn?
# wrong constant name erange_type?
# wrong constant name false_type?
# wrong constant name falsey_literal?
# wrong constant name first_line
# wrong constant name float_type?
# wrong constant name for_type?
# wrong constant name forward_args_type?
# wrong constant name forwarded_args_type?
# wrong constant name guard_clause?<defaultArg>1
# wrong constant name guard_clause?
# wrong constant name gvar_type?
# wrong constant name gvasgn_type?
# wrong constant name hash_pattern_type?
# wrong constant name hash_type?
# wrong constant name ident_type?
# wrong constant name if_guard_type?
# wrong constant name if_type?
# wrong constant name iflipflop_type?
# wrong constant name immutable_literal?
# wrong constant name in_match_type?
# wrong constant name in_pattern_type?
# wrong constant name index_type?
# wrong constant name indexasgn_type?
# wrong constant name int_type?
# wrong constant name irange_type?
# wrong constant name ivar_type?
# wrong constant name ivasgn_type?
# wrong constant name keyword?
# wrong constant name kwarg_type?
# wrong constant name kwbegin_type?
# wrong constant name kwnilarg_type?
# wrong constant name kwoptarg_type?
# wrong constant name kwrestarg_type?
# wrong constant name kwsplat_type?
# wrong constant name lambda?<defaultArg>1
# wrong constant name lambda?
# wrong constant name lambda_or_proc?<defaultArg>1
# wrong constant name lambda_or_proc?
# wrong constant name lambda_type?
# wrong constant name last_line
# wrong constant name line_count
# wrong constant name literal?
# wrong constant name lvar_type?
# wrong constant name lvasgn_type?
# wrong constant name masgn_type?
# wrong constant name match_alt_type?
# wrong constant name match_as_type?
# wrong constant name match_current_line_type?
# wrong constant name match_nil_pattern_type?
# wrong constant name match_rest_type?
# wrong constant name match_var_type?
# wrong constant name match_with_lvasgn_type?
# wrong constant name match_with_trailing_comma_type?
# wrong constant name mlhs_type?
# wrong constant name module_type?
# wrong constant name multiline?
# wrong constant name mutable_literal?
# wrong constant name new_class_or_module_block?<defaultArg>1
# wrong constant name new_class_or_module_block?
# wrong constant name next_type?
# wrong constant name nil_type?
# wrong constant name node_parts
# wrong constant name nonempty_line_count
# wrong constant name not_type?
# wrong constant name nth_ref_type?
# wrong constant name numargs_type?
# wrong constant name numblock_type?
# wrong constant name numeric_type?
# wrong constant name objc_kwarg_type?
# wrong constant name objc_restarg_type?
# wrong constant name objc_varargs_type?
# wrong constant name op_asgn_type?
# wrong constant name operator_keyword?
# wrong constant name optarg_type?
# wrong constant name or_asgn_type?
# wrong constant name or_type?
# wrong constant name pair_type?
# wrong constant name parent
# wrong constant name parent=
# wrong constant name parent_module_name
# wrong constant name parenthesized_call?
# wrong constant name pin_type?
# wrong constant name postexe_type?
# wrong constant name preexe_type?
# wrong constant name proc?<defaultArg>1
# wrong constant name proc?
# wrong constant name procarg0_type?
# wrong constant name pure?
# wrong constant name range_type?
# wrong constant name rational_type?
# wrong constant name receiver<defaultArg>1
# wrong constant name receiver
# wrong constant name recursive_basic_literal?
# wrong constant name recursive_literal?
# wrong constant name redo_type?
# wrong constant name reference?
# wrong constant name regexp_type?
# wrong constant name regopt_type?
# wrong constant name resbody_type?
# wrong constant name rescue_type?
# wrong constant name restarg_expr_type?
# wrong constant name restarg_type?
# wrong constant name retry_type?
# wrong constant name return_type?
# wrong constant name root_type?
# wrong constant name sclass_type?
# wrong constant name self_type?
# wrong constant name send_type?
# wrong constant name shadowarg_type?
# wrong constant name shorthand_asgn?
# wrong constant name sibling_index
# wrong constant name single_line?
# wrong constant name source
# wrong constant name source_length
# wrong constant name source_range
# wrong constant name special_keyword?
# wrong constant name splat_type?
# wrong constant name str_content<defaultArg>1
# wrong constant name str_content
# wrong constant name str_type?
# wrong constant name super_type?
# wrong constant name sym_type?
# wrong constant name true_type?
# wrong constant name truthy_literal?
# wrong constant name undef_type?
# wrong constant name unless_guard_type?
# wrong constant name until_post_type?
# wrong constant name until_type?
# wrong constant name value_used?
# wrong constant name variable?
# wrong constant name visit_descendants
# wrong constant name when_type?
# wrong constant name while_post_type?
# wrong constant name while_type?
# wrong constant name xstr_type?
# wrong constant name yield_type?
# wrong constant name zsuper_type?
# wrong constant name <static-init>
# wrong constant name sign?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::OrNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::OrNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::OrNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::OrNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::OrNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::OrNode::CONDITIONALS
# uninitialized constant RuboCop::AST::OrNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::OrNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::OrNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::OrNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::OrNode::KEYWORDS
# uninitialized constant RuboCop::AST::OrNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::OrNode::LOGICAL_AND
# Did you mean?  RuboCop::AST::OrNode::LOGICAL_OR
# uninitialized constant RuboCop::AST::OrNode::LOGICAL_OR
# Did you mean?  RuboCop::AST::OrNode::LOGICAL_AND
# uninitialized constant RuboCop::AST::OrNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::OrNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::OrNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::OrNode::REFERENCES
# uninitialized constant RuboCop::AST::OrNode::SEMANTIC_AND
# Did you mean?  RuboCop::AST::OrNode::SEMANTIC_OR
# uninitialized constant RuboCop::AST::OrNode::SEMANTIC_OR
# Did you mean?  RuboCop::AST::OrNode::SEMANTIC_AND
# uninitialized constant RuboCop::AST::OrNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::OrNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::OrNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::OrNode::VARIABLES
# wrong constant name alternate_operator
# wrong constant name inverse_operator
# wrong constant name <static-init>
# undefined method `delimiter<defaultArg>1' for class `RuboCop::AST::PairNode'
# undefined method `inverse_delimiter<defaultArg>1' for class `RuboCop::AST::PairNode'
# uninitialized constant RuboCop::AST::PairNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::PairNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::PairNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::PairNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::PairNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::PairNode::CONDITIONALS
# uninitialized constant RuboCop::AST::PairNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::PairNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::PairNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::PairNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::PairNode::KEYWORDS
# uninitialized constant RuboCop::AST::PairNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::PairNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::PairNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::PairNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::PairNode::REFERENCES
# uninitialized constant RuboCop::AST::PairNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::PairNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::PairNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::PairNode::VARIABLES
# wrong constant name colon?
# wrong constant name delimiter<defaultArg>1
# wrong constant name delimiter
# wrong constant name hash_rocket?
# wrong constant name inverse_delimiter<defaultArg>1
# wrong constant name inverse_delimiter
# wrong constant name value_on_new_line?
# wrong constant name <static-init>
# wrong constant name arguments?
# wrong constant name block_argument?
# wrong constant name first_argument
# wrong constant name last_argument
# wrong constant name parenthesized?
# wrong constant name rest_argument?
# wrong constant name splat_argument?
# wrong constant name <static-init>
# wrong constant name logical_operator?
# wrong constant name operator
# wrong constant name semantic_operator?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::RangeNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::RangeNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::RangeNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::RangeNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::RangeNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::RangeNode::CONDITIONALS
# uninitialized constant RuboCop::AST::RangeNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::RangeNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::RangeNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::RangeNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::RangeNode::KEYWORDS
# uninitialized constant RuboCop::AST::RangeNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::RangeNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::RangeNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::RangeNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::RangeNode::REFERENCES
# uninitialized constant RuboCop::AST::RangeNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::RangeNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::RangeNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::RangeNode::VARIABLES
# wrong constant name begin
# wrong constant name end
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::RegexpNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::RegexpNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::RegexpNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::RegexpNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::RegexpNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::RegexpNode::CONDITIONALS
# uninitialized constant RuboCop::AST::RegexpNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::RegexpNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::RegexpNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::RegexpNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::RegexpNode::KEYWORDS
# uninitialized constant RuboCop::AST::RegexpNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::RegexpNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::RegexpNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::RegexpNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::RegexpNode::REFERENCES
# uninitialized constant RuboCop::AST::RegexpNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::RegexpNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::RegexpNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::RegexpNode::VARIABLES
# wrong constant name content
# wrong constant name regopt
# wrong constant name to_regexp
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::ResbodyNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::ResbodyNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::ResbodyNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::ResbodyNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::ResbodyNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::ResbodyNode::CONDITIONALS
# uninitialized constant RuboCop::AST::ResbodyNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ResbodyNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::ResbodyNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ResbodyNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ResbodyNode::KEYWORDS
# uninitialized constant RuboCop::AST::ResbodyNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::ResbodyNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ResbodyNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ResbodyNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::ResbodyNode::REFERENCES
# uninitialized constant RuboCop::AST::ResbodyNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ResbodyNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::ResbodyNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::ResbodyNode::VARIABLES
# wrong constant name body
# wrong constant name exception_variable
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::RetryNode::ARITHMETIC_OPERATORS
# uninitialized constant RuboCop::AST::RetryNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::RetryNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::RetryNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::RetryNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::RetryNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::RetryNode::CONDITIONALS
# uninitialized constant RuboCop::AST::RetryNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::RetryNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::RetryNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::RetryNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::RetryNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::RetryNode::KEYWORDS
# uninitialized constant RuboCop::AST::RetryNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::RetryNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::RetryNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::RetryNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::RetryNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::RetryNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::RetryNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::RetryNode::REFERENCES
# uninitialized constant RuboCop::AST::RetryNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::RetryNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::RetryNode::SPECIAL_MODIFIERS
# uninitialized constant RuboCop::AST::RetryNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::RetryNode::VARIABLES
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::ReturnNode::ARITHMETIC_OPERATORS
# uninitialized constant RuboCop::AST::ReturnNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::ReturnNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::ReturnNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::ReturnNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::ReturnNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::ReturnNode::CONDITIONALS
# uninitialized constant RuboCop::AST::ReturnNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::ReturnNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ReturnNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::ReturnNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ReturnNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ReturnNode::KEYWORDS
# uninitialized constant RuboCop::AST::ReturnNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::ReturnNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::ReturnNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::ReturnNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::ReturnNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::ReturnNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::ReturnNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::ReturnNode::REFERENCES
# uninitialized constant RuboCop::AST::ReturnNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::ReturnNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::ReturnNode::SPECIAL_MODIFIERS
# uninitialized constant RuboCop::AST::ReturnNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::ReturnNode::VARIABLES
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::SelfClassNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::SelfClassNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::SelfClassNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::SelfClassNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::SelfClassNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::SelfClassNode::CONDITIONALS
# uninitialized constant RuboCop::AST::SelfClassNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::SelfClassNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::SelfClassNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::SelfClassNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::SelfClassNode::KEYWORDS
# uninitialized constant RuboCop::AST::SelfClassNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::SelfClassNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::SelfClassNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::SelfClassNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::SelfClassNode::REFERENCES
# uninitialized constant RuboCop::AST::SelfClassNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::SelfClassNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::SelfClassNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::SelfClassNode::VARIABLES
# wrong constant name body
# wrong constant name identifier
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::SendNode::ARITHMETIC_OPERATORS
# uninitialized constant RuboCop::AST::SendNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::SendNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::SendNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::SendNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::SendNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::SendNode::CONDITIONALS
# uninitialized constant RuboCop::AST::SendNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::SendNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::SendNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::SendNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::SendNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::SendNode::KEYWORDS
# uninitialized constant RuboCop::AST::SendNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::SendNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::SendNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::SendNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::SendNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::SendNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::SendNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::SendNode::REFERENCES
# uninitialized constant RuboCop::AST::SendNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::SendNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::SendNode::SPECIAL_MODIFIERS
# uninitialized constant RuboCop::AST::SendNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::SendNode::VARIABLES
# wrong constant name <static-init>
# wrong constant name s
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::StrNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::StrNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::StrNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::StrNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::StrNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::StrNode::CONDITIONALS
# uninitialized constant RuboCop::AST::StrNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::StrNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::StrNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::StrNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::StrNode::KEYWORDS
# uninitialized constant RuboCop::AST::StrNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::StrNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::StrNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::StrNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::StrNode::REFERENCES
# uninitialized constant RuboCop::AST::StrNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::StrNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::StrNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::StrNode::VARIABLES
# wrong constant name heredoc?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::SuperNode::ARITHMETIC_OPERATORS
# uninitialized constant RuboCop::AST::SuperNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::SuperNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::SuperNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::SuperNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::SuperNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::SuperNode::CONDITIONALS
# uninitialized constant RuboCop::AST::SuperNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::SuperNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::SuperNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::SuperNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::SuperNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::SuperNode::KEYWORDS
# uninitialized constant RuboCop::AST::SuperNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::SuperNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::SuperNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::SuperNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::SuperNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::SuperNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::SuperNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::SuperNode::REFERENCES
# uninitialized constant RuboCop::AST::SuperNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::SuperNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::SuperNode::SPECIAL_MODIFIERS
# uninitialized constant RuboCop::AST::SuperNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::SuperNode::VARIABLES
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::SymbolNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::SymbolNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::SymbolNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::SymbolNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::SymbolNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::SymbolNode::CONDITIONALS
# uninitialized constant RuboCop::AST::SymbolNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::SymbolNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::SymbolNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::SymbolNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::SymbolNode::KEYWORDS
# uninitialized constant RuboCop::AST::SymbolNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::SymbolNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::SymbolNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::SymbolNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::SymbolNode::REFERENCES
# uninitialized constant RuboCop::AST::SymbolNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::SymbolNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::SymbolNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::SymbolNode::VARIABLES
# wrong constant name <static-init>
# wrong constant name on_alias
# wrong constant name on_and
# wrong constant name on_and_asgn
# wrong constant name on_arg
# wrong constant name on_arg_expr
# wrong constant name on_args
# wrong constant name on_array
# wrong constant name on_array_pattern
# wrong constant name on_array_pattern_with_tail
# wrong constant name on_back_ref
# wrong constant name on_begin
# wrong constant name on_block
# wrong constant name on_block_pass
# wrong constant name on_blockarg
# wrong constant name on_break
# wrong constant name on_case
# wrong constant name on_case_match
# wrong constant name on_casgn
# wrong constant name on_cbase
# wrong constant name on_class
# wrong constant name on_complex
# wrong constant name on_const
# wrong constant name on_const_pattern
# wrong constant name on_csend
# wrong constant name on_cvar
# wrong constant name on_cvasgn
# wrong constant name on_def
# wrong constant name on_defined?
# wrong constant name on_defs
# wrong constant name on_dstr
# wrong constant name on_dsym
# wrong constant name on_eflipflop
# wrong constant name on_ensure
# wrong constant name on_erange
# wrong constant name on_false
# wrong constant name on_float
# wrong constant name on_for
# wrong constant name on_forward_args
# wrong constant name on_forwarded_args
# wrong constant name on_gvar
# wrong constant name on_gvasgn
# wrong constant name on_hash
# wrong constant name on_hash_pattern
# wrong constant name on_if
# wrong constant name on_if_guard
# wrong constant name on_iflipflop
# wrong constant name on_in_match
# wrong constant name on_in_pattern
# wrong constant name on_int
# wrong constant name on_irange
# wrong constant name on_ivar
# wrong constant name on_ivasgn
# wrong constant name on_kwarg
# wrong constant name on_kwbegin
# wrong constant name on_kwoptarg
# wrong constant name on_kwrestarg
# wrong constant name on_kwsplat
# wrong constant name on_lambda
# wrong constant name on_lvar
# wrong constant name on_lvasgn
# wrong constant name on_masgn
# wrong constant name on_match_alt
# wrong constant name on_match_as
# wrong constant name on_match_current_line
# wrong constant name on_match_nil_pattern
# wrong constant name on_match_rest
# wrong constant name on_match_var
# wrong constant name on_match_with_lvasgn
# wrong constant name on_match_with_trailing_comma
# wrong constant name on_mlhs
# wrong constant name on_module
# wrong constant name on_next
# wrong constant name on_nil
# wrong constant name on_not
# wrong constant name on_nth_ref
# wrong constant name on_numblock
# wrong constant name on_op_asgn
# wrong constant name on_optarg
# wrong constant name on_or
# wrong constant name on_or_asgn
# wrong constant name on_pair
# wrong constant name on_pin
# wrong constant name on_postexe
# wrong constant name on_preexe
# wrong constant name on_rational
# wrong constant name on_redo
# wrong constant name on_regexp
# wrong constant name on_regopt
# wrong constant name on_resbody
# wrong constant name on_rescue
# wrong constant name on_restarg
# wrong constant name on_retry
# wrong constant name on_return
# wrong constant name on_sclass
# wrong constant name on_self
# wrong constant name on_send
# wrong constant name on_shadowarg
# wrong constant name on_splat
# wrong constant name on_str
# wrong constant name on_super
# wrong constant name on_sym
# wrong constant name on_true
# wrong constant name on_undef
# wrong constant name on_unless_guard
# wrong constant name on_until
# wrong constant name on_until_post
# wrong constant name on_when
# wrong constant name on_while
# wrong constant name on_while_post
# wrong constant name on_xstr
# wrong constant name on_yield
# wrong constant name on_zsuper
# wrong constant name walk
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::UntilNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::UntilNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::UntilNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::UntilNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::UntilNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::UntilNode::CONDITIONALS
# uninitialized constant RuboCop::AST::UntilNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::UntilNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::UntilNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::UntilNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::UntilNode::KEYWORDS
# uninitialized constant RuboCop::AST::UntilNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::UntilNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::UntilNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::UntilNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::UntilNode::REFERENCES
# uninitialized constant RuboCop::AST::UntilNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::UntilNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::UntilNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::UntilNode::VARIABLES
# wrong constant name do?
# wrong constant name inverse_keyword
# wrong constant name keyword
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::WhenNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::WhenNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::WhenNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::WhenNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::WhenNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::WhenNode::CONDITIONALS
# uninitialized constant RuboCop::AST::WhenNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::WhenNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::WhenNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::WhenNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::WhenNode::KEYWORDS
# uninitialized constant RuboCop::AST::WhenNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::WhenNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::WhenNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::WhenNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::WhenNode::REFERENCES
# uninitialized constant RuboCop::AST::WhenNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::WhenNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::WhenNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::WhenNode::VARIABLES
# wrong constant name body
# wrong constant name branch_index
# wrong constant name conditions
# wrong constant name each_condition
# wrong constant name then?
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::WhileNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::WhileNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::WhileNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::WhileNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::WhileNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::WhileNode::CONDITIONALS
# uninitialized constant RuboCop::AST::WhileNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::WhileNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::WhileNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::WhileNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::WhileNode::KEYWORDS
# uninitialized constant RuboCop::AST::WhileNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::WhileNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::WhileNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::WhileNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::WhileNode::REFERENCES
# uninitialized constant RuboCop::AST::WhileNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::WhileNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::WhileNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::WhileNode::VARIABLES
# wrong constant name do?
# wrong constant name inverse_keyword
# wrong constant name keyword
# wrong constant name <static-init>
# uninitialized constant RuboCop::AST::YieldNode::ARITHMETIC_OPERATORS
# uninitialized constant RuboCop::AST::YieldNode::ASSIGNMENTS
# uninitialized constant RuboCop::AST::YieldNode::BASIC_CONDITIONALS
# uninitialized constant RuboCop::AST::YieldNode::BASIC_LITERALS
# uninitialized constant RuboCop::AST::YieldNode::COMPARISON_OPERATORS
# uninitialized constant RuboCop::AST::YieldNode::COMPOSITE_LITERALS
# uninitialized constant RuboCop::AST::YieldNode::CONDITIONALS
# uninitialized constant RuboCop::AST::YieldNode::ENUMERATOR_METHODS
# uninitialized constant RuboCop::AST::YieldNode::EQUALS_ASSIGNMENTS
# uninitialized constant RuboCop::AST::YieldNode::FALSEY_LITERALS
# uninitialized constant RuboCop::AST::YieldNode::IMMUTABLE_LITERALS
# Did you mean?  RuboCop::AST::YieldNode::MUTABLE_LITERALS
# uninitialized constant RuboCop::AST::YieldNode::KEYWORDS
# uninitialized constant RuboCop::AST::YieldNode::LITERALS
# Did you mean?  Literal
# uninitialized constant RuboCop::AST::YieldNode::MUTABLE_LITERALS
# Did you mean?  RuboCop::AST::YieldNode::IMMUTABLE_LITERALS
# uninitialized constant RuboCop::AST::YieldNode::OPERATOR_KEYWORDS
# Did you mean?  RuboCop::AST::YieldNode::OPERATOR_METHODS
# uninitialized constant RuboCop::AST::YieldNode::OPERATOR_METHODS
# Did you mean?  RuboCop::AST::YieldNode::OPERATOR_KEYWORDS
# uninitialized constant RuboCop::AST::YieldNode::REFERENCES
# uninitialized constant RuboCop::AST::YieldNode::SHORTHAND_ASSIGNMENTS
# uninitialized constant RuboCop::AST::YieldNode::SPECIAL_KEYWORDS
# uninitialized constant RuboCop::AST::YieldNode::SPECIAL_MODIFIERS
# uninitialized constant RuboCop::AST::YieldNode::TRUTHY_LITERALS
# uninitialized constant RuboCop::AST::YieldNode::VARIABLES
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `run<defaultArg>1' for class `RuboCop::CLI'
# wrong constant name <Class:Command>
# wrong constant name <Class:Environment>
# wrong constant name <Class:Finished>
# wrong constant name config_store
# wrong constant name options
# wrong constant name run<defaultArg>1
# wrong constant name run
# wrong constant name <Class:AutoGenerateConfig>
# wrong constant name <Class:Base>
# wrong constant name <Class:ExecuteRunner>
# wrong constant name <Class:InitDotfile>
# wrong constant name <Class:ShowCops>
# wrong constant name <Class:Version>
# wrong constant name run
# wrong constant name <static-init>
# wrong constant name env
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name by_command_name
# wrong constant name command_name
# wrong constant name command_name=
# wrong constant name inherited
# wrong constant name run
# wrong constant name <static-init>
# wrong constant name run
# wrong constant name <static-init>
# wrong constant name run
# wrong constant name <static-init>
# wrong constant name run
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name run
# wrong constant name config_store
# wrong constant name initialize
# wrong constant name options
# wrong constant name paths
# wrong constant name run
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name from_json
# wrong constant name initialize
# wrong constant name to_json
# wrong constant name <static-init>
# wrong constant name <Class:CopAnalysis>
# wrong constant name cop_disabled_line_ranges
# wrong constant name cop_enabled_at_line?
# wrong constant name extra_enabled_comments
# wrong constant name initialize
# wrong constant name processed_source
# uninitialized constant RuboCop::CommentConfig::CopAnalysis::Elem
# wrong constant name line_ranges
# wrong constant name line_ranges=
# wrong constant name start_line_number
# wrong constant name start_line_number=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `RuboCop::Config'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `RuboCop::Config'
# Did you mean?  initialize_dup
# wrong constant name []
# wrong constant name []=
# wrong constant name add_excludes_from_higher_level
# wrong constant name allowed_camel_case_file?
# wrong constant name base_dir_for_path_parameters
# wrong constant name bundler_lock_file_path
# wrong constant name check
# wrong constant name delete
# wrong constant name deprecation_check
# wrong constant name each
# wrong constant name each_key
# wrong constant name file_to_exclude?
# wrong constant name file_to_include?
# wrong constant name for_all_cops
# wrong constant name for_cop
# wrong constant name for_department
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name internal?
# wrong constant name key?
# wrong constant name keys
# wrong constant name loaded_path
# wrong constant name make_excludes_absolute
# wrong constant name map
# wrong constant name merge
# wrong constant name path_relative_to_config
# wrong constant name patterns_to_exclude
# wrong constant name patterns_to_include
# wrong constant name possibly_include_hidden?
# wrong constant name signature
# wrong constant name smart_loaded_path
# wrong constant name target_rails_version
# wrong constant name target_ruby_version
# wrong constant name to_h
# wrong constant name to_hash
# wrong constant name validate
# wrong constant name <static-init>
# wrong constant name create
# undefined singleton method `merge_with_default<defaultArg>1' for `RuboCop::ConfigLoader'
# wrong constant name <static-init>
# wrong constant name add_excludes_from_files
# wrong constant name add_inheritance_from_auto_generated_file
# wrong constant name add_missing_namespaces
# wrong constant name auto_gen_config
# wrong constant name auto_gen_config=
# wrong constant name auto_gen_config?
# wrong constant name clear_options
# wrong constant name configuration_file_for
# wrong constant name configuration_from_file
# wrong constant name debug
# wrong constant name debug=
# wrong constant name debug?
# wrong constant name default_configuration
# wrong constant name default_configuration=
# wrong constant name ignore_parent_exclusion
# wrong constant name ignore_parent_exclusion=
# wrong constant name ignore_parent_exclusion?
# wrong constant name load_file
# wrong constant name merge
# wrong constant name merge_with_default<defaultArg>1
# wrong constant name merge_with_default
# wrong constant name options_config
# wrong constant name options_config=
# wrong constant name warn_on_pending_cops
# wrong constant name merge
# wrong constant name merge_with_default
# wrong constant name resolve_inheritance
# wrong constant name resolve_inheritance_from_gems
# wrong constant name resolve_requires
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name reject_obsolete_cops_and_parameters
# wrong constant name <static-init>
# wrong constant name for
# wrong constant name force_default_config!
# wrong constant name options_config=
# wrong constant name <static-init>
# wrong constant name for_all_cops
# wrong constant name initialize
# wrong constant name smart_loaded_path
# wrong constant name target_ruby_version
# wrong constant name validate
# wrong constant name validate_section_presence
# wrong constant name <static-init>
# wrong constant name <Class:Alignment>
# wrong constant name <Class:AlignmentCorrector>
# wrong constant name <Class:AmbiguousCopName>
# wrong constant name <Class:ArrayMinSize>
# wrong constant name <Class:ArraySyntax>
# wrong constant name <Class:AutocorrectLogic>
# wrong constant name <Class:Badge>
# wrong constant name <Class:Bundler>
# wrong constant name <Class:CheckAssignment>
# wrong constant name <Class:CheckLineBreakable>
# wrong constant name <Class:ClassishLength>
# wrong constant name <Class:CodeLength>
# wrong constant name <Class:Commissioner>
# wrong constant name <Class:ConditionCorrector>
# wrong constant name <Class:ConfigurableEnforcedStyle>
# wrong constant name <Class:ConfigurableFormatting>
# wrong constant name <Class:ConfigurableMax>
# wrong constant name <Class:ConfigurableNaming>
# wrong constant name <Class:ConfigurableNumbering>
# wrong constant name <Class:Cop>
# wrong constant name <Class:Corrector>
# wrong constant name <Class:DefNode>
# wrong constant name <Class:DocumentationComment>
# wrong constant name <Class:Duplication>
# wrong constant name <Class:EachToForCorrector>
# wrong constant name <Class:EmptyLineCorrector>
# wrong constant name <Class:EmptyParameter>
# wrong constant name <Class:EndKeywordAlignment>
# wrong constant name <Class:EnforceSuperclass>
# wrong constant name <Class:FirstElementLineBreak>
# wrong constant name <Class:ForToEachCorrector>
# wrong constant name <Class:Force>
# wrong constant name <Class:FrozenStringLiteral>
# wrong constant name <Class:Gemspec>
# wrong constant name <Class:Generator>
# wrong constant name <Class:HashAlignmentStyles>
# wrong constant name <Class:HashTransformMethod>
# wrong constant name <Class:Heredoc>
# wrong constant name <Class:IgnoredMethods>
# wrong constant name <Class:IgnoredNode>
# wrong constant name <Class:IgnoredPattern>
# wrong constant name <Class:IntegerNode>
# wrong constant name <Class:Interpolation>
# wrong constant name <Class:LambdaLiteralToMethodCorrector>
# wrong constant name <Class:Layout>
# wrong constant name <Class:LineBreakCorrector>
# wrong constant name <Class:LineLengthHelp>
# wrong constant name <Class:Lint>
# wrong constant name <Class:MatchRange>
# wrong constant name <Class:MessageAnnotator>
# wrong constant name <Class:MethodComplexity>
# wrong constant name <Class:MethodPreference>
# wrong constant name <Class:Metrics>
# wrong constant name <Class:Migration>
# wrong constant name <Class:MinBodyLength>
# wrong constant name <Class:MultilineElementIndentation>
# wrong constant name <Class:MultilineElementLineBreaks>
# wrong constant name <Class:MultilineExpressionIndentation>
# wrong constant name <Class:MultilineLiteralBraceCorrector>
# wrong constant name <Class:MultilineLiteralBraceLayout>
# wrong constant name <Class:Naming>
# wrong constant name <Class:NegativeConditional>
# wrong constant name <Class:NilMethods>
# wrong constant name <Class:Offense>
# wrong constant name <Class:OnNormalIfUnless>
# wrong constant name <Class:OrderedGemCorrector>
# wrong constant name <Class:OrderedGemNode>
# wrong constant name <Class:Parentheses>
# wrong constant name <Class:ParenthesesCorrector>
# wrong constant name <Class:ParserDiagnostic>
# wrong constant name <Class:PercentArray>
# wrong constant name <Class:PercentLiteral>
# wrong constant name <Class:PercentLiteralCorrector>
# wrong constant name <Class:PrecedingFollowingAlignment>
# wrong constant name <Class:PreferredDelimiters>
# wrong constant name <Class:PunctuationCorrector>
# wrong constant name <Class:RangeHelp>
# wrong constant name <Class:RationalLiteral>
# wrong constant name <Class:Registry>
# wrong constant name <Class:RescueNode>
# wrong constant name <Class:SafeAssignment>
# wrong constant name <Class:Security>
# wrong constant name <Class:Severity>
# wrong constant name <Class:SpaceAfterPunctuation>
# wrong constant name <Class:SpaceBeforePunctuation>
# wrong constant name <Class:SpaceCorrector>
# wrong constant name <Class:StatementModifier>
# wrong constant name <Class:StringHelp>
# wrong constant name <Class:StringLiteralCorrector>
# wrong constant name <Class:StringLiteralsHelp>
# wrong constant name <Class:Style>
# wrong constant name <Class:SurroundingSpace>
# wrong constant name <Class:TargetRubyVersion>
# wrong constant name <Class:Team>
# wrong constant name <Class:TooManyLines>
# wrong constant name <Class:TrailingBody>
# wrong constant name <Class:TrailingComma>
# wrong constant name <Class:UncommunicativeName>
# wrong constant name <Class:UnusedArgCorrector>
# wrong constant name <Class:Util>
# wrong constant name <Class:Utils>
# wrong constant name <Class:VariableForce>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name align_end
# wrong constant name correct
# wrong constant name processed_source
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name autocorrect?
# wrong constant name autocorrect_enabled?
# wrong constant name autocorrect_requested?
# wrong constant name correctable?
# wrong constant name disable_offense
# wrong constant name disable_uncorrectable?
# wrong constant name safe_autocorrect?
# wrong constant name support_autocorrect?
# wrong constant name <static-init>
# wrong constant name ==
# wrong constant name <Class:InvalidBadge>
# wrong constant name cop_name
# wrong constant name department
# wrong constant name eql?
# wrong constant name initialize
# wrong constant name match?
# wrong constant name qualified?
# wrong constant name with_department
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name for
# wrong constant name parse
# wrong constant name <Class:DuplicatedGem>
# wrong constant name <Class:GemComment>
# wrong constant name <Class:InsecureProtocolSource>
# wrong constant name <Class:OrderedGems>
# uninitialized constant RuboCop::Cop::Bundler::DuplicatedGem::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Bundler::DuplicatedGem::LITERAL_REGEX
# wrong constant name gem_declarations
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `gem_declaration?<defaultArg>1' for class `RuboCop::Cop::Bundler::GemComment'
# uninitialized constant RuboCop::Cop::Bundler::GemComment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Bundler::GemComment::NON_PUBLIC_MODIFIERS
# wrong constant name gem_declaration?<defaultArg>1
# wrong constant name gem_declaration?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `insecure_protocol_source?<defaultArg>1' for class `RuboCop::Cop::Bundler::InsecureProtocolSource'
# uninitialized constant RuboCop::Cop::Bundler::InsecureProtocolSource::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Bundler::InsecureProtocolSource::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name insecure_protocol_source?<defaultArg>1
# wrong constant name insecure_protocol_source?
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Bundler::OrderedGems::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name gem_declarations
# wrong constant name investigate
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name on_and_asgn
# wrong constant name on_casgn
# wrong constant name on_cvasgn
# wrong constant name on_gvasgn
# wrong constant name on_ivasgn
# wrong constant name on_lvasgn
# wrong constant name on_masgn
# wrong constant name on_op_asgn
# wrong constant name on_or_asgn
# wrong constant name on_send
# wrong constant name <static-init>
# wrong constant name extract_rhs
# wrong constant name extract_breakable_node
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Commissioner'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `RuboCop::Cop::Commissioner'
# Did you mean?  initialize_dup
# uninitialized constant RuboCop::Cop::Commissioner::MANY_CHILD_NODES
# Did you mean?  RuboCop::Cop::Commissioner::ONE_CHILD_NODE
#                RuboCop::Cop::Commissioner::NO_CHILD_NODES
# uninitialized constant RuboCop::Cop::Commissioner::NO_CHILD_NODES
# Did you mean?  RuboCop::Cop::Commissioner::ONE_CHILD_NODE
#                RuboCop::Cop::Commissioner::MANY_CHILD_NODES
# uninitialized constant RuboCop::Cop::Commissioner::ONE_CHILD_NODE
# Did you mean?  RuboCop::Cop::Commissioner::NO_CHILD_NODES
#                RuboCop::Cop::Commissioner::MANY_CHILD_NODES
# uninitialized constant RuboCop::Cop::Commissioner::SECOND_CHILD_ONLY
# wrong constant name errors
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name investigate
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name correct_negative_condition
# wrong constant name alternative_style
# wrong constant name alternative_styles
# wrong constant name ambiguous_style_detected
# wrong constant name conflicting_styles_detected
# wrong constant name correct_style_detected
# wrong constant name detected_style
# wrong constant name detected_style=
# wrong constant name no_acceptable_style!
# wrong constant name no_acceptable_style?
# wrong constant name opposite_style_detected
# wrong constant name style
# wrong constant name style_configured?
# wrong constant name style_detected
# wrong constant name style_parameter_name
# wrong constant name supported_styles
# wrong constant name unexpected_style_detected
# wrong constant name unrecognized_style_detected
# wrong constant name <static-init>
# undefined method `valid_name?<defaultArg>1' for module `RuboCop::Cop::ConfigurableFormatting'
# wrong constant name check_name
# wrong constant name class_emitter_method?
# wrong constant name report_opposing_styles
# wrong constant name valid_name?<defaultArg>1
# wrong constant name valid_name?
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `add_offense<defaultArg>1' for class `RuboCop::Cop::Cop'
# undefined method `add_offense<defaultArg>2' for class `RuboCop::Cop::Cop'
# undefined method `add_offense<defaultArg>3' for class `RuboCop::Cop::Cop'
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Cop'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `RuboCop::Cop::Cop'
# Did you mean?  initialize_dup
# undefined method `message<defaultArg>1' for class `RuboCop::Cop::Cop'
# undefined method `parse<defaultArg>1' for class `RuboCop::Cop::Cop'
# wrong constant name <Class:Correction>
# uninitialized constant RuboCop::Cop::Cop::LITERAL_REGEX
# wrong constant name add_offense<defaultArg>1
# wrong constant name add_offense<defaultArg>2
# wrong constant name add_offense<defaultArg>3
# wrong constant name add_offense
# wrong constant name config
# wrong constant name config_to_allow_offenses
# wrong constant name config_to_allow_offenses=
# wrong constant name cop_config
# wrong constant name cop_name
# wrong constant name correct
# wrong constant name corrections
# wrong constant name disable_uncorrectable
# wrong constant name duplicate_location?
# wrong constant name excluded_file?
# wrong constant name external_dependency_checksum
# wrong constant name find_location
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name join_force?
# wrong constant name message<defaultArg>1
# wrong constant name message
# wrong constant name name
# wrong constant name offenses
# wrong constant name parse<defaultArg>1
# wrong constant name parse
# wrong constant name processed_source
# wrong constant name processed_source=
# wrong constant name reason_to_not_correct
# wrong constant name relevant_file?
# wrong constant name target_rails_version
# wrong constant name target_ruby_version
# uninitialized constant RuboCop::Cop::Cop::Correction::Elem
# wrong constant name call
# wrong constant name cop
# wrong constant name cop=
# wrong constant name lambda=
# wrong constant name node
# wrong constant name node=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# wrong constant name all
# wrong constant name autocorrect_incompatible_with
# wrong constant name badge
# wrong constant name cop_name
# wrong constant name department
# wrong constant name inherited
# wrong constant name lint?
# wrong constant name match?
# wrong constant name qualified_cop_name
# wrong constant name registry
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Corrector'
# Did you mean?  initialize_dup
# wrong constant name corrections
# wrong constant name diagnostics
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name insert_after
# wrong constant name insert_before
# wrong constant name remove
# wrong constant name remove_leading
# wrong constant name remove_preceding
# wrong constant name remove_trailing
# wrong constant name replace
# wrong constant name rewrite
# wrong constant name <static-init>
# undefined method `non_public_modifier?<defaultArg>1' for module `RuboCop::Cop::DefNode'
# wrong constant name non_public_modifier?<defaultArg>1
# wrong constant name non_public_modifier?
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name call
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name correct
# wrong constant name insert_before
# undefined method `empty_arguments?<defaultArg>1' for module `RuboCop::Cop::EmptyParameter'
# wrong constant name empty_arguments?<defaultArg>1
# wrong constant name empty_arguments?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::EndKeywordAlignment::BYTE_ORDER_MARK
# wrong constant name <static-init>
# wrong constant name on_class
# wrong constant name on_send
# wrong constant name <static-init>
# wrong constant name included
# wrong constant name <static-init>
# wrong constant name call
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name cops
# wrong constant name initialize
# wrong constant name investigate
# wrong constant name name
# wrong constant name run_hook
# wrong constant name <static-init>
# wrong constant name all
# wrong constant name force_name
# wrong constant name inherited
# wrong constant name <static-init>
# wrong constant name frozen_string_literal_comment_exists?
# wrong constant name <Class:DuplicatedAssignment>
# wrong constant name <Class:OrderedDependencies>
# wrong constant name <Class:RequiredRubyVersion>
# wrong constant name <Class:RubyVersionGlobalsUsage>
# uninitialized constant RuboCop::Cop::Gemspec::DuplicatedAssignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Gemspec::DuplicatedAssignment::LITERAL_REGEX
# wrong constant name assignment_method_declarations
# wrong constant name gem_specification
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Gemspec::OrderedDependencies::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name dependency_declarations
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Gemspec::RequiredRubyVersion::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name required_ruby_version
# wrong constant name <static-init>
# undefined method `ruby_version?<defaultArg>1' for class `RuboCop::Cop::Gemspec::RubyVersionGlobalsUsage'
# uninitialized constant RuboCop::Cop::Gemspec::RubyVersionGlobalsUsage::LITERAL_REGEX
# wrong constant name gem_specification?
# wrong constant name on_const
# wrong constant name ruby_version?<defaultArg>1
# wrong constant name ruby_version?
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Generator'
# Did you mean?  initialize_dup
# undefined method `inject_config<defaultArg>1' for class `RuboCop::Cop::Generator'
# undefined method `inject_require<defaultArg>1' for class `RuboCop::Cop::Generator'
# wrong constant name <Class:ConfigurationInjector>
# wrong constant name <Class:RequireFileInjector>
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name inject_config<defaultArg>1
# wrong constant name inject_config
# wrong constant name inject_require<defaultArg>1
# wrong constant name inject_require
# wrong constant name todo
# wrong constant name write_source
# wrong constant name write_spec
# wrong constant name initialize
# wrong constant name inject
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Generator::RequireFileInjector'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name inject
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:KeyAlignment>
# wrong constant name <Class:SeparatorAlignment>
# wrong constant name <Class:TableAlignment>
# wrong constant name <Class:ValueAlignment>
# wrong constant name checkable_layout?
# wrong constant name deltas
# wrong constant name deltas_for_first_pair
# wrong constant name <static-init>
# wrong constant name deltas_for_first_pair
# wrong constant name <static-init>
# wrong constant name deltas_for_first_pair
# wrong constant name <static-init>
# wrong constant name checkable_layout?
# wrong constant name deltas
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:Autocorrection>
# wrong constant name <Class:Captures>
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name on_csend
# wrong constant name on_send
# uninitialized constant RuboCop::Cop::HashTransformMethod::Autocorrection::Elem
# wrong constant name block_node
# wrong constant name block_node=
# wrong constant name leading
# wrong constant name leading=
# wrong constant name match
# wrong constant name match=
# wrong constant name set_new_arg_name
# wrong constant name set_new_body_expression
# wrong constant name set_new_method_name
# wrong constant name strip_prefix_and_suffix
# wrong constant name trailing
# wrong constant name trailing=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name from_each_with_object
# wrong constant name from_hash_brackets_map
# wrong constant name from_map_to_h
# wrong constant name members
# uninitialized constant RuboCop::Cop::HashTransformMethod::Captures::Elem
# wrong constant name noop_transformation?
# wrong constant name transformation_uses_both_args?
# wrong constant name transformed_argname
# wrong constant name transformed_argname=
# wrong constant name transforming_body_expr
# wrong constant name transforming_body_expr=
# wrong constant name unchanged_body_expr
# wrong constant name unchanged_body_expr=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# wrong constant name on_dstr
# wrong constant name on_heredoc
# wrong constant name on_str
# wrong constant name on_xstr
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name ignore_node
# wrong constant name ignored_node?
# wrong constant name part_of_ignored_node?
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name on_dstr
# wrong constant name on_dsym
# wrong constant name on_node_with_interpolations
# wrong constant name on_regexp
# wrong constant name on_xstr
# wrong constant name <static-init>
# wrong constant name call
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <Class:AccessModifierIndentation>
# wrong constant name <Class:ArgumentAlignment>
# wrong constant name <Class:ArrayAlignment>
# wrong constant name <Class:AssignmentIndentation>
# wrong constant name <Class:BlockAlignment>
# wrong constant name <Class:BlockEndNewline>
# wrong constant name <Class:CaseIndentation>
# wrong constant name <Class:ClassStructure>
# wrong constant name <Class:ClosingHeredocIndentation>
# wrong constant name <Class:ClosingParenthesisIndentation>
# wrong constant name <Class:CommentIndentation>
# wrong constant name <Class:ConditionPosition>
# wrong constant name <Class:DefEndAlignment>
# wrong constant name <Class:DotPosition>
# wrong constant name <Class:ElseAlignment>
# wrong constant name <Class:EmptyComment>
# wrong constant name <Class:EmptyLineAfterGuardClause>
# wrong constant name <Class:EmptyLineAfterMagicComment>
# wrong constant name <Class:EmptyLineBetweenDefs>
# wrong constant name <Class:EmptyLines>
# wrong constant name <Class:EmptyLinesAroundAccessModifier>
# wrong constant name <Class:EmptyLinesAroundArguments>
# wrong constant name <Class:EmptyLinesAroundBeginBody>
# wrong constant name <Class:EmptyLinesAroundBlockBody>
# wrong constant name <Class:EmptyLinesAroundBody>
# wrong constant name <Class:EmptyLinesAroundClassBody>
# wrong constant name <Class:EmptyLinesAroundExceptionHandlingKeywords>
# wrong constant name <Class:EmptyLinesAroundMethodBody>
# wrong constant name <Class:EmptyLinesAroundModuleBody>
# wrong constant name <Class:EndAlignment>
# wrong constant name <Class:EndOfLine>
# wrong constant name <Class:ExtraSpacing>
# wrong constant name <Class:FirstArgumentIndentation>
# wrong constant name <Class:FirstArrayElementIndentation>
# wrong constant name <Class:FirstArrayElementLineBreak>
# wrong constant name <Class:FirstHashElementIndentation>
# wrong constant name <Class:FirstHashElementLineBreak>
# wrong constant name <Class:FirstMethodArgumentLineBreak>
# wrong constant name <Class:FirstMethodParameterLineBreak>
# wrong constant name <Class:FirstParameterIndentation>
# wrong constant name <Class:HashAlignment>
# wrong constant name <Class:HeredocArgumentClosingParenthesis>
# wrong constant name <Class:HeredocIndentation>
# wrong constant name <Class:IndentationConsistency>
# wrong constant name <Class:IndentationWidth>
# wrong constant name <Class:InitialIndentation>
# wrong constant name <Class:LeadingCommentSpace>
# wrong constant name <Class:LeadingEmptyLines>
# wrong constant name <Class:LineLength>
# wrong constant name <Class:MultilineArrayBraceLayout>
# wrong constant name <Class:MultilineArrayLineBreaks>
# wrong constant name <Class:MultilineAssignmentLayout>
# wrong constant name <Class:MultilineBlockLayout>
# wrong constant name <Class:MultilineHashBraceLayout>
# wrong constant name <Class:MultilineHashKeyLineBreaks>
# wrong constant name <Class:MultilineMethodArgumentLineBreaks>
# wrong constant name <Class:MultilineMethodCallBraceLayout>
# wrong constant name <Class:MultilineMethodCallIndentation>
# wrong constant name <Class:MultilineMethodDefinitionBraceLayout>
# wrong constant name <Class:MultilineOperationIndentation>
# wrong constant name <Class:ParameterAlignment>
# wrong constant name <Class:RescueEnsureAlignment>
# wrong constant name <Class:SpaceAfterColon>
# wrong constant name <Class:SpaceAfterComma>
# wrong constant name <Class:SpaceAfterMethodName>
# wrong constant name <Class:SpaceAfterNot>
# wrong constant name <Class:SpaceAfterSemicolon>
# wrong constant name <Class:SpaceAroundBlockParameters>
# wrong constant name <Class:SpaceAroundEqualsInParameterDefault>
# wrong constant name <Class:SpaceAroundKeyword>
# wrong constant name <Class:SpaceAroundOperators>
# wrong constant name <Class:SpaceBeforeBlockBraces>
# wrong constant name <Class:SpaceBeforeComma>
# wrong constant name <Class:SpaceBeforeComment>
# wrong constant name <Class:SpaceBeforeFirstArg>
# wrong constant name <Class:SpaceBeforeSemicolon>
# wrong constant name <Class:SpaceInLambdaLiteral>
# wrong constant name <Class:SpaceInsideArrayLiteralBrackets>
# wrong constant name <Class:SpaceInsideArrayPercentLiteral>
# wrong constant name <Class:SpaceInsideBlockBraces>
# wrong constant name <Class:SpaceInsideHashLiteralBraces>
# wrong constant name <Class:SpaceInsideParens>
# wrong constant name <Class:SpaceInsidePercentLiteralDelimiters>
# wrong constant name <Class:SpaceInsideRangeLiteral>
# wrong constant name <Class:SpaceInsideReferenceBrackets>
# wrong constant name <Class:SpaceInsideStringInterpolation>
# wrong constant name <Class:Tab>
# wrong constant name <Class:TrailingEmptyLines>
# wrong constant name <Class:TrailingWhitespace>
# uninitialized constant RuboCop::Cop::Layout::AccessModifierIndentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::AccessModifierIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::AccessModifierIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name on_sclass
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::ArgumentAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ArgumentAlignment::SPACE
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::ArrayAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ArrayAlignment::SPACE
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::AssignmentIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::AssignmentIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name check_assignment
# wrong constant name leftmost_multiple_assignment
# wrong constant name <static-init>
# undefined method `block_end_align_target?<defaultArg>1' for class `RuboCop::Cop::Layout::BlockAlignment'
# uninitialized constant RuboCop::Cop::Layout::BlockAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::BlockAlignment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name block_end_align_target?<defaultArg>1
# wrong constant name block_end_align_target?
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::BlockEndNewline::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::BlockEndNewline::SPACE
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::CaseIndentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::CaseIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::CaseIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name on_case
# wrong constant name <static-init>
# undefined method `visibility_block?<defaultArg>1' for class `RuboCop::Cop::Layout::ClassStructure'
# uninitialized constant RuboCop::Cop::Layout::ClassStructure::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_class
# wrong constant name visibility_block?<defaultArg>1
# wrong constant name visibility_block?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::ClosingHeredocIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ClosingHeredocIndentation::OPENING_DELIMITER
# wrong constant name autocorrect
# wrong constant name on_heredoc
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::ClosingParenthesisIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ClosingParenthesisIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name on_begin
# wrong constant name on_csend
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::CommentIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::CommentIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::ConditionPosition::LITERAL_REGEX
# wrong constant name on_if
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::DefEndAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::DefEndAlignment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::DotPosition::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `on_if<defaultArg>1' for class `RuboCop::Cop::Layout::ElseAlignment'
# uninitialized constant RuboCop::Cop::Layout::ElseAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::ElseAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ElseAlignment::SPACE
# wrong constant name autocorrect
# wrong constant name on_case
# wrong constant name on_if<defaultArg>1
# wrong constant name on_if
# wrong constant name on_rescue
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyComment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyComment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterGuardClause::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterGuardClause::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterMagicComment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLineAfterMagicComment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLineBetweenDefs::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLineBetweenDefs::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name check_defs
# wrong constant name on_begin
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLines::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLines::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundAccessModifier::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundAccessModifier::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name on_sclass
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundArguments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundArguments::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBeginBody::MSG_MISSING
# wrong constant name autocorrect
# wrong constant name on_kwbegin
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBlockBody::MSG_MISSING
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# undefined method `constant_definition?<defaultArg>1' for module `RuboCop::Cop::Layout::EmptyLinesAroundBody'
# undefined method `empty_line_required?<defaultArg>1' for module `RuboCop::Cop::Layout::EmptyLinesAroundBody'
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundBody::BYTE_ORDER_MARK
# wrong constant name constant_definition?<defaultArg>1
# wrong constant name constant_definition?
# wrong constant name empty_line_required?<defaultArg>1
# wrong constant name empty_line_required?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundClassBody::MSG_MISSING
# wrong constant name autocorrect
# wrong constant name on_class
# wrong constant name on_sclass
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundExceptionHandlingKeywords::MSG_MISSING
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_kwbegin
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundMethodBody::MSG_MISSING
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::MSG_DEFERRED
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::MSG_EXTRA
# uninitialized constant RuboCop::Cop::Layout::EmptyLinesAroundModuleBody::MSG_MISSING
# wrong constant name autocorrect
# wrong constant name on_module
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EndAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EndAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::EndAlignment::MSG
# wrong constant name autocorrect
# wrong constant name on_case
# wrong constant name on_class
# wrong constant name on_if
# wrong constant name on_module
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::EndOfLine::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::EndOfLine::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name offense_message
# wrong constant name unimportant_missing_cr?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::ExtraSpacing::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::ExtraSpacing::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `eligible_method_call?<defaultArg>1' for class `RuboCop::Cop::Layout::FirstArgumentIndentation'
# uninitialized constant RuboCop::Cop::Layout::FirstArgumentIndentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::FirstArgumentIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstArgumentIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name eligible_method_call?<defaultArg>1
# wrong constant name eligible_method_call?
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::FirstArrayElementIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstArrayElementIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::FirstArrayElementLineBreak::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::FirstHashElementIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstHashElementIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_hash
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::FirstHashElementLineBreak::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_hash
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::FirstMethodArgumentLineBreak::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name on_super
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::FirstMethodParameterLineBreak::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::FirstParameterIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::FirstParameterIndentation::SPACE
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::HashAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::HashAlignment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name column_deltas
# wrong constant name column_deltas=
# wrong constant name offences_by
# wrong constant name offences_by=
# wrong constant name on_hash
# wrong constant name on_send
# wrong constant name on_super
# wrong constant name on_yield
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::HeredocArgumentClosingParenthesis::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::HeredocArgumentClosingParenthesis::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::HeredocIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::HeredocIndentation::OPENING_DELIMITER
# wrong constant name autocorrect
# wrong constant name on_heredoc
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::IndentationConsistency::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::IndentationConsistency::SPACE
# wrong constant name autocorrect
# wrong constant name on_begin
# wrong constant name on_kwbegin
# wrong constant name <static-init>
# undefined method `access_modifier?<defaultArg>1' for class `RuboCop::Cop::Layout::IndentationWidth'
# undefined method `on_if<defaultArg>1' for class `RuboCop::Cop::Layout::IndentationWidth'
# undefined method `on_until<defaultArg>1' for class `RuboCop::Cop::Layout::IndentationWidth'
# undefined method `on_while<defaultArg>1' for class `RuboCop::Cop::Layout::IndentationWidth'
# uninitialized constant RuboCop::Cop::Layout::IndentationWidth::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::IndentationWidth::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::IndentationWidth::SPACE
# wrong constant name access_modifier?<defaultArg>1
# wrong constant name access_modifier?
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name on_case
# wrong constant name on_class
# wrong constant name on_csend
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_ensure
# wrong constant name on_for
# wrong constant name on_if<defaultArg>1
# wrong constant name on_if
# wrong constant name on_kwbegin
# wrong constant name on_module
# wrong constant name on_resbody
# wrong constant name on_rescue
# wrong constant name on_sclass
# wrong constant name on_until<defaultArg>1
# wrong constant name on_until
# wrong constant name on_while<defaultArg>1
# wrong constant name on_while
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::InitialIndentation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::InitialIndentation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::LeadingCommentSpace::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::LeadingCommentSpace::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::LeadingEmptyLines::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::LineLength::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::LineLength::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name investigate_post_walk
# wrong constant name on_array
# wrong constant name on_block
# wrong constant name on_hash
# wrong constant name on_potential_breakable_node
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineArrayBraceLayout::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineArrayLineBreaks::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineAssignmentLayout::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::MultilineAssignmentLayout::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name check_assignment
# wrong constant name check_by_enforced_style
# wrong constant name check_new_line_offense
# wrong constant name check_same_line_offense
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineBlockLayout::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::MultilineBlockLayout::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineHashBraceLayout::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_hash
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineHashKeyLineBreaks::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_hash
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodArgumentLineBreaks::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallBraceLayout::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallIndentation::ASSIGNMENT_MESSAGE_TAIL
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallIndentation::DEFAULT_MESSAGE_TAIL
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallIndentation::KEYWORD_ANCESTOR_TYPES
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallIndentation::KEYWORD_MESSAGE_TAIL
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodCallIndentation::UNALIGNED_RHS_TYPES
# wrong constant name autocorrect
# wrong constant name validate_config
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineMethodDefinitionBraceLayout::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::MultilineOperationIndentation::ASSIGNMENT_MESSAGE_TAIL
# uninitialized constant RuboCop::Cop::Layout::MultilineOperationIndentation::DEFAULT_MESSAGE_TAIL
# uninitialized constant RuboCop::Cop::Layout::MultilineOperationIndentation::KEYWORD_ANCESTOR_TYPES
# uninitialized constant RuboCop::Cop::Layout::MultilineOperationIndentation::KEYWORD_MESSAGE_TAIL
# uninitialized constant RuboCop::Cop::Layout::MultilineOperationIndentation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::MultilineOperationIndentation::SPACE
# uninitialized constant RuboCop::Cop::Layout::MultilineOperationIndentation::UNALIGNED_RHS_TYPES
# wrong constant name autocorrect
# wrong constant name on_and
# wrong constant name on_or
# wrong constant name validate_config
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::ParameterAlignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::ParameterAlignment::SPACE
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::RescueEnsureAlignment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::RescueEnsureAlignment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name on_ensure
# wrong constant name on_resbody
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterColon::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_kwoptarg
# wrong constant name on_pair
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterComma::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterComma::MSG
# wrong constant name autocorrect
# wrong constant name kind
# wrong constant name space_style_before_rcurly
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterMethodName::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterMethodName::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterNot::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterNot::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name whitespace_after_operator?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterSemicolon::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAfterSemicolon::MSG
# wrong constant name autocorrect
# wrong constant name kind
# wrong constant name space_style_before_rcurly
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundBlockParameters::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundBlockParameters::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceAroundEqualsInParameterDefault::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name on_optarg
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundKeyword::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_and
# wrong constant name on_block
# wrong constant name on_break
# wrong constant name on_case
# wrong constant name on_defined?
# wrong constant name on_ensure
# wrong constant name on_for
# wrong constant name on_if
# wrong constant name on_kwbegin
# wrong constant name on_next
# wrong constant name on_or
# wrong constant name on_postexe
# wrong constant name on_preexe
# wrong constant name on_resbody
# wrong constant name on_rescue
# wrong constant name on_return
# wrong constant name on_send
# wrong constant name on_super
# wrong constant name on_until
# wrong constant name on_when
# wrong constant name on_while
# wrong constant name on_yield
# wrong constant name on_zsuper
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundOperators::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceAroundOperators::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_and
# wrong constant name on_and_asgn
# wrong constant name on_assignment
# wrong constant name on_binary
# wrong constant name on_casgn
# wrong constant name on_class
# wrong constant name on_cvasgn
# wrong constant name on_gvasgn
# wrong constant name on_if
# wrong constant name on_ivasgn
# wrong constant name on_lvasgn
# wrong constant name on_masgn
# wrong constant name on_op_asgn
# wrong constant name on_or
# wrong constant name on_or_asgn
# wrong constant name on_pair
# wrong constant name on_resbody
# wrong constant name on_send
# wrong constant name on_special_asgn
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeBlockBraces::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeBlockBraces::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeComma::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeComma::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeComma::MSG
# wrong constant name autocorrect
# wrong constant name kind
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeComment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeFirstArg::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeFirstArg::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeSemicolon::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeSemicolon::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceBeforeSemicolon::MSG
# wrong constant name autocorrect
# wrong constant name kind
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInLambdaLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInLambdaLiteral::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideArrayLiteralBrackets::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayPercentLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideArrayPercentLiteral::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name on_percent_literal
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideBlockBraces::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideBlockBraces::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideBlockBraces::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideBlockBraces::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideBlockBraces::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideBlockBraces::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideBlockBraces::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideHashLiteralBraces::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name on_hash
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideParens::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideParens::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideParens::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsidePercentLiteralDelimiters::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsidePercentLiteralDelimiters::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name on_percent_literal
# wrong constant name on_xstr
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideRangeLiteral::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_erange
# wrong constant name on_irange
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideReferenceBrackets::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideStringInterpolation::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Layout::SpaceInsideStringInterpolation::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Layout::SpaceInsideStringInterpolation::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name on_interpolation
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::Tab::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::Tab::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Layout::Tab::SPACE
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::TrailingEmptyLines::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::TrailingEmptyLines::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Layout::TrailingWhitespace::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Layout::TrailingWhitespace::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined singleton method `break_line_before<defaultArg>1' for `RuboCop::Cop::LineBreakCorrector'
# wrong constant name <static-init>
# wrong constant name break_line_before<defaultArg>1
# wrong constant name break_line_before
# wrong constant name correct_trailing_body
# wrong constant name move_comment
# wrong constant name processed_source
# wrong constant name <static-init>
# wrong constant name <Class:AmbiguousBlockAssociation>
# wrong constant name <Class:AmbiguousOperator>
# wrong constant name <Class:AmbiguousRegexpLiteral>
# wrong constant name <Class:AssignmentInCondition>
# wrong constant name <Class:BigDecimalNew>
# wrong constant name <Class:BooleanSymbol>
# wrong constant name <Class:CircularArgumentReference>
# wrong constant name <Class:Debugger>
# wrong constant name <Class:DeprecatedClassMethods>
# wrong constant name <Class:DisjunctiveAssignmentInConstructor>
# wrong constant name <Class:DuplicateCaseCondition>
# wrong constant name <Class:DuplicateHashKey>
# wrong constant name <Class:DuplicateMethods>
# wrong constant name <Class:EachWithObjectArgument>
# wrong constant name <Class:ElseLayout>
# wrong constant name <Class:EmptyEnsure>
# wrong constant name <Class:EmptyExpression>
# wrong constant name <Class:EmptyInterpolation>
# wrong constant name <Class:EmptyWhen>
# wrong constant name <Class:EndInMethod>
# wrong constant name <Class:EnsureReturn>
# wrong constant name <Class:ErbNewArguments>
# wrong constant name <Class:FlipFlop>
# wrong constant name <Class:FloatOutOfRange>
# wrong constant name <Class:FormatParameterMismatch>
# wrong constant name <Class:HeredocMethodCallPosition>
# wrong constant name <Class:ImplicitStringConcatenation>
# wrong constant name <Class:IneffectiveAccessModifier>
# wrong constant name <Class:InheritException>
# wrong constant name <Class:InterpolationCheck>
# wrong constant name <Class:LiteralAsCondition>
# wrong constant name <Class:LiteralInInterpolation>
# wrong constant name <Class:Loop>
# wrong constant name <Class:MissingCopEnableDirective>
# wrong constant name <Class:MultipleComparison>
# wrong constant name <Class:NestedMethodDefinition>
# wrong constant name <Class:NestedPercentLiteral>
# wrong constant name <Class:NextWithoutAccumulator>
# wrong constant name <Class:NonDeterministicRequireOrder>
# wrong constant name <Class:NonLocalExitFromIterator>
# wrong constant name <Class:NumberConversion>
# wrong constant name <Class:OrderedMagicComments>
# wrong constant name <Class:ParenthesesAsGroupedExpression>
# wrong constant name <Class:PercentStringArray>
# wrong constant name <Class:PercentSymbolArray>
# wrong constant name <Class:RandOne>
# wrong constant name <Class:RedundantCopDisableDirective>
# wrong constant name <Class:RedundantCopEnableDirective>
# wrong constant name <Class:RedundantRequireStatement>
# wrong constant name <Class:RedundantSplatExpansion>
# wrong constant name <Class:RedundantStringCoercion>
# wrong constant name <Class:RedundantWithIndex>
# wrong constant name <Class:RedundantWithObject>
# wrong constant name <Class:RegexpAsCondition>
# wrong constant name <Class:RequireParentheses>
# wrong constant name <Class:RescueException>
# wrong constant name <Class:RescueType>
# wrong constant name <Class:ReturnInVoidContext>
# wrong constant name <Class:SafeNavigationChain>
# wrong constant name <Class:SafeNavigationConsistency>
# wrong constant name <Class:SafeNavigationWithEmpty>
# wrong constant name <Class:ScriptPermission>
# wrong constant name <Class:SendWithMixinArgument>
# wrong constant name <Class:ShadowedArgument>
# wrong constant name <Class:ShadowedException>
# wrong constant name <Class:ShadowingOuterLocalVariable>
# wrong constant name <Class:SuppressedException>
# wrong constant name <Class:Syntax>
# wrong constant name <Class:ToJSON>
# wrong constant name <Class:UnderscorePrefixedVariableName>
# wrong constant name <Class:UnifiedInteger>
# wrong constant name <Class:UnreachableCode>
# wrong constant name <Class:UnusedArgument>
# wrong constant name <Class:UnusedBlockArgument>
# wrong constant name <Class:UnusedMethodArgument>
# wrong constant name <Class:UriEscapeUnescape>
# wrong constant name <Class:UriRegexp>
# wrong constant name <Class:UselessAccessModifier>
# wrong constant name <Class:UselessAssignment>
# wrong constant name <Class:UselessComparison>
# wrong constant name <Class:UselessElseWithoutRescue>
# wrong constant name <Class:UselessSetterCall>
# wrong constant name <Class:Void>
# uninitialized constant RuboCop::Cop::Lint::AmbiguousBlockAssociation::LITERAL_REGEX
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::AmbiguousOperator::LITERAL_REGEX
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::AmbiguousRegexpLiteral::LITERAL_REGEX
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::AssignmentInCondition::LITERAL_REGEX
# wrong constant name on_if
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name <static-init>
# undefined method `big_decimal_new<defaultArg>1' for class `RuboCop::Cop::Lint::BigDecimalNew'
# uninitialized constant RuboCop::Cop::Lint::BigDecimalNew::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name big_decimal_new<defaultArg>1
# wrong constant name big_decimal_new
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `boolean_symbol?<defaultArg>1' for class `RuboCop::Cop::Lint::BooleanSymbol'
# uninitialized constant RuboCop::Cop::Lint::BooleanSymbol::LITERAL_REGEX
# wrong constant name boolean_symbol?<defaultArg>1
# wrong constant name boolean_symbol?
# wrong constant name on_sym
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::CircularArgumentReference::LITERAL_REGEX
# wrong constant name on_kwoptarg
# wrong constant name on_optarg
# wrong constant name <static-init>
# undefined method `binding_irb_call?<defaultArg>1' for class `RuboCop::Cop::Lint::Debugger'
# undefined method `debugger_call?<defaultArg>1' for class `RuboCop::Cop::Lint::Debugger'
# undefined method `kernel?<defaultArg>1' for class `RuboCop::Cop::Lint::Debugger'
# uninitialized constant RuboCop::Cop::Lint::Debugger::LITERAL_REGEX
# wrong constant name binding_irb_call?<defaultArg>1
# wrong constant name binding_irb_call?
# wrong constant name debugger_call?<defaultArg>1
# wrong constant name debugger_call?
# wrong constant name kernel?<defaultArg>1
# wrong constant name kernel?
# wrong constant name on_send
# wrong constant name <static-init>
# wrong constant name <Class:DeprecatedClassMethod>
# uninitialized constant RuboCop::Cop::Lint::DeprecatedClassMethods::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Lint::DeprecatedClassMethods::DeprecatedClassMethod'
# Did you mean?  initialize_dup
# wrong constant name class_constant
# wrong constant name class_nodes
# wrong constant name deprecated_method
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name replacement_method
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::DisjunctiveAssignmentInConstructor::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::DuplicateCaseCondition::LITERAL_REGEX
# wrong constant name on_case
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::DuplicateHashKey::LITERAL_REGEX
# wrong constant name on_hash
# wrong constant name <static-init>
# undefined method `alias_method?<defaultArg>1' for class `RuboCop::Cop::Lint::DuplicateMethods'
# undefined method `attr?<defaultArg>1' for class `RuboCop::Cop::Lint::DuplicateMethods'
# undefined method `method_alias?<defaultArg>1' for class `RuboCop::Cop::Lint::DuplicateMethods'
# undefined method `sym_name<defaultArg>1' for class `RuboCop::Cop::Lint::DuplicateMethods'
# uninitialized constant RuboCop::Cop::Lint::DuplicateMethods::LITERAL_REGEX
# wrong constant name alias_method?<defaultArg>1
# wrong constant name alias_method?
# wrong constant name attr?<defaultArg>1
# wrong constant name attr?
# wrong constant name method_alias?<defaultArg>1
# wrong constant name method_alias?
# wrong constant name on_alias
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_send
# wrong constant name sym_name<defaultArg>1
# wrong constant name sym_name
# wrong constant name <static-init>
# undefined method `each_with_object?<defaultArg>1' for class `RuboCop::Cop::Lint::EachWithObjectArgument'
# uninitialized constant RuboCop::Cop::Lint::EachWithObjectArgument::LITERAL_REGEX
# wrong constant name each_with_object?<defaultArg>1
# wrong constant name each_with_object?
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::ElseLayout::LITERAL_REGEX
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::EmptyEnsure::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_ensure
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::EmptyExpression::LITERAL_REGEX
# wrong constant name on_begin
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::EmptyInterpolation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_interpolation
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::EmptyWhen::LITERAL_REGEX
# wrong constant name on_case
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::EndInMethod::LITERAL_REGEX
# wrong constant name on_postexe
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::EnsureReturn::LITERAL_REGEX
# wrong constant name on_ensure
# wrong constant name <static-init>
# undefined method `erb_new_with_non_keyword_arguments<defaultArg>1' for class `RuboCop::Cop::Lint::ErbNewArguments'
# uninitialized constant RuboCop::Cop::Lint::ErbNewArguments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::ErbNewArguments::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name erb_new_with_non_keyword_arguments<defaultArg>1
# wrong constant name erb_new_with_non_keyword_arguments
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::FlipFlop::LITERAL_REGEX
# wrong constant name on_eflipflop
# wrong constant name on_iflipflop
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::FloatOutOfRange::LITERAL_REGEX
# wrong constant name on_float
# wrong constant name <static-init>
# undefined method `called_on_string?<defaultArg>1' for class `RuboCop::Cop::Lint::FormatParameterMismatch'
# uninitialized constant RuboCop::Cop::Lint::FormatParameterMismatch::LITERAL_REGEX
# wrong constant name called_on_string?<defaultArg>1
# wrong constant name called_on_string?
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::HeredocMethodCallPosition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::HeredocMethodCallPosition::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::ImplicitStringConcatenation::LITERAL_REGEX
# wrong constant name on_dstr
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::IneffectiveAccessModifier::LITERAL_REGEX
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name private_class_methods
# wrong constant name <static-init>
# undefined method `class_new_call?<defaultArg>1' for class `RuboCop::Cop::Lint::InheritException'
# uninitialized constant RuboCop::Cop::Lint::InheritException::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name class_new_call?<defaultArg>1
# wrong constant name class_new_call?
# wrong constant name on_class
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::InterpolationCheck::LITERAL_REGEX
# wrong constant name heredoc?
# wrong constant name on_str
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::LiteralAsCondition::LITERAL_REGEX
# wrong constant name message
# wrong constant name on_case
# wrong constant name on_if
# wrong constant name on_send
# wrong constant name on_until
# wrong constant name on_until_post
# wrong constant name on_while
# wrong constant name on_while_post
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::LiteralInInterpolation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::LiteralInInterpolation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_interpolation
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::Loop::LITERAL_REGEX
# wrong constant name on_until_post
# wrong constant name on_while_post
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::MissingCopEnableDirective::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::MissingCopEnableDirective::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `multiple_compare?<defaultArg>1' for class `RuboCop::Cop::Lint::MultipleComparison'
# uninitialized constant RuboCop::Cop::Lint::MultipleComparison::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name multiple_compare?<defaultArg>1
# wrong constant name multiple_compare?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `class_or_module_or_struct_new_call?<defaultArg>1' for class `RuboCop::Cop::Lint::NestedMethodDefinition'
# undefined method `eval_call?<defaultArg>1' for class `RuboCop::Cop::Lint::NestedMethodDefinition'
# undefined method `exec_call?<defaultArg>1' for class `RuboCop::Cop::Lint::NestedMethodDefinition'
# uninitialized constant RuboCop::Cop::Lint::NestedMethodDefinition::LITERAL_REGEX
# wrong constant name class_or_module_or_struct_new_call?<defaultArg>1
# wrong constant name class_or_module_or_struct_new_call?
# wrong constant name eval_call?<defaultArg>1
# wrong constant name eval_call?
# wrong constant name exec_call?<defaultArg>1
# wrong constant name exec_call?
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::NestedPercentLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::NestedPercentLiteral::LITERAL_REGEX
# wrong constant name on_array
# wrong constant name on_percent_literal
# wrong constant name <static-init>
# undefined method `on_body_of_reduce<defaultArg>1' for class `RuboCop::Cop::Lint::NextWithoutAccumulator'
# uninitialized constant RuboCop::Cop::Lint::NextWithoutAccumulator::LITERAL_REGEX
# wrong constant name on_block
# wrong constant name on_body_of_reduce<defaultArg>1
# wrong constant name on_body_of_reduce
# wrong constant name <static-init>
# undefined method `loop_variable<defaultArg>1' for class `RuboCop::Cop::Lint::NonDeterministicRequireOrder'
# undefined method `unsorted_dir_block?<defaultArg>1' for class `RuboCop::Cop::Lint::NonDeterministicRequireOrder'
# undefined method `unsorted_dir_each?<defaultArg>1' for class `RuboCop::Cop::Lint::NonDeterministicRequireOrder'
# uninitialized constant RuboCop::Cop::Lint::NonDeterministicRequireOrder::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name loop_variable<defaultArg>1
# wrong constant name loop_variable
# wrong constant name on_block
# wrong constant name unsorted_dir_block?<defaultArg>1
# wrong constant name unsorted_dir_block?
# wrong constant name unsorted_dir_each?<defaultArg>1
# wrong constant name unsorted_dir_each?
# wrong constant name var_is_required?
# wrong constant name <static-init>
# undefined method `chained_send?<defaultArg>1' for class `RuboCop::Cop::Lint::NonLocalExitFromIterator'
# undefined method `define_method?<defaultArg>1' for class `RuboCop::Cop::Lint::NonLocalExitFromIterator'
# uninitialized constant RuboCop::Cop::Lint::NonLocalExitFromIterator::LITERAL_REGEX
# wrong constant name chained_send?<defaultArg>1
# wrong constant name chained_send?
# wrong constant name define_method?<defaultArg>1
# wrong constant name define_method?
# wrong constant name on_return
# wrong constant name <static-init>
# undefined method `datetime?<defaultArg>1' for class `RuboCop::Cop::Lint::NumberConversion'
# undefined method `to_method<defaultArg>1' for class `RuboCop::Cop::Lint::NumberConversion'
# uninitialized constant RuboCop::Cop::Lint::NumberConversion::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name datetime?<defaultArg>1
# wrong constant name datetime?
# wrong constant name on_send
# wrong constant name to_method<defaultArg>1
# wrong constant name to_method
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::OrderedMagicComments::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
#                RuboCop::Cop::Lint::OrderedMagicComments::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Lint::OrderedMagicComments::FROZEN_STRING_LITERAL_ENABLED
# Did you mean?  RuboCop::Cop::Lint::OrderedMagicComments::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Lint::OrderedMagicComments::FROZEN_STRING_LITERAL_TYPES
# Did you mean?  RuboCop::Cop::Lint::OrderedMagicComments::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Lint::OrderedMagicComments::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::ParenthesesAsGroupedExpression::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::ParenthesesAsGroupedExpression::LITERAL_REGEX
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::PercentStringArray::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::PercentStringArray::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name on_percent_literal
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::PercentSymbolArray::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::PercentSymbolArray::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name on_percent_literal
# wrong constant name <static-init>
# undefined method `rand_one?<defaultArg>1' for class `RuboCop::Cop::Lint::RandOne'
# uninitialized constant RuboCop::Cop::Lint::RandOne::LITERAL_REGEX
# wrong constant name on_send
# wrong constant name rand_one?<defaultArg>1
# wrong constant name rand_one?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::RedundantCopDisableDirective::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantCopDisableDirective::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantCopDisableDirective::MINIMUM_SIMILARITY_TO_SUGGEST
# wrong constant name autocorrect
# wrong constant name check
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Lint::RedundantCopEnableDirective::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Lint::RedundantCopEnableDirective::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Lint::RedundantCopEnableDirective::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `unnecessary_require_statement?<defaultArg>1' for class `RuboCop::Cop::Lint::RedundantRequireStatement'
# uninitialized constant RuboCop::Cop::Lint::RedundantRequireStatement::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantRequireStatement::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name unnecessary_require_statement?<defaultArg>1
# wrong constant name unnecessary_require_statement?
# wrong constant name <static-init>
# undefined method `array_new?<defaultArg>1' for class `RuboCop::Cop::Lint::RedundantSplatExpansion'
# undefined method `literal_expansion<defaultArg>1' for class `RuboCop::Cop::Lint::RedundantSplatExpansion'
# uninitialized constant RuboCop::Cop::Lint::RedundantSplatExpansion::LITERAL_REGEX
# wrong constant name array_new?<defaultArg>1
# wrong constant name array_new?
# wrong constant name autocorrect
# wrong constant name literal_expansion<defaultArg>1
# wrong constant name literal_expansion
# wrong constant name on_splat
# wrong constant name <static-init>
# undefined method `to_s_without_args?<defaultArg>1' for class `RuboCop::Cop::Lint::RedundantStringCoercion'
# uninitialized constant RuboCop::Cop::Lint::RedundantStringCoercion::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_interpolation
# wrong constant name to_s_without_args?<defaultArg>1
# wrong constant name to_s_without_args?
# wrong constant name <static-init>
# undefined method `redundant_with_index?<defaultArg>1' for class `RuboCop::Cop::Lint::RedundantWithIndex'
# uninitialized constant RuboCop::Cop::Lint::RedundantWithIndex::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantWithIndex::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name redundant_with_index?<defaultArg>1
# wrong constant name redundant_with_index?
# wrong constant name <static-init>
# undefined method `redundant_with_object?<defaultArg>1' for class `RuboCop::Cop::Lint::RedundantWithObject'
# uninitialized constant RuboCop::Cop::Lint::RedundantWithObject::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RedundantWithObject::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name redundant_with_object?<defaultArg>1
# wrong constant name redundant_with_object?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::RegexpAsCondition::LITERAL_REGEX
# wrong constant name on_match_current_line
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::RequireParentheses::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::RequireParentheses::LITERAL_REGEX
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::RescueException::LITERAL_REGEX
# wrong constant name on_resbody
# wrong constant name targets_exception?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::RescueType::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_resbody
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::ReturnInVoidContext::LITERAL_REGEX
# wrong constant name on_return
# wrong constant name <static-init>
# undefined method `bad_method?<defaultArg>1' for class `RuboCop::Cop::Lint::SafeNavigationChain'
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationChain::LITERAL_REGEX
# wrong constant name bad_method?<defaultArg>1
# wrong constant name bad_method?
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationConsistency::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name check
# wrong constant name on_csend
# wrong constant name <static-init>
# undefined method `safe_navigation_empty_in_conditional?<defaultArg>1' for class `RuboCop::Cop::Lint::SafeNavigationWithEmpty'
# uninitialized constant RuboCop::Cop::Lint::SafeNavigationWithEmpty::LITERAL_REGEX
# wrong constant name on_if
# wrong constant name safe_navigation_empty_in_conditional?<defaultArg>1
# wrong constant name safe_navigation_empty_in_conditional?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::ScriptPermission::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `send_with_mixin_argument?<defaultArg>1' for class `RuboCop::Cop::Lint::SendWithMixinArgument'
# uninitialized constant RuboCop::Cop::Lint::SendWithMixinArgument::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::SendWithMixinArgument::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name send_with_mixin_argument?<defaultArg>1
# wrong constant name send_with_mixin_argument?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::ShadowedArgument::LITERAL_REGEX
# wrong constant name after_leaving_scope
# wrong constant name join_force?
# wrong constant name uses_var?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::ShadowedException::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Lint::ShadowedException::LITERAL_REGEX
# wrong constant name on_rescue
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::ShadowingOuterLocalVariable::LITERAL_REGEX
# wrong constant name before_declaring_variable
# wrong constant name join_force?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::SuppressedException::LITERAL_REGEX
# wrong constant name on_resbody
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::Syntax::LITERAL_REGEX
# wrong constant name <Class:PseudoSourceRange>
# wrong constant name add_offense_from_diagnostic
# wrong constant name add_offense_from_error
# uninitialized constant RuboCop::Cop::Lint::Syntax::PseudoSourceRange::Elem
# wrong constant name begin_pos
# wrong constant name begin_pos=
# wrong constant name column
# wrong constant name column=
# wrong constant name end_pos
# wrong constant name end_pos=
# wrong constant name line
# wrong constant name line=
# wrong constant name source_line
# wrong constant name source_line=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# wrong constant name offenses_from_processed_source
# uninitialized constant RuboCop::Cop::Lint::ToJSON::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::UnderscorePrefixedVariableName::LITERAL_REGEX
# wrong constant name after_leaving_scope
# wrong constant name check_variable
# wrong constant name join_force?
# wrong constant name <static-init>
# undefined method `fixnum_or_bignum_const<defaultArg>1' for class `RuboCop::Cop::Lint::UnifiedInteger'
# uninitialized constant RuboCop::Cop::Lint::UnifiedInteger::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name fixnum_or_bignum_const<defaultArg>1
# wrong constant name fixnum_or_bignum_const
# wrong constant name on_const
# wrong constant name <static-init>
# undefined method `flow_command?<defaultArg>1' for class `RuboCop::Cop::Lint::UnreachableCode'
# uninitialized constant RuboCop::Cop::Lint::UnreachableCode::LITERAL_REGEX
# wrong constant name flow_command?<defaultArg>1
# wrong constant name flow_command?
# wrong constant name on_begin
# wrong constant name on_kwbegin
# wrong constant name <static-init>
# wrong constant name after_leaving_scope
# wrong constant name join_force?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::UnusedBlockArgument::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::UnusedMethodArgument::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name <static-init>
# undefined method `uri_escape_unescape?<defaultArg>1' for class `RuboCop::Cop::Lint::UriEscapeUnescape'
# uninitialized constant RuboCop::Cop::Lint::UriEscapeUnescape::LITERAL_REGEX
# wrong constant name on_send
# wrong constant name uri_escape_unescape?<defaultArg>1
# wrong constant name uri_escape_unescape?
# wrong constant name <static-init>
# undefined method `uri_regexp_with_argument?<defaultArg>1' for class `RuboCop::Cop::Lint::UriRegexp'
# undefined method `uri_regexp_without_argument?<defaultArg>1' for class `RuboCop::Cop::Lint::UriRegexp'
# uninitialized constant RuboCop::Cop::Lint::UriRegexp::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name uri_regexp_with_argument?<defaultArg>1
# wrong constant name uri_regexp_with_argument?
# wrong constant name uri_regexp_without_argument?<defaultArg>1
# wrong constant name uri_regexp_without_argument?
# wrong constant name <static-init>
# undefined method `class_or_instance_eval?<defaultArg>1' for class `RuboCop::Cop::Lint::UselessAccessModifier'
# undefined method `class_or_module_or_struct_new_call?<defaultArg>1' for class `RuboCop::Cop::Lint::UselessAccessModifier'
# undefined method `dynamic_method_definition?<defaultArg>1' for class `RuboCop::Cop::Lint::UselessAccessModifier'
# undefined method `static_method_definition?<defaultArg>1' for class `RuboCop::Cop::Lint::UselessAccessModifier'
# uninitialized constant RuboCop::Cop::Lint::UselessAccessModifier::LITERAL_REGEX
# wrong constant name class_or_instance_eval?<defaultArg>1
# wrong constant name class_or_instance_eval?
# wrong constant name class_or_module_or_struct_new_call?<defaultArg>1
# wrong constant name class_or_module_or_struct_new_call?
# wrong constant name dynamic_method_definition?<defaultArg>1
# wrong constant name dynamic_method_definition?
# wrong constant name on_block
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name on_sclass
# wrong constant name static_method_definition?<defaultArg>1
# wrong constant name static_method_definition?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::UselessAssignment::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Lint::UselessAssignment::MINIMUM_SIMILARITY_TO_SUGGEST
# wrong constant name after_leaving_scope
# wrong constant name check_for_unused_assignments
# wrong constant name collect_variable_like_names
# wrong constant name join_force?
# wrong constant name message_for_useless_assignment
# wrong constant name message_specification
# wrong constant name multiple_assignment_message
# wrong constant name operator_assignment_message
# wrong constant name return_value_node_of_scope
# wrong constant name similar_name_message
# wrong constant name variable_like_method_invocation?
# wrong constant name <static-init>
# undefined method `useless_comparison?<defaultArg>1' for class `RuboCop::Cop::Lint::UselessComparison'
# uninitialized constant RuboCop::Cop::Lint::UselessComparison::LITERAL_REGEX
# wrong constant name on_send
# wrong constant name useless_comparison?<defaultArg>1
# wrong constant name useless_comparison?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::UselessElseWithoutRescue::LITERAL_REGEX
# wrong constant name <static-init>
# undefined method `setter_call_to_local_variable?<defaultArg>1' for class `RuboCop::Cop::Lint::UselessSetterCall'
# uninitialized constant RuboCop::Cop::Lint::UselessSetterCall::LITERAL_REGEX
# wrong constant name <Class:MethodVariableTracker>
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name setter_call_to_local_variable?<defaultArg>1
# wrong constant name setter_call_to_local_variable?
# wrong constant name constructor?
# wrong constant name contain_local_object?
# wrong constant name initialize
# wrong constant name process_assignment
# wrong constant name process_assignment_node
# wrong constant name process_binary_operator_assignment
# wrong constant name process_logical_operator_assignment
# wrong constant name process_multiple_assignment
# wrong constant name scan
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Lint::Void::LITERAL_REGEX
# wrong constant name on_begin
# wrong constant name on_block
# wrong constant name on_kwbegin
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::MatchRange::BYTE_ORDER_MARK
# wrong constant name <static-init>
# wrong constant name annotate
# wrong constant name config
# wrong constant name cop_config
# wrong constant name cop_name
# wrong constant name initialize
# wrong constant name options
# wrong constant name urls
# wrong constant name <static-init>
# wrong constant name style_guide_urls
# undefined method `define_method?<defaultArg>1' for module `RuboCop::Cop::MethodComplexity'
# wrong constant name define_method?<defaultArg>1
# wrong constant name define_method?
# wrong constant name on_block
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:AbcSize>
# wrong constant name <Class:BlockLength>
# wrong constant name <Class:BlockNesting>
# wrong constant name <Class:ClassLength>
# wrong constant name <Class:CyclomaticComplexity>
# wrong constant name <Class:MethodLength>
# wrong constant name <Class:ModuleLength>
# wrong constant name <Class:ParameterLists>
# wrong constant name <Class:PerceivedComplexity>
# wrong constant name <Class:Utils>
# uninitialized constant RuboCop::Cop::Metrics::AbcSize::LITERAL_REGEX
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Metrics::BlockLength::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::BlockLength::MSG
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Metrics::BlockNesting::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `class_definition?<defaultArg>1' for class `RuboCop::Cop::Metrics::ClassLength'
# uninitialized constant RuboCop::Cop::Metrics::ClassLength::LITERAL_REGEX
# wrong constant name class_definition?<defaultArg>1
# wrong constant name class_definition?
# wrong constant name on_casgn
# wrong constant name on_class
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Metrics::CyclomaticComplexity::LITERAL_REGEX
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Metrics::MethodLength::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Metrics::MethodLength::MSG
# wrong constant name on_block
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# undefined method `module_definition?<defaultArg>1' for class `RuboCop::Cop::Metrics::ModuleLength'
# uninitialized constant RuboCop::Cop::Metrics::ModuleLength::LITERAL_REGEX
# wrong constant name module_definition?<defaultArg>1
# wrong constant name module_definition?
# wrong constant name on_casgn
# wrong constant name on_module
# wrong constant name <static-init>
# undefined method `argument_to_lambda_or_proc?<defaultArg>1' for class `RuboCop::Cop::Metrics::ParameterLists'
# uninitialized constant RuboCop::Cop::Metrics::ParameterLists::LITERAL_REGEX
# wrong constant name argument_to_lambda_or_proc?<defaultArg>1
# wrong constant name argument_to_lambda_or_proc?
# wrong constant name on_args
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Metrics::PerceivedComplexity::LITERAL_REGEX
# wrong constant name <static-init>
# wrong constant name <Class:AbcSizeCalculator>
# wrong constant name calculate
# wrong constant name else_branch?
# wrong constant name evaluate_branch_nodes
# wrong constant name evaluate_condition_node
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name calculate
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:DepartmentName>
# uninitialized constant RuboCop::Cop::Migration::DepartmentName::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Migration::DepartmentName::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::MultilineLiteralBraceCorrector::BYTE_ORDER_MARK
# wrong constant name call
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:AccessorMethodName>
# wrong constant name <Class:AsciiIdentifiers>
# wrong constant name <Class:BinaryOperatorParameterName>
# wrong constant name <Class:BlockParameterName>
# wrong constant name <Class:ClassAndModuleCamelCase>
# wrong constant name <Class:ConstantName>
# wrong constant name <Class:FileName>
# wrong constant name <Class:HeredocDelimiterCase>
# wrong constant name <Class:HeredocDelimiterNaming>
# wrong constant name <Class:MemoizedInstanceVariableName>
# wrong constant name <Class:MethodName>
# wrong constant name <Class:MethodParameterName>
# wrong constant name <Class:PredicateName>
# wrong constant name <Class:RescuedExceptionsVariableName>
# wrong constant name <Class:VariableName>
# wrong constant name <Class:VariableNumber>
# uninitialized constant RuboCop::Cop::Naming::AccessorMethodName::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::AsciiIdentifiers::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Naming::AsciiIdentifiers::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `op_method_candidate?<defaultArg>1' for class `RuboCop::Cop::Naming::BinaryOperatorParameterName'
# uninitialized constant RuboCop::Cop::Naming::BinaryOperatorParameterName::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name op_method_candidate?<defaultArg>1
# wrong constant name op_method_candidate?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::BlockParameterName::CASE_MSG
# uninitialized constant RuboCop::Cop::Naming::BlockParameterName::FORBIDDEN_MSG
# uninitialized constant RuboCop::Cop::Naming::BlockParameterName::LENGTH_MSG
# uninitialized constant RuboCop::Cop::Naming::BlockParameterName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::BlockParameterName::NUM_MSG
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::ClassAndModuleCamelCase::LITERAL_REGEX
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name <static-init>
# undefined method `class_or_struct_return_method?<defaultArg>1' for class `RuboCop::Cop::Naming::ConstantName'
# undefined method `literal_receiver?<defaultArg>1' for class `RuboCop::Cop::Naming::ConstantName'
# uninitialized constant RuboCop::Cop::Naming::ConstantName::LITERAL_REGEX
# wrong constant name class_or_struct_return_method?<defaultArg>1
# wrong constant name class_or_struct_return_method?
# wrong constant name literal_receiver?<defaultArg>1
# wrong constant name literal_receiver?
# wrong constant name on_casgn
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::FileName::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Naming::FileName::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterCase::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterCase::OPENING_DELIMITER
# wrong constant name on_heredoc
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterNaming::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::HeredocDelimiterNaming::OPENING_DELIMITER
# wrong constant name on_heredoc
# wrong constant name <static-init>
# undefined method `memoized?<defaultArg>1' for class `RuboCop::Cop::Naming::MemoizedInstanceVariableName'
# uninitialized constant RuboCop::Cop::Naming::MemoizedInstanceVariableName::LITERAL_REGEX
# wrong constant name memoized?<defaultArg>1
# wrong constant name memoized?
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::MethodName::FORMATS
# uninitialized constant RuboCop::Cop::Naming::MethodName::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::MethodParameterName::CASE_MSG
# uninitialized constant RuboCop::Cop::Naming::MethodParameterName::FORBIDDEN_MSG
# uninitialized constant RuboCop::Cop::Naming::MethodParameterName::LENGTH_MSG
# uninitialized constant RuboCop::Cop::Naming::MethodParameterName::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Naming::MethodParameterName::NUM_MSG
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# undefined method `dynamic_method_define<defaultArg>1' for class `RuboCop::Cop::Naming::PredicateName'
# uninitialized constant RuboCop::Cop::Naming::PredicateName::LITERAL_REGEX
# wrong constant name dynamic_method_define<defaultArg>1
# wrong constant name dynamic_method_define
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::RescuedExceptionsVariableName::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_resbody
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::VariableName::FORMATS
# uninitialized constant RuboCop::Cop::Naming::VariableName::LITERAL_REGEX
# wrong constant name on_arg
# wrong constant name on_blockarg
# wrong constant name on_cvasgn
# wrong constant name on_ivasgn
# wrong constant name on_kwarg
# wrong constant name on_kwoptarg
# wrong constant name on_kwrestarg
# wrong constant name on_lvar
# wrong constant name on_lvasgn
# wrong constant name on_optarg
# wrong constant name on_restarg
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Naming::VariableNumber::FORMATS
# uninitialized constant RuboCop::Cop::Naming::VariableNumber::LITERAL_REGEX
# wrong constant name on_arg
# wrong constant name on_cvasgn
# wrong constant name on_ivasgn
# wrong constant name on_lvasgn
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `empty_condition?<defaultArg>1' for module `RuboCop::Cop::NegativeConditional'
# undefined method `single_negative?<defaultArg>1' for module `RuboCop::Cop::NegativeConditional'
# wrong constant name empty_condition?<defaultArg>1
# wrong constant name empty_condition?
# wrong constant name single_negative?<defaultArg>1
# wrong constant name single_negative?
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Offense'
# Did you mean?  initialize_dup
# wrong constant name <=>
# wrong constant name ==
# wrong constant name column
# wrong constant name column_length
# wrong constant name column_range
# wrong constant name cop_name
# wrong constant name correctable?
# wrong constant name corrected?
# wrong constant name corrected_with_todo?
# wrong constant name disabled?
# wrong constant name eql?
# wrong constant name first_line
# wrong constant name highlighted_area
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name last_column
# wrong constant name last_line
# wrong constant name line
# wrong constant name location
# wrong constant name message
# wrong constant name real_column
# wrong constant name severity
# wrong constant name source_line
# wrong constant name status
# wrong constant name <static-init>
# wrong constant name on_if
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name comments_as_separators
# wrong constant name correct
# wrong constant name processed_source
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name correct
# wrong constant name investigate
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::PercentLiteral::BYTE_ORDER_MARK
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::PercentLiteralCorrector::LITERAL_REGEX
# wrong constant name config
# wrong constant name correct
# wrong constant name initialize
# wrong constant name preferred_delimiters
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name config
# wrong constant name delimiters
# wrong constant name initialize
# wrong constant name type
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name add_space
# wrong constant name remove_space
# wrong constant name swap_comma
# wrong constant name <static-init>
# undefined method `rational_literal?<defaultArg>1' for module `RuboCop::Cop::RationalLiteral'
# wrong constant name rational_literal?<defaultArg>1
# wrong constant name rational_literal?
# wrong constant name <static-init>
# undefined method `enabled<defaultArg>1' for class `RuboCop::Cop::Registry'
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Registry'
# Did you mean?  initialize_dup
# undefined method `qualified_cop_name<defaultArg>1' for class `RuboCop::Cop::Registry'
# wrong constant name ==
# wrong constant name contains_cop_matching?
# wrong constant name cops
# wrong constant name department_missing?
# wrong constant name departments
# wrong constant name each
# wrong constant name enabled<defaultArg>1
# wrong constant name enabled
# wrong constant name enabled?
# wrong constant name enlist
# wrong constant name find_by_cop_name
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name length
# wrong constant name names
# wrong constant name print_warning
# wrong constant name qualified_cop_name<defaultArg>1
# wrong constant name qualified_cop_name
# wrong constant name select
# wrong constant name sort!
# wrong constant name to_h
# wrong constant name unqualified_cop_names
# wrong constant name with_department
# wrong constant name without_department
# wrong constant name <static-init>
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `empty_condition?<defaultArg>1' for module `RuboCop::Cop::SafeAssignment'
# undefined method `safe_assignment?<defaultArg>1' for module `RuboCop::Cop::SafeAssignment'
# undefined method `setter_method?<defaultArg>1' for module `RuboCop::Cop::SafeAssignment'
# wrong constant name empty_condition?<defaultArg>1
# wrong constant name empty_condition?
# wrong constant name safe_assignment?<defaultArg>1
# wrong constant name safe_assignment?
# wrong constant name setter_method?<defaultArg>1
# wrong constant name setter_method?
# wrong constant name <static-init>
# wrong constant name <Class:Eval>
# wrong constant name <Class:JSONLoad>
# wrong constant name <Class:MarshalLoad>
# wrong constant name <Class:Open>
# wrong constant name <Class:YAMLLoad>
# undefined method `eval?<defaultArg>1' for class `RuboCop::Cop::Security::Eval'
# uninitialized constant RuboCop::Cop::Security::Eval::LITERAL_REGEX
# wrong constant name eval?<defaultArg>1
# wrong constant name eval?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `json_load<defaultArg>1' for class `RuboCop::Cop::Security::JSONLoad'
# uninitialized constant RuboCop::Cop::Security::JSONLoad::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name json_load<defaultArg>1
# wrong constant name json_load
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `marshal_load<defaultArg>1' for class `RuboCop::Cop::Security::MarshalLoad'
# uninitialized constant RuboCop::Cop::Security::MarshalLoad::LITERAL_REGEX
# wrong constant name marshal_load<defaultArg>1
# wrong constant name marshal_load
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `open?<defaultArg>1' for class `RuboCop::Cop::Security::Open'
# uninitialized constant RuboCop::Cop::Security::Open::LITERAL_REGEX
# wrong constant name on_send
# wrong constant name open?<defaultArg>1
# wrong constant name open?
# wrong constant name <static-init>
# undefined method `yaml_load<defaultArg>1' for class `RuboCop::Cop::Security::YAMLLoad'
# uninitialized constant RuboCop::Cop::Security::YAMLLoad::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name yaml_load<defaultArg>1
# wrong constant name yaml_load
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <=>
# wrong constant name ==
# wrong constant name code
# wrong constant name initialize
# wrong constant name level
# wrong constant name name
# wrong constant name <static-init>
# wrong constant name name_from_code
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::SpaceBeforePunctuation::BYTE_ORDER_MARK
# wrong constant name investigate
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name add_space
# wrong constant name empty_corrections
# wrong constant name processed_source
# wrong constant name remove_space
# wrong constant name <static-init>
# wrong constant name on_regexp
# wrong constant name on_str
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name correct
# wrong constant name <static-init>
# wrong constant name <Class:AccessModifierDeclarations>
# wrong constant name <Class:Alias>
# wrong constant name <Class:AndOr>
# wrong constant name <Class:AnnotationComment>
# wrong constant name <Class:ArrayJoin>
# wrong constant name <Class:AsciiComments>
# wrong constant name <Class:Attr>
# wrong constant name <Class:AutoResourceCleanup>
# wrong constant name <Class:BarePercentLiterals>
# wrong constant name <Class:BeginBlock>
# wrong constant name <Class:BlockComments>
# wrong constant name <Class:BlockDelimiters>
# wrong constant name <Class:CaseCorrector>
# wrong constant name <Class:CaseEquality>
# wrong constant name <Class:CharacterLiteral>
# wrong constant name <Class:ClassAndModuleChildren>
# wrong constant name <Class:ClassCheck>
# wrong constant name <Class:ClassMethods>
# wrong constant name <Class:ClassVars>
# wrong constant name <Class:CollectionMethods>
# wrong constant name <Class:ColonMethodCall>
# wrong constant name <Class:ColonMethodDefinition>
# wrong constant name <Class:CommandLiteral>
# wrong constant name <Class:CommentAnnotation>
# wrong constant name <Class:CommentedKeyword>
# wrong constant name <Class:ConditionalAssignment>
# wrong constant name <Class:ConditionalAssignmentHelper>
# wrong constant name <Class:ConditionalCorrectorHelper>
# wrong constant name <Class:ConstantVisibility>
# wrong constant name <Class:Copyright>
# wrong constant name <Class:DateTime>
# wrong constant name <Class:DefWithParentheses>
# wrong constant name <Class:Dir>
# wrong constant name <Class:Documentation>
# wrong constant name <Class:DocumentationMethod>
# wrong constant name <Class:DoubleCopDisableDirective>
# wrong constant name <Class:DoubleNegation>
# wrong constant name <Class:EachForSimpleLoop>
# wrong constant name <Class:EachWithObject>
# wrong constant name <Class:EmptyBlockParameter>
# wrong constant name <Class:EmptyCaseCondition>
# wrong constant name <Class:EmptyElse>
# wrong constant name <Class:EmptyLambdaParameter>
# wrong constant name <Class:EmptyLiteral>
# wrong constant name <Class:EmptyMethod>
# wrong constant name <Class:Encoding>
# wrong constant name <Class:EndBlock>
# wrong constant name <Class:EvalWithLocation>
# wrong constant name <Class:EvenOdd>
# wrong constant name <Class:ExpandPathArguments>
# wrong constant name <Class:FloatDivision>
# wrong constant name <Class:For>
# wrong constant name <Class:FormatString>
# wrong constant name <Class:FormatStringToken>
# wrong constant name <Class:FrozenStringLiteralComment>
# wrong constant name <Class:GlobalVars>
# wrong constant name <Class:GuardClause>
# wrong constant name <Class:HashEachMethods>
# wrong constant name <Class:HashSyntax>
# wrong constant name <Class:HashTransformKeys>
# wrong constant name <Class:HashTransformValues>
# wrong constant name <Class:IdenticalConditionalBranches>
# wrong constant name <Class:IfCorrector>
# wrong constant name <Class:IfInsideElse>
# wrong constant name <Class:IfUnlessModifier>
# wrong constant name <Class:IfUnlessModifierOfIfUnless>
# wrong constant name <Class:IfWithSemicolon>
# wrong constant name <Class:ImplicitRuntimeError>
# wrong constant name <Class:InfiniteLoop>
# wrong constant name <Class:InlineComment>
# wrong constant name <Class:InverseMethods>
# wrong constant name <Class:IpAddresses>
# wrong constant name <Class:Lambda>
# wrong constant name <Class:LambdaCall>
# wrong constant name <Class:LineEndConcatenation>
# wrong constant name <Class:MethodCallWithArgsParentheses>
# wrong constant name <Class:MethodCallWithoutArgsParentheses>
# wrong constant name <Class:MethodCalledOnDoEndBlock>
# wrong constant name <Class:MethodDefParentheses>
# wrong constant name <Class:MethodMissingSuper>
# wrong constant name <Class:MinMax>
# wrong constant name <Class:MissingElse>
# wrong constant name <Class:MissingRespondToMissing>
# wrong constant name <Class:MixinGrouping>
# wrong constant name <Class:MixinUsage>
# wrong constant name <Class:ModuleFunction>
# wrong constant name <Class:MultilineBlockChain>
# wrong constant name <Class:MultilineIfModifier>
# wrong constant name <Class:MultilineIfThen>
# wrong constant name <Class:MultilineMemoization>
# wrong constant name <Class:MultilineMethodSignature>
# wrong constant name <Class:MultilineTernaryOperator>
# wrong constant name <Class:MultilineWhenThen>
# wrong constant name <Class:MultipleComparison>
# wrong constant name <Class:MutableConstant>
# wrong constant name <Class:NegatedIf>
# wrong constant name <Class:NegatedUnless>
# wrong constant name <Class:NegatedWhile>
# wrong constant name <Class:NestedModifier>
# wrong constant name <Class:NestedParenthesizedCalls>
# wrong constant name <Class:NestedTernaryOperator>
# wrong constant name <Class:Next>
# wrong constant name <Class:NilComparison>
# wrong constant name <Class:NonNilCheck>
# wrong constant name <Class:Not>
# wrong constant name <Class:NumericLiteralPrefix>
# wrong constant name <Class:NumericLiterals>
# wrong constant name <Class:NumericPredicate>
# wrong constant name <Class:OneLineConditional>
# wrong constant name <Class:OptionHash>
# wrong constant name <Class:OptionalArguments>
# wrong constant name <Class:OrAssignment>
# wrong constant name <Class:ParallelAssignment>
# wrong constant name <Class:ParenthesesAroundCondition>
# wrong constant name <Class:PercentLiteralDelimiters>
# wrong constant name <Class:PercentQLiterals>
# wrong constant name <Class:PerlBackrefs>
# wrong constant name <Class:PreferredHashMethods>
# wrong constant name <Class:Proc>
# wrong constant name <Class:RaiseArgs>
# wrong constant name <Class:RandomWithOffset>
# wrong constant name <Class:RedundantBegin>
# wrong constant name <Class:RedundantCapitalW>
# wrong constant name <Class:RedundantCondition>
# wrong constant name <Class:RedundantConditional>
# wrong constant name <Class:RedundantException>
# wrong constant name <Class:RedundantFreeze>
# wrong constant name <Class:RedundantInterpolation>
# wrong constant name <Class:RedundantParentheses>
# wrong constant name <Class:RedundantPercentQ>
# wrong constant name <Class:RedundantReturn>
# wrong constant name <Class:RedundantSelf>
# wrong constant name <Class:RedundantSort>
# wrong constant name <Class:RedundantSortBy>
# wrong constant name <Class:RegexpLiteral>
# wrong constant name <Class:RescueModifier>
# wrong constant name <Class:RescueStandardError>
# wrong constant name <Class:ReturnNil>
# wrong constant name <Class:SafeNavigation>
# wrong constant name <Class:Sample>
# wrong constant name <Class:SelfAssignment>
# wrong constant name <Class:Semicolon>
# wrong constant name <Class:Send>
# wrong constant name <Class:SignalException>
# wrong constant name <Class:SingleLineBlockParams>
# wrong constant name <Class:SingleLineMethods>
# wrong constant name <Class:SpecialGlobalVars>
# wrong constant name <Class:StabbyLambdaParentheses>
# wrong constant name <Class:StderrPuts>
# wrong constant name <Class:StringHashKeys>
# wrong constant name <Class:StringLiterals>
# wrong constant name <Class:StringLiteralsInInterpolation>
# wrong constant name <Class:StringMethods>
# wrong constant name <Class:Strip>
# wrong constant name <Class:StructInheritance>
# wrong constant name <Class:SymbolArray>
# wrong constant name <Class:SymbolLiteral>
# wrong constant name <Class:SymbolProc>
# wrong constant name <Class:TernaryCorrector>
# wrong constant name <Class:TernaryParentheses>
# wrong constant name <Class:TrailingBodyOnClass>
# wrong constant name <Class:TrailingBodyOnMethodDefinition>
# wrong constant name <Class:TrailingBodyOnModule>
# wrong constant name <Class:TrailingCommaInArguments>
# wrong constant name <Class:TrailingCommaInArrayLiteral>
# wrong constant name <Class:TrailingCommaInHashLiteral>
# wrong constant name <Class:TrailingMethodEndStatement>
# wrong constant name <Class:TrailingUnderscoreVariable>
# wrong constant name <Class:TrivialAccessors>
# wrong constant name <Class:UnlessElse>
# wrong constant name <Class:UnpackFirst>
# wrong constant name <Class:VariableInterpolation>
# wrong constant name <Class:WhenThen>
# wrong constant name <Class:WhileUntilDo>
# wrong constant name <Class:WhileUntilModifier>
# wrong constant name <Class:WordArray>
# wrong constant name <Class:YodaCondition>
# wrong constant name <Class:ZeroLengthPredicate>
# uninitialized constant RuboCop::Cop::Style::AccessModifierDeclarations::LITERAL_REGEX
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `identifier<defaultArg>1' for class `RuboCop::Cop::Style::Alias'
# uninitialized constant RuboCop::Cop::Style::Alias::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name identifier<defaultArg>1
# wrong constant name identifier
# wrong constant name on_alias
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::AndOr::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::AndOr::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_and
# wrong constant name on_if
# wrong constant name on_or
# wrong constant name on_until
# wrong constant name on_until_post
# wrong constant name on_while
# wrong constant name on_while_post
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `join_candidate?<defaultArg>1' for class `RuboCop::Cop::Style::ArrayJoin'
# uninitialized constant RuboCop::Cop::Style::ArrayJoin::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name join_candidate?<defaultArg>1
# wrong constant name join_candidate?
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::AsciiComments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::AsciiComments::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `class_eval?<defaultArg>1' for class `RuboCop::Cop::Style::Attr'
# Did you mean?  class_variable_get
# uninitialized constant RuboCop::Cop::Style::Attr::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Attr::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name class_eval?<defaultArg>1
# wrong constant name class_eval?
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::AutoResourceCleanup::LITERAL_REGEX
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::BarePercentLiterals::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_dstr
# wrong constant name on_str
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::BeginBlock::LITERAL_REGEX
# wrong constant name on_preexe
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::BlockComments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::BlockComments::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::BlockDelimiters::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name on_send
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name correct
# wrong constant name move_assignment_inside_condition
# undefined method `case_equality?<defaultArg>1' for class `RuboCop::Cop::Style::CaseEquality'
# uninitialized constant RuboCop::Cop::Style::CaseEquality::LITERAL_REGEX
# wrong constant name case_equality?<defaultArg>1
# wrong constant name case_equality?
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::CharacterLiteral::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name correct_style_detected
# wrong constant name offense?
# wrong constant name opposite_style_detected
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::ClassAndModuleChildren::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::ClassAndModuleChildren::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name <static-init>
# undefined method `class_check?<defaultArg>1' for class `RuboCop::Cop::Style::ClassCheck'
# uninitialized constant RuboCop::Cop::Style::ClassCheck::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name class_check?<defaultArg>1
# wrong constant name class_check?
# wrong constant name message
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::ClassMethods::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::ClassVars::LITERAL_REGEX
# wrong constant name message
# wrong constant name on_cvasgn
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::CollectionMethods::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `java_type_node?<defaultArg>1' for class `RuboCop::Cop::Style::ColonMethodCall'
# uninitialized constant RuboCop::Cop::Style::ColonMethodCall::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name java_type_node?<defaultArg>1
# wrong constant name java_type_node?
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::ColonMethodDefinition::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::CommandLiteral::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_xstr
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::CommentAnnotation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::CommentAnnotation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::CommentedKeyword::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `assignment_type?<defaultArg>1' for class `RuboCop::Cop::Style::ConditionalAssignment'
# undefined method `candidate_condition?<defaultArg>1' for class `RuboCop::Cop::Style::ConditionalAssignment'
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::ALIGN_WITH
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::END_ALIGNMENT
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::EQUAL
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::KEYWORD
# uninitialized constant RuboCop::Cop::Style::ConditionalAssignment::LITERAL_REGEX
# wrong constant name assignment_type?<defaultArg>1
# wrong constant name assignment_type?
# wrong constant name autocorrect
# wrong constant name candidate_condition?<defaultArg>1
# wrong constant name candidate_condition?
# wrong constant name on_and_asgn
# wrong constant name on_case
# wrong constant name on_casgn
# wrong constant name on_cvasgn
# wrong constant name on_gvasgn
# wrong constant name on_if
# wrong constant name on_ivasgn
# wrong constant name on_lvasgn
# wrong constant name on_masgn
# wrong constant name on_op_asgn
# wrong constant name on_or_asgn
# wrong constant name on_send
# wrong constant name <static-init>
# wrong constant name end_with_eq?
# wrong constant name expand_elses
# wrong constant name expand_when_branches
# wrong constant name indent
# wrong constant name lhs
# wrong constant name tail
# wrong constant name <static-init>
# wrong constant name assignment
# wrong constant name correct_branches
# wrong constant name correct_if_branches
# wrong constant name remove_whitespace_in_branches
# wrong constant name replace_branch_assignment
# wrong constant name white_space_range
# wrong constant name <static-init>
# undefined method `visibility_declaration_for?<defaultArg>1' for class `RuboCop::Cop::Style::ConstantVisibility'
# uninitialized constant RuboCop::Cop::Style::ConstantVisibility::LITERAL_REGEX
# wrong constant name on_casgn
# wrong constant name visibility_declaration_for?<defaultArg>1
# wrong constant name visibility_declaration_for?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::Copyright::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Copyright::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `date_time?<defaultArg>1' for class `RuboCop::Cop::Style::DateTime'
# undefined method `historic_date?<defaultArg>1' for class `RuboCop::Cop::Style::DateTime'
# undefined method `to_datetime?<defaultArg>1' for class `RuboCop::Cop::Style::DateTime'
# uninitialized constant RuboCop::Cop::Style::DateTime::LITERAL_REGEX
# wrong constant name date_time?<defaultArg>1
# wrong constant name date_time?
# wrong constant name historic_date?<defaultArg>1
# wrong constant name historic_date?
# wrong constant name on_send
# wrong constant name to_datetime?<defaultArg>1
# wrong constant name to_datetime?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::DefWithParentheses::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# undefined method `dir_replacement?<defaultArg>1' for class `RuboCop::Cop::Style::Dir'
# uninitialized constant RuboCop::Cop::Style::Dir::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name dir_replacement?<defaultArg>1
# wrong constant name dir_replacement?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `constant_definition?<defaultArg>1' for class `RuboCop::Cop::Style::Documentation'
# uninitialized constant RuboCop::Cop::Style::Documentation::LITERAL_REGEX
# wrong constant name constant_definition?<defaultArg>1
# wrong constant name constant_definition?
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name outer_module
# wrong constant name <static-init>
# undefined method `module_function_node?<defaultArg>1' for class `RuboCop::Cop::Style::DocumentationMethod'
# uninitialized constant RuboCop::Cop::Style::DocumentationMethod::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::DocumentationMethod::NON_PUBLIC_MODIFIERS
# wrong constant name module_function_node?<defaultArg>1
# wrong constant name module_function_node?
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::DoubleCopDisableDirective::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `double_negative?<defaultArg>1' for class `RuboCop::Cop::Style::DoubleNegation'
# uninitialized constant RuboCop::Cop::Style::DoubleNegation::LITERAL_REGEX
# wrong constant name double_negative?<defaultArg>1
# wrong constant name double_negative?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `offending_each_range<defaultArg>1' for class `RuboCop::Cop::Style::EachForSimpleLoop'
# uninitialized constant RuboCop::Cop::Style::EachForSimpleLoop::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name offending_each_range<defaultArg>1
# wrong constant name offending_each_range
# wrong constant name on_block
# wrong constant name <static-init>
# undefined method `each_with_object_candidate?<defaultArg>1' for class `RuboCop::Cop::Style::EachWithObject'
# uninitialized constant RuboCop::Cop::Style::EachWithObject::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EachWithObject::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name each_with_object_candidate?<defaultArg>1
# wrong constant name each_with_object_candidate?
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::EmptyBlockParameter::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyBlockParameter::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::EmptyCaseCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyCaseCondition::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_case
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::EmptyElse::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyElse::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_case
# wrong constant name on_normal_if_unless
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::EmptyLambdaParameter::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyLambdaParameter::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# undefined method `array_node<defaultArg>1' for class `RuboCop::Cop::Style::EmptyLiteral'
# undefined method `array_with_block<defaultArg>1' for class `RuboCop::Cop::Style::EmptyLiteral'
# undefined method `hash_node<defaultArg>1' for class `RuboCop::Cop::Style::EmptyLiteral'
# undefined method `hash_with_block<defaultArg>1' for class `RuboCop::Cop::Style::EmptyLiteral'
# undefined method `str_node<defaultArg>1' for class `RuboCop::Cop::Style::EmptyLiteral'
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
#                RuboCop::Cop::Style::EmptyLiteral::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::FROZEN_STRING_LITERAL_ENABLED
# Did you mean?  RuboCop::Cop::Style::EmptyLiteral::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::FROZEN_STRING_LITERAL_TYPES
# Did you mean?  RuboCop::Cop::Style::EmptyLiteral::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::EmptyLiteral::LITERAL_REGEX
# wrong constant name array_node<defaultArg>1
# wrong constant name array_node
# wrong constant name array_with_block<defaultArg>1
# wrong constant name array_with_block
# wrong constant name autocorrect
# wrong constant name hash_node<defaultArg>1
# wrong constant name hash_node
# wrong constant name hash_with_block<defaultArg>1
# wrong constant name hash_with_block
# wrong constant name on_send
# wrong constant name str_node<defaultArg>1
# wrong constant name str_node
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::EmptyMethod::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::Encoding::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Encoding::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::EndBlock::LITERAL_REGEX
# wrong constant name on_postexe
# wrong constant name <static-init>
# undefined method `eval_without_location?<defaultArg>1' for class `RuboCop::Cop::Style::EvalWithLocation'
# undefined method `line_with_offset?<defaultArg>1' for class `RuboCop::Cop::Style::EvalWithLocation'
# uninitialized constant RuboCop::Cop::Style::EvalWithLocation::LITERAL_REGEX
# wrong constant name eval_without_location?<defaultArg>1
# wrong constant name eval_without_location?
# wrong constant name line_with_offset?<defaultArg>1
# wrong constant name line_with_offset?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `even_odd_candidate?<defaultArg>1' for class `RuboCop::Cop::Style::EvenOdd'
# uninitialized constant RuboCop::Cop::Style::EvenOdd::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name even_odd_candidate?<defaultArg>1
# wrong constant name even_odd_candidate?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `file_expand_path<defaultArg>1' for class `RuboCop::Cop::Style::ExpandPathArguments'
# undefined method `pathname_new_parent_expand_path<defaultArg>1' for class `RuboCop::Cop::Style::ExpandPathArguments'
# undefined method `pathname_parent_expand_path<defaultArg>1' for class `RuboCop::Cop::Style::ExpandPathArguments'
# uninitialized constant RuboCop::Cop::Style::ExpandPathArguments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::ExpandPathArguments::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name file_expand_path<defaultArg>1
# wrong constant name file_expand_path
# wrong constant name on_send
# wrong constant name pathname_new_parent_expand_path<defaultArg>1
# wrong constant name pathname_new_parent_expand_path
# wrong constant name pathname_parent_expand_path<defaultArg>1
# wrong constant name pathname_parent_expand_path
# wrong constant name <static-init>
# undefined method `any_coerce?<defaultArg>1' for class `RuboCop::Cop::Style::FloatDivision'
# undefined method `both_coerce?<defaultArg>1' for class `RuboCop::Cop::Style::FloatDivision'
# undefined method `left_coerce?<defaultArg>1' for class `RuboCop::Cop::Style::FloatDivision'
# undefined method `right_coerce?<defaultArg>1' for class `RuboCop::Cop::Style::FloatDivision'
# uninitialized constant RuboCop::Cop::Style::FloatDivision::LITERAL_REGEX
# wrong constant name any_coerce?<defaultArg>1
# wrong constant name any_coerce?
# wrong constant name both_coerce?<defaultArg>1
# wrong constant name both_coerce?
# wrong constant name left_coerce?<defaultArg>1
# wrong constant name left_coerce?
# wrong constant name on_send
# wrong constant name right_coerce?<defaultArg>1
# wrong constant name right_coerce?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::For::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::For::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name on_for
# wrong constant name <static-init>
# undefined method `formatter<defaultArg>1' for class `RuboCop::Cop::Style::FormatString'
# undefined method `variable_argument?<defaultArg>1' for class `RuboCop::Cop::Style::FormatString'
# uninitialized constant RuboCop::Cop::Style::FormatString::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name formatter<defaultArg>1
# wrong constant name formatter
# wrong constant name message
# wrong constant name method_name
# wrong constant name on_send
# wrong constant name variable_argument?<defaultArg>1
# wrong constant name variable_argument?
# wrong constant name <static-init>
# undefined method `format_string_in_typical_context?<defaultArg>1' for class `RuboCop::Cop::Style::FormatStringToken'
# uninitialized constant RuboCop::Cop::Style::FormatStringToken::LITERAL_REGEX
# wrong constant name format_string_in_typical_context?<defaultArg>1
# wrong constant name format_string_in_typical_context?
# wrong constant name on_str
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
#                RuboCop::Cop::Style::FrozenStringLiteralComment::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::FROZEN_STRING_LITERAL_ENABLED
# Did you mean?  RuboCop::Cop::Style::FrozenStringLiteralComment::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::FROZEN_STRING_LITERAL_TYPES
# Did you mean?  RuboCop::Cop::Style::FrozenStringLiteralComment::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::FrozenStringLiteralComment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::GlobalVars::LITERAL_REGEX
# wrong constant name allowed_var?
# wrong constant name check
# wrong constant name on_gvar
# wrong constant name on_gvasgn
# wrong constant name user_vars
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::GuardClause::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_if
# wrong constant name <static-init>
# undefined method `kv_each<defaultArg>1' for class `RuboCop::Cop::Style::HashEachMethods'
# uninitialized constant RuboCop::Cop::Style::HashEachMethods::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name kv_each<defaultArg>1
# wrong constant name kv_each
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::HashSyntax::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::HashSyntax::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name hash_rockets_check
# wrong constant name no_mixed_keys_check
# wrong constant name on_hash
# wrong constant name ruby19_check
# wrong constant name ruby19_no_mixed_keys_check
# wrong constant name <static-init>
# undefined method `on_bad_each_with_object<defaultArg>1' for class `RuboCop::Cop::Style::HashTransformKeys'
# undefined method `on_bad_hash_brackets_map<defaultArg>1' for class `RuboCop::Cop::Style::HashTransformKeys'
# undefined method `on_bad_map_to_h<defaultArg>1' for class `RuboCop::Cop::Style::HashTransformKeys'
# uninitialized constant RuboCop::Cop::Style::HashTransformKeys::LITERAL_REGEX
# wrong constant name on_bad_each_with_object<defaultArg>1
# wrong constant name on_bad_each_with_object
# wrong constant name on_bad_hash_brackets_map<defaultArg>1
# wrong constant name on_bad_hash_brackets_map
# wrong constant name on_bad_map_to_h<defaultArg>1
# wrong constant name on_bad_map_to_h
# wrong constant name <static-init>
# undefined method `on_bad_each_with_object<defaultArg>1' for class `RuboCop::Cop::Style::HashTransformValues'
# undefined method `on_bad_hash_brackets_map<defaultArg>1' for class `RuboCop::Cop::Style::HashTransformValues'
# undefined method `on_bad_map_to_h<defaultArg>1' for class `RuboCop::Cop::Style::HashTransformValues'
# uninitialized constant RuboCop::Cop::Style::HashTransformValues::LITERAL_REGEX
# wrong constant name on_bad_each_with_object<defaultArg>1
# wrong constant name on_bad_each_with_object
# wrong constant name on_bad_hash_brackets_map<defaultArg>1
# wrong constant name on_bad_hash_brackets_map
# wrong constant name on_bad_map_to_h<defaultArg>1
# wrong constant name on_bad_map_to_h
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::IdenticalConditionalBranches::LITERAL_REGEX
# wrong constant name on_case
# wrong constant name on_if
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name correct
# wrong constant name move_assignment_inside_condition
# uninitialized constant RuboCop::Cop::Style::IfInsideElse::LITERAL_REGEX
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::IfUnlessModifier::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::IfUnlessModifierOfIfUnless::LITERAL_REGEX
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::IfWithSemicolon::LITERAL_REGEX
# wrong constant name on_normal_if_unless
# wrong constant name <static-init>
# undefined method `implicit_runtime_error_raise_or_fail<defaultArg>1' for class `RuboCop::Cop::Style::ImplicitRuntimeError'
# uninitialized constant RuboCop::Cop::Style::ImplicitRuntimeError::LITERAL_REGEX
# wrong constant name implicit_runtime_error_raise_or_fail<defaultArg>1
# wrong constant name implicit_runtime_error_raise_or_fail
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::InfiniteLoop::LITERAL_REGEX
# wrong constant name after_leaving_scope
# wrong constant name autocorrect
# wrong constant name join_force?
# wrong constant name on_until
# wrong constant name on_until_post
# wrong constant name on_while
# wrong constant name on_while_post
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::InlineComment::LITERAL_REGEX
# wrong constant name investigate
# wrong constant name <static-init>
# undefined method `inverse_block?<defaultArg>1' for class `RuboCop::Cop::Style::InverseMethods'
# undefined method `inverse_candidate?<defaultArg>1' for class `RuboCop::Cop::Style::InverseMethods'
# uninitialized constant RuboCop::Cop::Style::InverseMethods::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::InverseMethods::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name correct_inverse_block
# wrong constant name correct_inverse_method
# wrong constant name correct_inverse_selector
# wrong constant name inverse_block?<defaultArg>1
# wrong constant name inverse_block?
# wrong constant name inverse_candidate?<defaultArg>1
# wrong constant name inverse_candidate?
# wrong constant name on_block
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::IpAddresses::LITERAL_REGEX
# wrong constant name correct_style_detected
# wrong constant name offense?
# wrong constant name opposite_style_detected
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::Lambda::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::LambdaCall::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::LineEndConcatenation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::LineEndConcatenation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MethodCallWithArgsParentheses::LITERAL_REGEX
# wrong constant name <Class:OmitParentheses>
# wrong constant name <Class:RequireParentheses>
# wrong constant name autocorrect
# wrong constant name initialize
# undefined method `message<defaultArg>1' for module `#<Module:0x00007fc4f7c6f390>'
# wrong constant name autocorrect
# wrong constant name message<defaultArg>1
# wrong constant name message
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name on_super
# wrong constant name on_yield
# wrong constant name <static-init>
# undefined method `message<defaultArg>1' for module `#<Module:0x00007fc4f7c74610>'
# wrong constant name autocorrect
# wrong constant name message<defaultArg>1
# wrong constant name message
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name on_super
# wrong constant name on_yield
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MethodCallWithoutArgsParentheses::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MethodCalledOnDoEndBlock::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MethodCalledOnDoEndBlock::LITERAL_REGEX
# wrong constant name on_block
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MethodDefParentheses::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MethodDefParentheses::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MethodMissingSuper::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# undefined method `min_max_candidate<defaultArg>1' for class `RuboCop::Cop::Style::MinMax'
# uninitialized constant RuboCop::Cop::Style::MinMax::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name min_max_candidate<defaultArg>1
# wrong constant name min_max_candidate
# wrong constant name on_array
# wrong constant name on_return
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MissingElse::LITERAL_REGEX
# wrong constant name on_case
# wrong constant name on_normal_if_unless
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MissingRespondToMissing::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MixinGrouping::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_class
# wrong constant name on_module
# wrong constant name <static-init>
# undefined method `include_statement<defaultArg>1' for class `RuboCop::Cop::Style::MixinUsage'
# undefined method `wrapped_macro_scope?<defaultArg>1' for class `RuboCop::Cop::Style::MixinUsage'
# uninitialized constant RuboCop::Cop::Style::MixinUsage::LITERAL_REGEX
# wrong constant name include_statement<defaultArg>1
# wrong constant name include_statement
# wrong constant name on_send
# wrong constant name wrapped_macro_scope?<defaultArg>1
# wrong constant name wrapped_macro_scope?
# wrong constant name <static-init>
# undefined method `extend_self_node?<defaultArg>1' for class `RuboCop::Cop::Style::ModuleFunction'
# undefined method `module_function_node?<defaultArg>1' for class `RuboCop::Cop::Style::ModuleFunction'
# undefined method `private_directive?<defaultArg>1' for class `RuboCop::Cop::Style::ModuleFunction'
# uninitialized constant RuboCop::Cop::Style::ModuleFunction::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name extend_self_node?<defaultArg>1
# wrong constant name extend_self_node?
# wrong constant name module_function_node?<defaultArg>1
# wrong constant name module_function_node?
# wrong constant name on_module
# wrong constant name private_directive?<defaultArg>1
# wrong constant name private_directive?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MultilineBlockChain::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MultilineBlockChain::LITERAL_REGEX
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MultilineIfModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::MultilineIfModifier::SPACE
# wrong constant name autocorrect
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MultilineIfThen::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MultilineIfThen::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_normal_if_unless
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MultilineMemoization::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_or_asgn
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MultilineMethodSignature::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MultilineTernaryOperator::LITERAL_REGEX
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::MultilineWhenThen::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::MultilineWhenThen::LITERAL_REGEX
# wrong constant name accept_node_type?
# wrong constant name autocorrect
# wrong constant name on_when
# wrong constant name <static-init>
# undefined method `simple_comparison?<defaultArg>1' for class `RuboCop::Cop::Style::MultipleComparison'
# undefined method `simple_double_comparison?<defaultArg>1' for class `RuboCop::Cop::Style::MultipleComparison'
# uninitialized constant RuboCop::Cop::Style::MultipleComparison::LITERAL_REGEX
# wrong constant name on_or
# wrong constant name simple_comparison?<defaultArg>1
# wrong constant name simple_comparison?
# wrong constant name simple_double_comparison?<defaultArg>1
# wrong constant name simple_double_comparison?
# wrong constant name <static-init>
# undefined method `operation_produces_immutable_object?<defaultArg>1' for class `RuboCop::Cop::Style::MutableConstant'
# undefined method `range_enclosed_in_parentheses?<defaultArg>1' for class `RuboCop::Cop::Style::MutableConstant'
# undefined method `splat_value<defaultArg>1' for class `RuboCop::Cop::Style::MutableConstant'
# uninitialized constant RuboCop::Cop::Style::MutableConstant::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
#                RuboCop::Cop::Style::MutableConstant::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Style::MutableConstant::FROZEN_STRING_LITERAL_ENABLED
# Did you mean?  RuboCop::Cop::Style::MutableConstant::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Style::MutableConstant::FROZEN_STRING_LITERAL_TYPES
# Did you mean?  RuboCop::Cop::Style::MutableConstant::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::MutableConstant::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_casgn
# wrong constant name on_or_asgn
# wrong constant name operation_produces_immutable_object?<defaultArg>1
# wrong constant name operation_produces_immutable_object?
# wrong constant name range_enclosed_in_parentheses?<defaultArg>1
# wrong constant name range_enclosed_in_parentheses?
# wrong constant name splat_value<defaultArg>1
# wrong constant name splat_value
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::NegatedIf::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NegatedIf::MSG
# wrong constant name autocorrect
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::NegatedUnless::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NegatedUnless::MSG
# wrong constant name autocorrect
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::NegatedWhile::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::NegatedWhile::MSG
# wrong constant name autocorrect
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::NestedModifier::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::NestedModifier::LITERAL_REGEX
# wrong constant name add_parentheses_to_method_arguments
# wrong constant name autocorrect
# wrong constant name check
# wrong constant name left_hand_operand
# wrong constant name modifier?
# wrong constant name new_expression
# wrong constant name on_if
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name replacement_operator
# wrong constant name requires_parens?
# wrong constant name right_hand_operand
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::NestedParenthesizedCalls::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::NestedParenthesizedCalls::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::NestedTernaryOperator::LITERAL_REGEX
# wrong constant name on_if
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::Next::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Next::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name on_block
# wrong constant name on_for
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name <static-init>
# undefined method `nil_check?<defaultArg>1' for class `RuboCop::Cop::Style::NilComparison'
# undefined method `nil_comparison?<defaultArg>1' for class `RuboCop::Cop::Style::NilComparison'
# uninitialized constant RuboCop::Cop::Style::NilComparison::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name nil_check?<defaultArg>1
# wrong constant name nil_check?
# wrong constant name nil_comparison?<defaultArg>1
# wrong constant name nil_comparison?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `nil_check?<defaultArg>1' for class `RuboCop::Cop::Style::NonNilCheck'
# undefined method `not_and_nil_check?<defaultArg>1' for class `RuboCop::Cop::Style::NonNilCheck'
# undefined method `not_equal_to_nil?<defaultArg>1' for class `RuboCop::Cop::Style::NonNilCheck'
# undefined method `unless_check?<defaultArg>1' for class `RuboCop::Cop::Style::NonNilCheck'
# uninitialized constant RuboCop::Cop::Style::NonNilCheck::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name nil_check?<defaultArg>1
# wrong constant name nil_check?
# wrong constant name not_and_nil_check?<defaultArg>1
# wrong constant name not_and_nil_check?
# wrong constant name not_equal_to_nil?<defaultArg>1
# wrong constant name not_equal_to_nil?
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_send
# wrong constant name unless_check?<defaultArg>1
# wrong constant name unless_check?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::Not::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Not::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::NumericLiteralPrefix::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_int
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::NumericLiterals::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_float
# wrong constant name on_int
# wrong constant name <static-init>
# undefined method `comparison<defaultArg>1' for class `RuboCop::Cop::Style::NumericPredicate'
# undefined method `inverted_comparison<defaultArg>1' for class `RuboCop::Cop::Style::NumericPredicate'
# undefined method `predicate<defaultArg>1' for class `RuboCop::Cop::Style::NumericPredicate'
# uninitialized constant RuboCop::Cop::Style::NumericPredicate::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name comparison<defaultArg>1
# wrong constant name comparison
# wrong constant name inverted_comparison<defaultArg>1
# wrong constant name inverted_comparison
# wrong constant name on_send
# wrong constant name predicate<defaultArg>1
# wrong constant name predicate
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::OneLineConditional::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_normal_if_unless
# wrong constant name <static-init>
# undefined method `option_hash<defaultArg>1' for class `RuboCop::Cop::Style::OptionHash'
# uninitialized constant RuboCop::Cop::Style::OptionHash::LITERAL_REGEX
# wrong constant name on_args
# wrong constant name option_hash<defaultArg>1
# wrong constant name option_hash
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::OptionalArguments::LITERAL_REGEX
# wrong constant name on_def
# wrong constant name <static-init>
# undefined method `ternary_assignment?<defaultArg>1' for class `RuboCop::Cop::Style::OrAssignment'
# undefined method `unless_assignment?<defaultArg>1' for class `RuboCop::Cop::Style::OrAssignment'
# uninitialized constant RuboCop::Cop::Style::OrAssignment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_cvasgn
# wrong constant name on_gvasgn
# wrong constant name on_if
# wrong constant name on_ivasgn
# wrong constant name on_lvasgn
# wrong constant name ternary_assignment?<defaultArg>1
# wrong constant name ternary_assignment?
# wrong constant name unless_assignment?<defaultArg>1
# wrong constant name unless_assignment?
# wrong constant name <static-init>
# undefined method `implicit_self_getter?<defaultArg>1' for class `RuboCop::Cop::Style::ParallelAssignment'
# wrong constant name <Class:AssignmentSorter>
# wrong constant name <Class:GenericCorrector>
# uninitialized constant RuboCop::Cop::Style::ParallelAssignment::LITERAL_REGEX
# wrong constant name <Class:ModifierCorrector>
# wrong constant name <Class:RescueCorrector>
# wrong constant name autocorrect
# wrong constant name implicit_self_getter?<defaultArg>1
# wrong constant name implicit_self_getter?
# wrong constant name on_masgn
# undefined method `var_name<defaultArg>1' for class `RuboCop::Cop::Style::ParallelAssignment::AssignmentSorter'
# wrong constant name accesses?
# wrong constant name dependency?
# wrong constant name initialize
# wrong constant name matching_calls
# wrong constant name tsort_each_child
# wrong constant name uses_var?
# wrong constant name var_name<defaultArg>1
# wrong constant name var_name
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::ParallelAssignment::GenericCorrector::SPACE
# wrong constant name assignment
# wrong constant name config
# wrong constant name correction
# wrong constant name correction_range
# wrong constant name initialize
# wrong constant name node
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::ParallelAssignment::ModifierCorrector::SPACE
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::ParallelAssignment::RescueCorrector::SPACE
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `control_op_condition<defaultArg>1' for class `RuboCop::Cop::Style::ParenthesesAroundCondition'
# uninitialized constant RuboCop::Cop::Style::ParenthesesAroundCondition::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name control_op_condition<defaultArg>1
# wrong constant name control_op_condition
# wrong constant name on_if
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::PercentLiteralDelimiters::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::PercentLiteralDelimiters::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name message
# wrong constant name on_array
# wrong constant name on_dstr
# wrong constant name on_regexp
# wrong constant name on_str
# wrong constant name on_sym
# wrong constant name on_xstr
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::PercentQLiterals::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::PercentQLiterals::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_str
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::PerlBackrefs::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_nth_ref
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::PreferredHashMethods::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `proc_new?<defaultArg>1' for class `RuboCop::Cop::Style::Proc'
# uninitialized constant RuboCop::Cop::Style::Proc::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name proc_new?<defaultArg>1
# wrong constant name proc_new?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RaiseArgs::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `integer_op_rand?<defaultArg>1' for class `RuboCop::Cop::Style::RandomWithOffset'
# undefined method `namespace<defaultArg>1' for class `RuboCop::Cop::Style::RandomWithOffset'
# undefined method `rand_modified?<defaultArg>1' for class `RuboCop::Cop::Style::RandomWithOffset'
# undefined method `rand_op_integer?<defaultArg>1' for class `RuboCop::Cop::Style::RandomWithOffset'
# undefined method `random_call<defaultArg>1' for class `RuboCop::Cop::Style::RandomWithOffset'
# undefined method `to_int<defaultArg>1' for class `RuboCop::Cop::Style::RandomWithOffset'
# uninitialized constant RuboCop::Cop::Style::RandomWithOffset::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name integer_op_rand?<defaultArg>1
# wrong constant name integer_op_rand?
# wrong constant name namespace<defaultArg>1
# wrong constant name namespace
# wrong constant name on_send
# wrong constant name rand_modified?<defaultArg>1
# wrong constant name rand_modified?
# wrong constant name rand_op_integer?<defaultArg>1
# wrong constant name rand_op_integer?
# wrong constant name random_call<defaultArg>1
# wrong constant name random_call
# wrong constant name to_int<defaultArg>1
# wrong constant name to_int
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RedundantBegin::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RedundantCapitalW::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantCapitalW::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RedundantCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantCondition::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_if
# wrong constant name <static-init>
# undefined method `redundant_condition?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantConditional'
# undefined method `redundant_condition_inverted?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantConditional'
# uninitialized constant RuboCop::Cop::Style::RedundantConditional::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RedundantConditional::SPACE
# wrong constant name autocorrect
# wrong constant name on_if
# wrong constant name redundant_condition?<defaultArg>1
# wrong constant name redundant_condition?
# wrong constant name redundant_condition_inverted?<defaultArg>1
# wrong constant name redundant_condition_inverted?
# wrong constant name <static-init>
# undefined method `compact?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantException'
# undefined method `exploded?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantException'
# uninitialized constant RuboCop::Cop::Style::RedundantException::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name compact?<defaultArg>1
# wrong constant name compact?
# wrong constant name exploded?<defaultArg>1
# wrong constant name exploded?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `operation_produces_immutable_object?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantFreeze'
# uninitialized constant RuboCop::Cop::Style::RedundantFreeze::FROZEN_STRING_LITERAL
# Did you mean?  RuboCop::Cop::FrozenStringLiteral
#                RuboCop::Cop::Style::RedundantFreeze::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Style::RedundantFreeze::FROZEN_STRING_LITERAL_ENABLED
# Did you mean?  RuboCop::Cop::Style::RedundantFreeze::FROZEN_STRING_LITERAL_TYPES
# uninitialized constant RuboCop::Cop::Style::RedundantFreeze::FROZEN_STRING_LITERAL_TYPES
# Did you mean?  RuboCop::Cop::Style::RedundantFreeze::FROZEN_STRING_LITERAL_ENABLED
# uninitialized constant RuboCop::Cop::Style::RedundantFreeze::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name operation_produces_immutable_object?<defaultArg>1
# wrong constant name operation_produces_immutable_object?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RedundantInterpolation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantInterpolation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_dstr
# wrong constant name <static-init>
# undefined method `arg_in_call_with_block?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantParentheses'
# undefined method `first_send_argument?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantParentheses'
# undefined method `first_super_argument?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantParentheses'
# undefined method `method_node_and_args<defaultArg>1' for class `RuboCop::Cop::Style::RedundantParentheses'
# undefined method `range_end?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantParentheses'
# undefined method `rescue?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantParentheses'
# undefined method `square_brackets?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantParentheses'
# uninitialized constant RuboCop::Cop::Style::RedundantParentheses::LITERAL_REGEX
# wrong constant name arg_in_call_with_block?<defaultArg>1
# wrong constant name arg_in_call_with_block?
# wrong constant name autocorrect
# wrong constant name first_send_argument?<defaultArg>1
# wrong constant name first_send_argument?
# wrong constant name first_super_argument?<defaultArg>1
# wrong constant name first_super_argument?
# wrong constant name method_node_and_args<defaultArg>1
# wrong constant name method_node_and_args
# wrong constant name on_begin
# wrong constant name range_end?<defaultArg>1
# wrong constant name range_end?
# wrong constant name rescue?<defaultArg>1
# wrong constant name rescue?
# wrong constant name square_brackets?<defaultArg>1
# wrong constant name square_brackets?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RedundantPercentQ::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_dstr
# wrong constant name on_str
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RedundantReturn::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantReturn::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RedundantSelf::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_and_asgn
# wrong constant name on_args
# wrong constant name on_block
# wrong constant name on_blockarg
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name on_lvasgn
# wrong constant name on_masgn
# wrong constant name on_op_asgn
# wrong constant name on_or_asgn
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `redundant_sort?<defaultArg>1' for class `RuboCop::Cop::Style::RedundantSort'
# uninitialized constant RuboCop::Cop::Style::RedundantSort::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantSort::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name redundant_sort?<defaultArg>1
# wrong constant name redundant_sort?
# wrong constant name <static-init>
# undefined method `redundant_sort_by<defaultArg>1' for class `RuboCop::Cop::Style::RedundantSortBy'
# uninitialized constant RuboCop::Cop::Style::RedundantSortBy::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RedundantSortBy::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_block
# wrong constant name redundant_sort_by<defaultArg>1
# wrong constant name redundant_sort_by
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RegexpLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RegexpLiteral::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_regexp
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::RescueModifier::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::RescueModifier::SPACE
# wrong constant name autocorrect
# wrong constant name on_resbody
# wrong constant name <static-init>
# undefined method `rescue_standard_error?<defaultArg>1' for class `RuboCop::Cop::Style::RescueStandardError'
# undefined method `rescue_without_error_class?<defaultArg>1' for class `RuboCop::Cop::Style::RescueStandardError'
# uninitialized constant RuboCop::Cop::Style::RescueStandardError::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::RescueStandardError::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_resbody
# wrong constant name rescue_standard_error?<defaultArg>1
# wrong constant name rescue_standard_error?
# wrong constant name rescue_without_error_class?<defaultArg>1
# wrong constant name rescue_without_error_class?
# wrong constant name <static-init>
# undefined method `chained_send?<defaultArg>1' for class `RuboCop::Cop::Style::ReturnNil'
# undefined method `define_method?<defaultArg>1' for class `RuboCop::Cop::Style::ReturnNil'
# undefined method `return_nil_node?<defaultArg>1' for class `RuboCop::Cop::Style::ReturnNil'
# undefined method `return_node?<defaultArg>1' for class `RuboCop::Cop::Style::ReturnNil'
# uninitialized constant RuboCop::Cop::Style::ReturnNil::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name chained_send?<defaultArg>1
# wrong constant name chained_send?
# wrong constant name define_method?<defaultArg>1
# wrong constant name define_method?
# wrong constant name on_return
# wrong constant name return_nil_node?<defaultArg>1
# wrong constant name return_nil_node?
# wrong constant name return_node?<defaultArg>1
# wrong constant name return_node?
# wrong constant name <static-init>
# undefined method `modifier_if_safe_navigation_candidate<defaultArg>1' for class `RuboCop::Cop::Style::SafeNavigation'
# undefined method `not_nil_check?<defaultArg>1' for class `RuboCop::Cop::Style::SafeNavigation'
# uninitialized constant RuboCop::Cop::Style::SafeNavigation::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::SafeNavigation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name check_node
# wrong constant name modifier_if_safe_navigation_candidate<defaultArg>1
# wrong constant name modifier_if_safe_navigation_candidate
# wrong constant name not_nil_check?<defaultArg>1
# wrong constant name not_nil_check?
# wrong constant name on_and
# wrong constant name on_if
# wrong constant name use_var_only_in_unless_modifier?
# wrong constant name <static-init>
# undefined method `sample_candidate?<defaultArg>1' for class `RuboCop::Cop::Style::Sample'
# uninitialized constant RuboCop::Cop::Style::Sample::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name sample_candidate?<defaultArg>1
# wrong constant name sample_candidate?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::SelfAssignment::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_cvasgn
# wrong constant name on_ivasgn
# wrong constant name on_lvasgn
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::Semicolon::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Semicolon::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name investigate
# wrong constant name on_begin
# wrong constant name <static-init>
# undefined method `sending?<defaultArg>1' for class `RuboCop::Cop::Style::Send'
# uninitialized constant RuboCop::Cop::Style::Send::LITERAL_REGEX
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name sending?<defaultArg>1
# wrong constant name sending?
# wrong constant name <static-init>
# undefined method `kernel_call?<defaultArg>1' for class `RuboCop::Cop::Style::SignalException'
# uninitialized constant RuboCop::Cop::Style::SignalException::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name custom_fail_methods
# wrong constant name investigate
# wrong constant name kernel_call?<defaultArg>1
# wrong constant name kernel_call?
# wrong constant name on_rescue
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::SingleLineBlockParams::LITERAL_REGEX
# wrong constant name on_block
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::SingleLineMethods::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::SingleLineMethods::SPACE
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::SpecialGlobalVars::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name message
# wrong constant name on_gvar
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::StabbyLambdaParentheses::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `stderr_puts?<defaultArg>1' for class `RuboCop::Cop::Style::StderrPuts'
# uninitialized constant RuboCop::Cop::Style::StderrPuts::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::StderrPuts::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name stderr_puts?<defaultArg>1
# wrong constant name stderr_puts?
# wrong constant name <static-init>
# undefined method `receive_environments_method?<defaultArg>1' for class `RuboCop::Cop::Style::StringHashKeys'
# undefined method `string_hash_key?<defaultArg>1' for class `RuboCop::Cop::Style::StringHashKeys'
# uninitialized constant RuboCop::Cop::Style::StringHashKeys::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_pair
# wrong constant name receive_environments_method?<defaultArg>1
# wrong constant name receive_environments_method?
# wrong constant name string_hash_key?<defaultArg>1
# wrong constant name string_hash_key?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::StringLiterals::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_dstr
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::StringLiteralsInInterpolation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::StringMethods::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `lstrip_rstrip<defaultArg>1' for class `RuboCop::Cop::Style::Strip'
# uninitialized constant RuboCop::Cop::Style::Strip::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::Strip::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name lstrip_rstrip<defaultArg>1
# wrong constant name lstrip_rstrip
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `struct_constructor?<defaultArg>1' for class `RuboCop::Cop::Style::StructInheritance'
# uninitialized constant RuboCop::Cop::Style::StructInheritance::LITERAL_REGEX
# wrong constant name on_class
# wrong constant name struct_constructor?<defaultArg>1
# wrong constant name struct_constructor?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::SymbolArray::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# wrong constant name largest_brackets
# wrong constant name largest_brackets=
# uninitialized constant RuboCop::Cop::Style::SymbolLiteral::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_sym
# wrong constant name <static-init>
# undefined method `proc_node?<defaultArg>1' for class `RuboCop::Cop::Style::SymbolProc'
# undefined method `symbol_proc?<defaultArg>1' for class `RuboCop::Cop::Style::SymbolProc'
# uninitialized constant RuboCop::Cop::Style::SymbolProc::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::SymbolProc::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name destructuring_block_argument?
# wrong constant name on_block
# wrong constant name proc_node?<defaultArg>1
# wrong constant name proc_node?
# wrong constant name symbol_proc?<defaultArg>1
# wrong constant name symbol_proc?
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name correct
# wrong constant name move_assignment_inside_condition
# undefined method `method_name<defaultArg>1' for class `RuboCop::Cop::Style::TernaryParentheses'
# Did you mean?  method_undefined
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Style::TernaryParentheses::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Style::TernaryParentheses::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Style::TernaryParentheses::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name method_name<defaultArg>1
# wrong constant name method_name
# wrong constant name on_if
# wrong constant name only_closing_parenthesis_is_last_line?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnClass::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnClass::SPACE
# wrong constant name autocorrect
# wrong constant name on_class
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnMethodDefinition::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnMethodDefinition::SPACE
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnModule::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingBodyOnModule::SPACE
# wrong constant name autocorrect
# wrong constant name on_module
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInArguments::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInArguments::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInArguments::MSG
# wrong constant name autocorrect
# wrong constant name on_csend
# wrong constant name on_send
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInArrayLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInArrayLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInArrayLiteral::MSG
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInHashLiteral::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInHashLiteral::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingCommaInHashLiteral::MSG
# wrong constant name autocorrect
# wrong constant name on_hash
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::TrailingMethodEndStatement::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingMethodEndStatement::SPACE
# wrong constant name autocorrect
# wrong constant name on_def
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::LITERAL_REGEX
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::NO_SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Style::TrailingUnderscoreVariable::SPACE_COMMAND
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::SINGLE_SPACE_REGEXP
# uninitialized constant RuboCop::Cop::Style::TrailingUnderscoreVariable::SPACE_COMMAND
# Did you mean?  RuboCop::Cop::Style::TrailingUnderscoreVariable::NO_SPACE_COMMAND
# wrong constant name autocorrect
# wrong constant name on_masgn
# wrong constant name <static-init>
# undefined method `looks_like_trivial_writer?<defaultArg>1' for class `RuboCop::Cop::Style::TrivialAccessors'
# uninitialized constant RuboCop::Cop::Style::TrivialAccessors::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name looks_like_trivial_writer?<defaultArg>1
# wrong constant name looks_like_trivial_writer?
# wrong constant name on_def
# wrong constant name on_defs
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::UnlessElse::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::UnlessElse::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_if
# wrong constant name range_between_condition_and_else
# wrong constant name range_between_else_and_end
# wrong constant name <static-init>
# undefined method `unpack_and_first_element?<defaultArg>1' for class `RuboCop::Cop::Style::UnpackFirst'
# uninitialized constant RuboCop::Cop::Style::UnpackFirst::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_send
# wrong constant name unpack_and_first_element?<defaultArg>1
# wrong constant name unpack_and_first_element?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::VariableInterpolation::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::WhenThen::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_when
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::WhileUntilDo::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name handle
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::WhileUntilModifier::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_until
# wrong constant name on_while
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::Style::WordArray::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name on_array
# wrong constant name <static-init>
# wrong constant name largest_brackets
# wrong constant name largest_brackets=
# undefined method `file_constant_equal_program_name?<defaultArg>1' for class `RuboCop::Cop::Style::YodaCondition'
# uninitialized constant RuboCop::Cop::Style::YodaCondition::BYTE_ORDER_MARK
# uninitialized constant RuboCop::Cop::Style::YodaCondition::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name file_constant_equal_program_name?<defaultArg>1
# wrong constant name file_constant_equal_program_name?
# wrong constant name on_send
# wrong constant name <static-init>
# undefined method `non_polymorphic_collection?<defaultArg>1' for class `RuboCop::Cop::Style::ZeroLengthPredicate'
# undefined method `nonzero_length_predicate<defaultArg>1' for class `RuboCop::Cop::Style::ZeroLengthPredicate'
# undefined method `other_receiver<defaultArg>1' for class `RuboCop::Cop::Style::ZeroLengthPredicate'
# undefined method `zero_length_predicate<defaultArg>1' for class `RuboCop::Cop::Style::ZeroLengthPredicate'
# undefined method `zero_length_receiver<defaultArg>1' for class `RuboCop::Cop::Style::ZeroLengthPredicate'
# uninitialized constant RuboCop::Cop::Style::ZeroLengthPredicate::LITERAL_REGEX
# wrong constant name autocorrect
# wrong constant name non_polymorphic_collection?<defaultArg>1
# wrong constant name non_polymorphic_collection?
# wrong constant name nonzero_length_predicate<defaultArg>1
# wrong constant name nonzero_length_predicate
# wrong constant name on_send
# wrong constant name other_receiver<defaultArg>1
# wrong constant name other_receiver
# wrong constant name zero_length_predicate<defaultArg>1
# wrong constant name zero_length_predicate
# wrong constant name zero_length_receiver<defaultArg>1
# wrong constant name zero_length_receiver
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::SurroundingSpace::BYTE_ORDER_MARK
# wrong constant name <static-init>
# wrong constant name minimum_target_ruby_version
# wrong constant name support_target_ruby_version?
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::Team'
# Did you mean?  initialize_dup
# wrong constant name <Class:Investigation>
# wrong constant name autocorrect
# wrong constant name autocorrect?
# wrong constant name cops
# wrong constant name debug?
# wrong constant name errors
# wrong constant name external_dependency_checksum
# wrong constant name forces
# wrong constant name forces_for
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name inspect_file
# wrong constant name updated_source_file
# wrong constant name updated_source_file?
# wrong constant name warnings
# uninitialized constant RuboCop::Cop::Team::Investigation::Elem
# wrong constant name errors
# wrong constant name errors=
# wrong constant name offenses
# wrong constant name offenses=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name body_on_first_line?
# wrong constant name first_part_of
# wrong constant name trailing_body?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::TrailingComma::BYTE_ORDER_MARK
# wrong constant name <static-init>
# wrong constant name check
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name correct
# wrong constant name correct_for_blockarg_type
# wrong constant name processed_source
# undefined singleton method `on_node<defaultArg>1' for `RuboCop::Cop::Util'
# wrong constant name <static-init>
# wrong constant name begins_its_line?
# wrong constant name comment_line?
# wrong constant name double_quotes_required?
# wrong constant name escape_string
# wrong constant name first_part_of_call_chain
# wrong constant name interpret_string_escapes
# wrong constant name line_range
# wrong constant name needs_escaping?
# wrong constant name on_node<defaultArg>1
# wrong constant name on_node
# wrong constant name parentheses?
# wrong constant name same_line?
# wrong constant name to_string_literal
# wrong constant name to_supported_styles
# wrong constant name tokens
# wrong constant name trim_string_interporation_escape_character
# wrong constant name <Class:FormatString>
# wrong constant name <Class:FormatSequence>
# wrong constant name format_sequences
# wrong constant name initialize
# wrong constant name max_digit_dollar_num
# wrong constant name named_interpolation?
# wrong constant name annotated?
# wrong constant name arity
# wrong constant name begin_pos
# wrong constant name end_pos
# wrong constant name flags
# wrong constant name initialize
# wrong constant name max_digit_dollar_num
# wrong constant name name
# wrong constant name percent?
# wrong constant name precision
# wrong constant name style
# wrong constant name template?
# wrong constant name type
# wrong constant name width
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:Assignment>
# wrong constant name <Class:AssignmentReference>
# wrong constant name <Class:Branch>
# wrong constant name <Class:Branchable>
# wrong constant name <Class:Reference>
# wrong constant name <Class:Scope>
# wrong constant name <Class:Variable>
# wrong constant name <Class:VariableReference>
# wrong constant name <Class:VariableTable>
# wrong constant name investigate
# wrong constant name process_node
# wrong constant name variable_table
# wrong constant name initialize
# wrong constant name meta_assignment_node
# wrong constant name multiple_assignment?
# wrong constant name name
# wrong constant name node
# wrong constant name operator
# wrong constant name operator_assignment?
# wrong constant name reference!
# wrong constant name referenced
# wrong constant name referenced?
# wrong constant name references
# wrong constant name regexp_named_capture?
# wrong constant name scope
# wrong constant name used?
# wrong constant name variable
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::AssignmentReference::Elem
# wrong constant name assignment?
# wrong constant name node
# wrong constant name node=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <Class:And>
# wrong constant name <Class:Base>
# wrong constant name <Class:Case>
# wrong constant name <Class:Ensure>
# wrong constant name <Class:ExceptionHandler>
# wrong constant name <Class:For>
# wrong constant name <Class:If>
# wrong constant name <Class:LogicalOperator>
# wrong constant name <Class:Or>
# wrong constant name <Class:Rescue>
# wrong constant name <Class:SimpleConditional>
# wrong constant name <Class:Until>
# wrong constant name <Class:UntilPost>
# wrong constant name <Class:While>
# wrong constant name <Class:WhilePost>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::And::Elem
# wrong constant name left_body?
# wrong constant name right_body?
# wrong constant name <static-init>
# undefined method `each_ancestor<defaultArg>1' for class `RuboCop::Cop::VariableForce::Branch::Base'
# wrong constant name ==
# uninitialized constant RuboCop::Cop::VariableForce::Branch::Base::Elem
# wrong constant name always_run?
# wrong constant name branched?
# wrong constant name child_node
# wrong constant name child_node=
# wrong constant name control_node
# wrong constant name each_ancestor<defaultArg>1
# wrong constant name each_ancestor
# wrong constant name eql?
# wrong constant name exclusive_with?
# wrong constant name may_jump_to_other_branch?
# wrong constant name may_run_incompletely?
# wrong constant name parent
# wrong constant name scope
# wrong constant name scope=
# undefined singleton method `define_predicate<defaultArg>1' for `RuboCop::Cop::VariableForce::Branch::Base'
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name classes
# wrong constant name define_predicate<defaultArg>1
# wrong constant name define_predicate
# wrong constant name inherited
# wrong constant name members
# wrong constant name type
# uninitialized constant RuboCop::Cop::VariableForce::Branch::Case::Elem
# wrong constant name else_body?
# wrong constant name target?
# wrong constant name when_clause?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::Ensure::Elem
# wrong constant name ensure_body?
# wrong constant name main_body?
# wrong constant name <static-init>
# wrong constant name may_jump_to_other_branch?
# wrong constant name may_run_incompletely?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::For::Elem
# wrong constant name collection?
# wrong constant name element?
# wrong constant name loop_body?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::If::Elem
# wrong constant name falsey_body?
# wrong constant name truthy_body?
# wrong constant name <static-init>
# wrong constant name always_run?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::Or::Elem
# wrong constant name left_body?
# wrong constant name right_body?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::Rescue::Elem
# wrong constant name else_body?
# wrong constant name main_body?
# wrong constant name rescue_clause?
# wrong constant name <static-init>
# wrong constant name always_run?
# wrong constant name conditional_clause?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::Until::Elem
# wrong constant name loop_body?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::UntilPost::Elem
# wrong constant name loop_body?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::While::Elem
# wrong constant name loop_body?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::Branch::WhilePost::Elem
# wrong constant name loop_body?
# wrong constant name <static-init>
# undefined singleton method `of<defaultArg>1' for `RuboCop::Cop::VariableForce::Branch'
# wrong constant name <static-init>
# wrong constant name of<defaultArg>1
# wrong constant name of
# wrong constant name branch
# wrong constant name run_exclusively_with?
# wrong constant name <static-init>
# wrong constant name explicit?
# wrong constant name initialize
# wrong constant name node
# wrong constant name scope
# wrong constant name <static-init>
# wrong constant name ==
# wrong constant name body_node
# wrong constant name each_node
# wrong constant name include?
# wrong constant name initialize
# wrong constant name naked_top_level
# wrong constant name naked_top_level?
# wrong constant name name
# wrong constant name node
# wrong constant name variables
# wrong constant name <static-init>
# wrong constant name argument?
# wrong constant name assign
# wrong constant name assignments
# wrong constant name block_argument?
# wrong constant name capture_with_block!
# wrong constant name captured_by_block
# wrong constant name captured_by_block?
# wrong constant name declaration_node
# wrong constant name explicit_block_local_variable?
# wrong constant name in_modifier_if?
# wrong constant name initialize
# wrong constant name keyword_argument?
# wrong constant name method_argument?
# wrong constant name name
# wrong constant name reference!
# wrong constant name referenced?
# wrong constant name references
# wrong constant name scope
# wrong constant name should_be_unused?
# wrong constant name used?
# wrong constant name <static-init>
# uninitialized constant RuboCop::Cop::VariableForce::VariableReference::Elem
# wrong constant name assignment?
# wrong constant name name
# wrong constant name name=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# undefined method `initialize<defaultArg>1' for class `RuboCop::Cop::VariableForce::VariableTable'
# Did you mean?  initialize_dup
# wrong constant name accessible_variables
# wrong constant name assign_to_variable
# wrong constant name current_scope
# wrong constant name current_scope_level
# wrong constant name declare_variable
# wrong constant name find_variable
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name invoke_hook
# wrong constant name pop_scope
# wrong constant name push_scope
# wrong constant name reference_variable
# wrong constant name scope_stack
# wrong constant name variable_exist?
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name column
# wrong constant name cop
# wrong constant name initialize
# wrong constant name line
# wrong constant name <static-init>
# wrong constant name find_file_upwards
# wrong constant name find_files_upwards
# wrong constant name <static-init>
# wrong constant name root_level=
# wrong constant name root_level?
# wrong constant name <Class:AutoGenConfigFormatter>
# wrong constant name <Class:BaseFormatter>
# wrong constant name <Class:ClangStyleFormatter>
# wrong constant name <Class:Colorizable>
# wrong constant name <Class:DisabledConfigFormatter>
# wrong constant name <Class:DisabledLinesFormatter>
# wrong constant name <Class:EmacsStyleFormatter>
# wrong constant name <Class:FileListFormatter>
# wrong constant name <Class:FormatterSet>
# wrong constant name <Class:FuubarStyleFormatter>
# wrong constant name <Class:HTMLFormatter>
# wrong constant name <Class:JSONFormatter>
# wrong constant name <Class:JUnitFormatter>
# wrong constant name <Class:OffenseCountFormatter>
# wrong constant name <Class:PacmanFormatter>
# wrong constant name <Class:ProgressFormatter>
# wrong constant name <Class:QuietFormatter>
# wrong constant name <Class:SimpleTextFormatter>
# wrong constant name <Class:TapFormatter>
# wrong constant name <Class:TextUtil>
# wrong constant name <Class:WorstOffendersFormatter>
# uninitialized constant RuboCop::Formatter::AutoGenConfigFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::AutoGenConfigFormatter::DOT
# uninitialized constant RuboCop::Formatter::AutoGenConfigFormatter::ELLIPSES
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `RuboCop::Formatter::BaseFormatter'
# Did you mean?  initialize_dup
# wrong constant name file_finished
# wrong constant name file_started
# wrong constant name finished
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name options
# wrong constant name output
# wrong constant name started
# wrong constant name <static-init>
# uninitialized constant RuboCop::Formatter::ClangStyleFormatter::COLOR_FOR_SEVERITY
# wrong constant name <static-init>
# wrong constant name black
# wrong constant name blue
# wrong constant name colorize
# wrong constant name cyan
# wrong constant name green
# wrong constant name magenta
# wrong constant name rainbow
# wrong constant name red
# wrong constant name white
# wrong constant name yellow
# wrong constant name <static-init>
# wrong constant name file_started
# wrong constant name finished
# wrong constant name <static-init>
# wrong constant name config_to_allow_offenses
# wrong constant name config_to_allow_offenses=
# wrong constant name detected_styles
# wrong constant name detected_styles=
# wrong constant name cop_disabled_line_ranges
# wrong constant name finished
# wrong constant name started
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `add_formatter<defaultArg>1' for class `RuboCop::Formatter::FormatterSet'
# undefined method `initialize<defaultArg>1' for class `RuboCop::Formatter::FormatterSet'
# Did you mean?  initialize_dup
# uninitialized constant RuboCop::Formatter::FormatterSet::Elem
# wrong constant name add_formatter<defaultArg>1
# wrong constant name add_formatter
# wrong constant name close_output_files
# wrong constant name file_finished
# wrong constant name file_started
# wrong constant name finished
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name started
# wrong constant name <static-init>
# uninitialized constant RuboCop::Formatter::FuubarStyleFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::FuubarStyleFormatter::ELLIPSES
# wrong constant name initialize
# wrong constant name progressbar_color
# wrong constant name started
# wrong constant name with_color
# wrong constant name <static-init>
# wrong constant name <Class:Color>
# wrong constant name <Class:ERBContext>
# wrong constant name files
# wrong constant name render_html
# wrong constant name summary
# uninitialized constant RuboCop::Formatter::HTMLFormatter::Color::Elem
# wrong constant name alpha
# wrong constant name alpha=
# wrong constant name blue
# wrong constant name blue=
# wrong constant name fade_out
# wrong constant name green
# wrong constant name green=
# wrong constant name red
# wrong constant name red=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name base64_encoded_logo_image
# wrong constant name decorated_message
# wrong constant name escape
# wrong constant name files
# wrong constant name highlighted_source_line
# wrong constant name hightlight_source_tag
# wrong constant name initialize
# wrong constant name possible_ellipses
# wrong constant name source_after_highlight
# wrong constant name source_before_highlight
# wrong constant name summary
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name hash_for_file
# wrong constant name hash_for_location
# wrong constant name hash_for_offense
# wrong constant name metadata_hash
# wrong constant name output_hash
# wrong constant name <static-init>
# wrong constant name finished
# wrong constant name <static-init>
# wrong constant name file_finished
# wrong constant name finished
# wrong constant name offense_counts
# wrong constant name ordered_offense_counts
# wrong constant name report_summary
# wrong constant name total_offense_count
# wrong constant name <static-init>
# uninitialized constant RuboCop::Formatter::PacmanFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::PacmanFormatter::ELLIPSES
# wrong constant name cols
# wrong constant name file_started
# wrong constant name next_step
# wrong constant name pacdots
# wrong constant name progress_line
# wrong constant name progress_line=
# wrong constant name started
# wrong constant name step
# wrong constant name update_progress_line
# wrong constant name <static-init>
# uninitialized constant RuboCop::Formatter::ProgressFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::ProgressFormatter::ELLIPSES
# wrong constant name report_file_as_mark
# wrong constant name started
# wrong constant name <static-init>
# uninitialized constant RuboCop::Formatter::QuietFormatter::COLOR_FOR_SEVERITY
# wrong constant name <static-init>
# wrong constant name <Class:Report>
# wrong constant name report_file
# wrong constant name report_summary
# wrong constant name started
# wrong constant name initialize
# wrong constant name summary
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant RuboCop::Formatter::TapFormatter::COLOR_FOR_SEVERITY
# uninitialized constant RuboCop::Formatter::TapFormatter::ELLIPSES
# wrong constant name started
# wrong constant name <static-init>
# undefined singleton method `pluralize<defaultArg>1' for `RuboCop::Formatter::TextUtil'
# wrong constant name <static-init>
# wrong constant name pluralize<defaultArg>1
# wrong constant name pluralize
# wrong constant name finished
# wrong constant name offense_counts
# wrong constant name ordered_offense_counts
# wrong constant name report_summary
# wrong constant name total_offense_count
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:EditorComment>
# wrong constant name <Class:EmacsComment>
# wrong constant name <Class:SimpleComment>
# wrong constant name <Class:VimComment>
# wrong constant name any?
# wrong constant name encoding_specified?
# wrong constant name frozen_string_literal
# wrong constant name frozen_string_literal?
# wrong constant name frozen_string_literal_specified?
# wrong constant name initialize
# wrong constant name valid_literal_value?
# uninitialized constant RuboCop::MagicComment::EditorComment::TOKEN
# Did you mean?  RuboCop::Token
#                Token
#                RuboCop::MagicComment::TOKEN
# wrong constant name <static-init>
# uninitialized constant RuboCop::MagicComment::EmacsComment::TOKEN
# Did you mean?  RuboCop::Token
#                Token
#                RuboCop::MagicComment::TOKEN
# wrong constant name encoding
# wrong constant name <static-init>
# uninitialized constant RuboCop::MagicComment::SimpleComment::TOKEN
# Did you mean?  RuboCop::Token
#                Token
#                RuboCop::MagicComment::TOKEN
# wrong constant name encoding
# wrong constant name <static-init>
# uninitialized constant RuboCop::MagicComment::VimComment::TOKEN
# Did you mean?  RuboCop::Token
#                Token
#                RuboCop::MagicComment::TOKEN
# wrong constant name encoding
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name parse
# wrong constant name find_similar_name
# wrong constant name <static-init>
# wrong constant name ==
# wrong constant name <Class:Invalid>
# wrong constant name <Class:Macros>
# wrong constant name eql?
# wrong constant name initialize
# wrong constant name marshal_dump
# wrong constant name marshal_load
# wrong constant name match
# wrong constant name pattern
# wrong constant name <static-init>
# wrong constant name def_node_matcher
# wrong constant name def_node_search
# wrong constant name node_search
# wrong constant name node_search_all
# wrong constant name node_search_body
# wrong constant name node_search_first
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name descend
# wrong constant name <static-init>
# wrong constant name parse
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name boolean_or_empty_cache?
# wrong constant name display_only_fail_level_offenses_with_autocorrect?
# wrong constant name except_syntax?
# wrong constant name incompatible_options
# wrong constant name initialize
# wrong constant name only_includes_redundant_disable?
# wrong constant name validate_auto_correct
# wrong constant name validate_auto_gen_config
# wrong constant name validate_compatibility
# wrong constant name validate_cop_options
# wrong constant name validate_exclude_limit_option
# wrong constant name validate_parallel
# wrong constant name validate_parallel_with_combo_option
# wrong constant name <static-init>
# wrong constant name validate_cop_list
# undefined singleton method `relative_path<defaultArg>1' for `RuboCop::PathUtil'
# wrong constant name <static-init>
# wrong constant name absolute?
# wrong constant name chdir
# wrong constant name hidden_dir?
# wrong constant name hidden_file_in_not_hidden_dir?
# wrong constant name match_path?
# wrong constant name pwd
# wrong constant name relative_path<defaultArg>1
# wrong constant name relative_path
# wrong constant name reset_pwd
# wrong constant name smart_path
# wrong constant name <static-init>
# wrong constant name windows?
# undefined method `initialize<defaultArg>1' for class `RuboCop::ProcessedSource'
# Did you mean?  initialize_dup
# wrong constant name []
# wrong constant name ast
# wrong constant name ast_with_comments
# wrong constant name blank?
# wrong constant name buffer
# wrong constant name checksum
# wrong constant name comment_config
# wrong constant name commented?
# wrong constant name comments
# wrong constant name comments_before_line
# wrong constant name current_line
# wrong constant name diagnostics
# wrong constant name disabled_line_ranges
# wrong constant name each_comment
# wrong constant name each_token
# wrong constant name file_path
# wrong constant name find_comment
# wrong constant name find_token
# wrong constant name following_line
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name line_indentation
# wrong constant name lines
# wrong constant name parser_error
# wrong constant name path
# wrong constant name preceding_line
# wrong constant name raw_source
# wrong constant name ruby_version
# wrong constant name start_with?
# wrong constant name tokens
# wrong constant name valid_syntax?
# wrong constant name <static-init>
# wrong constant name from_file
# wrong constant name file
# wrong constant name inherit_from_remote
# wrong constant name initialize
# wrong constant name uri
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `RuboCop::ResultCache'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name load
# wrong constant name save
# wrong constant name valid?
# undefined singleton method `cleanup<defaultArg>1' for `RuboCop::ResultCache'
# wrong constant name <static-init>
# wrong constant name allow_symlinks_in_cache_location?
# wrong constant name cache_root
# wrong constant name cleanup<defaultArg>1
# wrong constant name cleanup
# wrong constant name inhibit_cleanup
# wrong constant name inhibit_cleanup=
# wrong constant name source_checksum
# wrong constant name source_checksum=
# wrong constant name <Class:InfiniteCorrectionLoop>
# wrong constant name aborting=
# wrong constant name aborting?
# wrong constant name errors
# wrong constant name initialize
# wrong constant name run
# wrong constant name warnings
# wrong constant name initialize
# wrong constant name offenses
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name interpret
# wrong constant name <static-init>
# wrong constant name similarity
# undefined method `initialize<defaultArg>1' for class `RuboCop::TargetFinder'
# Did you mean?  initialize_dup
# undefined method `target_files_in_dir<defaultArg>1' for class `RuboCop::TargetFinder'
# wrong constant name all_cops_include
# wrong constant name configured_include?
# wrong constant name debug?
# wrong constant name excluded_dirs
# wrong constant name fail_fast?
# wrong constant name find
# wrong constant name find_files
# wrong constant name force_exclusion?
# wrong constant name included_file?
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name process_explicit_path
# wrong constant name ruby_executable?
# wrong constant name ruby_extension?
# wrong constant name ruby_extensions
# wrong constant name ruby_file?
# wrong constant name ruby_filename?
# wrong constant name ruby_filenames
# wrong constant name ruby_interpreters
# wrong constant name stdin?
# wrong constant name target_files_in_dir<defaultArg>1
# wrong constant name target_files_in_dir
# wrong constant name to_inspect?
# wrong constant name toplevel_dirs
# wrong constant name <static-init>
# wrong constant name <Class:BundlerLockFile>
# wrong constant name <Class:Default>
# wrong constant name <Class:RuboCopConfig>
# wrong constant name <Class:RubyVersionFile>
# wrong constant name <Class:Source>
# wrong constant name initialize
# wrong constant name rubocop_version_with_support
# wrong constant name source
# wrong constant name supported?
# wrong constant name version
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name name
# wrong constant name version
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name supported_versions
# wrong constant name begin_pos
# wrong constant name column
# wrong constant name comma?
# wrong constant name comment?
# wrong constant name end?
# wrong constant name end_pos
# wrong constant name equal_sign?
# wrong constant name initialize
# wrong constant name left_array_bracket?
# wrong constant name left_brace?
# wrong constant name left_bracket?
# wrong constant name left_curly_brace?
# wrong constant name left_parens?
# wrong constant name left_ref_bracket?
# wrong constant name line
# wrong constant name pos
# wrong constant name rescue_modifier?
# wrong constant name right_bracket?
# wrong constant name right_curly_brace?
# wrong constant name right_parens?
# wrong constant name semicolon?
# wrong constant name space_after?
# wrong constant name space_before?
# wrong constant name text
# wrong constant name type
# wrong constant name <static-init>
# wrong constant name from_parser_token
# wrong constant name <static-init>
# undefined singleton method `version<defaultArg>1' for `RuboCop::Version'
# wrong constant name <static-init>
# wrong constant name version<defaultArg>1
# wrong constant name version
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name check
# wrong constant name <static-init>
# wrong constant name <Class:Node>
# undefined method `pretty_print_children<defaultArg>1' for class `RubyVM::AbstractSyntaxTree::Node'
# Did you mean?  pretty_print_inspect
# wrong constant name children
# wrong constant name first_column
# wrong constant name first_lineno
# wrong constant name last_column
# wrong constant name last_lineno
# wrong constant name pretty_print_children<defaultArg>1
# wrong constant name pretty_print_children
# wrong constant name type
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name of
# wrong constant name parse
# wrong constant name parse_file
# wrong constant name absolute_path
# wrong constant name base_label
# wrong constant name disasm
# wrong constant name disassemble
# wrong constant name each_child
# wrong constant name eval
# wrong constant name first_lineno
# wrong constant name label
# wrong constant name path
# wrong constant name to_a
# wrong constant name to_binary
# wrong constant name trace_points
# wrong constant name compile
# wrong constant name compile_file
# wrong constant name compile_option
# wrong constant name compile_option=
# wrong constant name disasm
# wrong constant name disassemble
# wrong constant name load_from_binary
# wrong constant name load_from_binary_extra_data
# wrong constant name of
# wrong constant name <static-init>
# wrong constant name enabled?
# wrong constant name pause
# wrong constant name resume
# wrong constant name resolve_feature_path
# wrong constant name stat
# wrong constant name bytes
# undefined method `flatten_merge<defaultArg>1' for class `Set'
# undefined method `initialize<defaultArg>1' for class `Set'
# Did you mean?  initialize_dup
# wrong constant name ==
# wrong constant name ===
# wrong constant name compare_by_identity
# wrong constant name compare_by_identity?
# wrong constant name divide
# wrong constant name eql?
# wrong constant name flatten_merge<defaultArg>1
# wrong constant name flatten_merge
# wrong constant name initialize<defaultArg>1
# wrong constant name pretty_print
# wrong constant name pretty_print_cycle
# wrong constant name reset
# wrong constant name <static-init>
# wrong constant name escape
# wrong constant name join
# wrong constant name shellescape
# wrong constant name shelljoin
# wrong constant name shellsplit
# wrong constant name shellwords
# wrong constant name split
# wrong constant name signm
# wrong constant name signo
# undefined method `def_delegator<defaultArg>1' for module `SingleForwardable'
# undefined method `def_single_delegator<defaultArg>1' for module `SingleForwardable'
# wrong constant name def_delegator<defaultArg>1
# wrong constant name def_delegator
# wrong constant name def_delegators
# wrong constant name def_single_delegator<defaultArg>1
# wrong constant name def_single_delegator
# wrong constant name def_single_delegators
# wrong constant name delegate
# wrong constant name single_delegate
# uninitialized constant Socket::APPEND
# uninitialized constant Socket::BINARY
# uninitialized constant Socket::CREAT
# uninitialized constant Socket::DSYNC
# Did you mean?  Socket::SYNC
# uninitialized constant Socket::EXCL
# uninitialized constant Socket::FNM_CASEFOLD
# uninitialized constant Socket::FNM_DOTMATCH
# uninitialized constant Socket::FNM_EXTGLOB
# uninitialized constant Socket::FNM_NOESCAPE
# uninitialized constant Socket::FNM_PATHNAME
# uninitialized constant Socket::FNM_SHORTNAME
# uninitialized constant Socket::FNM_SYSCASE
# uninitialized constant Socket::LOCK_EX
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_UN
#                Socket::LOCK_SH
# uninitialized constant Socket::LOCK_NB
# Did you mean?  Socket::LOCK_UN
#                Socket::LOCK_EX
#                Socket::LOCK_SH
# uninitialized constant Socket::LOCK_SH
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_UN
#                Socket::LOCK_EX
# uninitialized constant Socket::LOCK_UN
# Did you mean?  Socket::LOCK_NB
#                Socket::LOCK_EX
#                Socket::LOCK_SH
# uninitialized constant Socket::NOCTTY
# uninitialized constant Socket::NOFOLLOW
# uninitialized constant Socket::NONBLOCK
# uninitialized constant Socket::NULL
# uninitialized constant Socket::RDONLY
# Did you mean?  Socket::WRONLY
# uninitialized constant Socket::RDWR
# uninitialized constant Socket::SEEK_CUR
# uninitialized constant Socket::SEEK_DATA
# Did you mean?  Socket::SEEK_SET
# uninitialized constant Socket::SEEK_END
# uninitialized constant Socket::SEEK_HOLE
# uninitialized constant Socket::SEEK_SET
# uninitialized constant Socket::SHARE_DELETE
# uninitialized constant Socket::SYNC
# Did you mean?  Socket::DSYNC
# uninitialized constant Socket::TRUNC
# Did you mean?  TRUE
# uninitialized constant Socket::WRONLY
# Did you mean?  Socket::RDONLY
# wrong constant name <Class:ApiMap>
# wrong constant name <Class:Bundle>
# wrong constant name <Class:BundleNotFoundError>
# wrong constant name <Class:ComplexType>
# wrong constant name <Class:ComplexTypeError>
# wrong constant name <Class:Convention>
# wrong constant name <Class:CoreFills>
# wrong constant name <Class:Diagnostics>
# wrong constant name <Class:DiagnosticsError>
# wrong constant name <Class:Documentor>
# wrong constant name <Class:Environ>
# wrong constant name <Class:FileNotFoundError>
# wrong constant name <Class:InvalidOffsetError>
# wrong constant name <Class:LanguageServer>
# wrong constant name <Class:Library>
# wrong constant name <Class:Location>
# wrong constant name <Class:Logging>
# wrong constant name <Class:Page>
# wrong constant name <Class:Pin>
# wrong constant name <Class:Position>
# wrong constant name <Class:Range>
# wrong constant name <Class:ServerMethods>
# wrong constant name <Class:Shell>
# wrong constant name <Class:Source>
# wrong constant name <Class:SourceMap>
# wrong constant name <Class:SourceNotAvailableError>
# wrong constant name <Class:StdlibFills>
# wrong constant name <Class:TypeChecker>
# wrong constant name <Class:Workspace>
# wrong constant name <Class:WorkspaceTooLargeError>
# wrong constant name <Class:YardMap>
# undefined method `get_complex_type_methods<defaultArg>1' for class `Solargraph::ApiMap'
# undefined method `get_complex_type_methods<defaultArg>2' for class `Solargraph::ApiMap'
# undefined method `get_instance_variable_pins<defaultArg>1' for class `Solargraph::ApiMap'
# undefined method `get_method_stack<defaultArg>1' for class `Solargraph::ApiMap'
# undefined method `get_methods<defaultArg>1' for class `Solargraph::ApiMap'
# undefined method `get_methods<defaultArg>2' for class `Solargraph::ApiMap'
# undefined method `get_methods<defaultArg>3' for class `Solargraph::ApiMap'
# undefined method `initialize<defaultArg>1' for class `Solargraph::ApiMap'
# Did you mean?  initialize_dup
# undefined method `namespace_exists?<defaultArg>1' for class `Solargraph::ApiMap'
# undefined method `qualify<defaultArg>1' for class `Solargraph::ApiMap'
# wrong constant name <Class:BundlerMethods>
# wrong constant name <Class:Cache>
# wrong constant name <Class:SourceToYard>
# wrong constant name <Class:Store>
# wrong constant name bundled?
# wrong constant name catalog
# wrong constant name clip
# wrong constant name clip_at
# wrong constant name cursor_at
# wrong constant name document
# wrong constant name document_symbols
# wrong constant name get_class_variable_pins
# wrong constant name get_complex_type_methods<defaultArg>1
# wrong constant name get_complex_type_methods<defaultArg>2
# wrong constant name get_complex_type_methods
# wrong constant name get_constants
# wrong constant name get_global_variable_pins
# wrong constant name get_instance_variable_pins<defaultArg>1
# wrong constant name get_instance_variable_pins
# wrong constant name get_method_stack<defaultArg>1
# wrong constant name get_method_stack
# wrong constant name get_methods<defaultArg>1
# wrong constant name get_methods<defaultArg>2
# wrong constant name get_methods<defaultArg>3
# wrong constant name get_methods
# wrong constant name get_path_pins
# wrong constant name get_path_suggestions
# wrong constant name get_symbols
# wrong constant name implicit
# wrong constant name index
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name local_path_hash
# wrong constant name locate_pins
# wrong constant name map
# wrong constant name named_macro
# wrong constant name namespace_exists?<defaultArg>1
# wrong constant name namespace_exists?
# wrong constant name namespaces
# wrong constant name pins
# wrong constant name qualify<defaultArg>1
# wrong constant name qualify
# wrong constant name query_symbols
# wrong constant name require_reference_at
# wrong constant name search
# wrong constant name source_map
# wrong constant name source_maps
# wrong constant name super_and_sub?
# wrong constant name unresolved_requires
# wrong constant name workspaced?
# wrong constant name <static-init>
# wrong constant name require_from_bundle
# wrong constant name reset_require_from_bundle
# wrong constant name clear
# wrong constant name empty?
# wrong constant name get_constants
# wrong constant name get_methods
# wrong constant name get_qualified_namespace
# wrong constant name get_receiver_definition
# wrong constant name receiver_defined?
# wrong constant name set_constants
# wrong constant name set_methods
# wrong constant name set_qualified_namespace
# wrong constant name set_receiver_definition
# wrong constant name <static-init>
# wrong constant name code_object_at
# wrong constant name code_object_paths
# wrong constant name rake_yard
# wrong constant name <static-init>
# undefined method `get_constants<defaultArg>1' for class `Solargraph::ApiMap::Store'
# undefined method `get_instance_variables<defaultArg>1' for class `Solargraph::ApiMap::Store'
# undefined method `get_methods<defaultArg>1' for class `Solargraph::ApiMap::Store'
# undefined method `get_methods<defaultArg>2' for class `Solargraph::ApiMap::Store'
# undefined method `initialize<defaultArg>1' for class `Solargraph::ApiMap::Store'
# Did you mean?  initialize_dup
# wrong constant name block_pins
# wrong constant name domains
# wrong constant name get_class_variables
# wrong constant name get_constants<defaultArg>1
# wrong constant name get_constants
# wrong constant name get_extends
# wrong constant name get_includes
# wrong constant name get_instance_variables<defaultArg>1
# wrong constant name get_instance_variables
# wrong constant name get_methods<defaultArg>1
# wrong constant name get_methods<defaultArg>2
# wrong constant name get_methods
# wrong constant name get_path_pins
# wrong constant name get_superclass
# wrong constant name get_symbols
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name method_pins
# wrong constant name named_macros
# wrong constant name namespace_exists?
# wrong constant name namespace_pins
# wrong constant name namespaces
# wrong constant name pins
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name keywords
# wrong constant name load
# undefined method `initialize<defaultArg>1' for class `Solargraph::Bundle'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Bundle'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name opened
# wrong constant name sources
# wrong constant name workspace
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::ComplexType'
# Did you mean?  initialize_dup
# undefined method `qualify<defaultArg>1' for class `Solargraph::ComplexType'
# wrong constant name <Class:TypeMethods>
# wrong constant name <Class:UniqueType>
# wrong constant name []
# wrong constant name all?
# wrong constant name each
# wrong constant name first
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name length
# wrong constant name map
# wrong constant name method_missing
# wrong constant name qualify<defaultArg>1
# wrong constant name qualify
# wrong constant name select
# wrong constant name self_to
# wrong constant name selfy?
# undefined method `qualify<defaultArg>1' for module `Solargraph::ComplexType::TypeMethods'
# wrong constant name ==
# wrong constant name defined?
# wrong constant name duck_type?
# wrong constant name fixed_parameters?
# wrong constant name hash_parameters?
# wrong constant name key_types
# wrong constant name list_parameters?
# wrong constant name name
# wrong constant name namespace
# wrong constant name nil_type?
# wrong constant name parameters?
# wrong constant name qualify<defaultArg>1
# wrong constant name qualify
# wrong constant name rooted?
# wrong constant name scope
# wrong constant name substring
# wrong constant name subtypes
# wrong constant name tag
# wrong constant name undefined?
# wrong constant name value_types
# wrong constant name void?
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::ComplexType::UniqueType'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name self_to
# wrong constant name selfy?
# wrong constant name <static-init>
# undefined singleton method `parse<defaultArg>1' for `Solargraph::ComplexType'
# wrong constant name <static-init>
# wrong constant name parse<defaultArg>1
# wrong constant name parse
# wrong constant name try_parse
# wrong constant name <static-init>
# wrong constant name <Class:Base>
# wrong constant name <Class:Gemfile>
# wrong constant name <Class:Gemspec>
# wrong constant name <Class:Rspec>
# wrong constant name environ
# wrong constant name match?
# wrong constant name process
# wrong constant name <static-init>
# uninitialized constant Solargraph::Convention::Gemfile::EMPTY_ENVIRON
# wrong constant name <static-init>
# uninitialized constant Solargraph::Convention::Gemspec::EMPTY_ENVIRON
# wrong constant name <static-init>
# uninitialized constant Solargraph::Convention::Rspec::EMPTY_ENVIRON
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name for
# wrong constant name register
# wrong constant name <static-init>
# wrong constant name <Class:Base>
# wrong constant name <Class:RequireNotFound>
# wrong constant name <Class:Rubocop>
# wrong constant name <Class:RubocopHelpers>
# wrong constant name <Class:Severities>
# wrong constant name <Class:TypeCheck>
# wrong constant name <Class:UpdateErrors>
# wrong constant name args
# wrong constant name diagnose
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name diagnose
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name find_rubocop_file
# wrong constant name fix_drive_letter
# wrong constant name generate_options
# wrong constant name redirect_stdout
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name register
# wrong constant name reporter
# wrong constant name reporters
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Documentor'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Documentor'
# Did you mean?  initialize_dup
# wrong constant name document
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name specs_from_bundle
# undefined method `initialize<defaultArg>1' for class `Solargraph::Environ'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Environ'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Solargraph::Environ'
# Did you mean?  initialize_dup
# wrong constant name clear
# wrong constant name domains
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name merge
# wrong constant name overrides
# wrong constant name requires
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:CompletionItemKinds>
# wrong constant name <Class:ErrorCodes>
# wrong constant name <Class:Host>
# wrong constant name <Class:Message>
# wrong constant name <Class:MessageTypes>
# wrong constant name <Class:Request>
# wrong constant name <Class:SymbolKinds>
# wrong constant name <Class:Transport>
# wrong constant name <Class:UriHelpers>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `prepare<defaultArg>1' for class `Solargraph::LanguageServer::Host'
# undefined method `references_from<defaultArg>1' for class `Solargraph::LanguageServer::Host'
# undefined method `show_message<defaultArg>1' for class `Solargraph::LanguageServer::Host'
# wrong constant name <Class:Cataloger>
# uninitialized constant Solargraph::LanguageServer::Host::DEFAULT_LOG_LEVEL
# wrong constant name <Class:Diagnoser>
# wrong constant name <Class:Dispatch>
# uninitialized constant Solargraph::LanguageServer::Host::LOG_LEVELS
# wrong constant name <Class:Sources>
# wrong constant name allow_registration
# wrong constant name can_register?
# wrong constant name cancel
# wrong constant name cancel?
# wrong constant name catalog
# wrong constant name change
# wrong constant name clear
# wrong constant name client_capabilities
# wrong constant name client_capabilities=
# wrong constant name close
# wrong constant name completions_at
# wrong constant name configure
# wrong constant name create
# wrong constant name default_configuration
# wrong constant name definitions_at
# wrong constant name delete
# wrong constant name diagnose
# wrong constant name document
# wrong constant name document_symbols
# wrong constant name flush
# wrong constant name folders
# wrong constant name folding_ranges
# wrong constant name locate_pins
# wrong constant name open
# wrong constant name open?
# wrong constant name open_from_disk
# wrong constant name options
# wrong constant name pending_requests
# wrong constant name prepare<defaultArg>1
# wrong constant name prepare
# wrong constant name prepare_folders
# wrong constant name query_symbols
# wrong constant name queue
# wrong constant name read_text
# wrong constant name receive
# wrong constant name references_from<defaultArg>1
# wrong constant name references_from
# wrong constant name register_capabilities
# wrong constant name registered?
# wrong constant name remove
# wrong constant name remove_folders
# wrong constant name search
# wrong constant name send_notification
# wrong constant name send_request
# wrong constant name show_message<defaultArg>1
# wrong constant name show_message
# wrong constant name show_message_request
# wrong constant name signatures_at
# wrong constant name start
# wrong constant name stop
# wrong constant name stopped?
# wrong constant name synchronizing?
# wrong constant name unregister_capabilities
# wrong constant name initialize
# wrong constant name start
# wrong constant name stop
# wrong constant name stopped?
# wrong constant name tick
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name schedule
# wrong constant name start
# wrong constant name stop
# wrong constant name stopped?
# wrong constant name tick
# wrong constant name <static-init>
# wrong constant name explicit_library_for
# wrong constant name generic_library
# wrong constant name generic_library_for
# wrong constant name implicit_library_for
# wrong constant name libraries
# wrong constant name library_for
# wrong constant name sources
# wrong constant name update_libraries
# wrong constant name <static-init>
# wrong constant name async_update
# wrong constant name clear
# wrong constant name close
# wrong constant name find
# wrong constant name include?
# wrong constant name open
# wrong constant name open_from_disk
# wrong constant name start
# wrong constant name stop
# wrong constant name stopped?
# wrong constant name tick
# wrong constant name update
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:Base>
# wrong constant name <Class:CancelRequest>
# wrong constant name <Class:CompletionItem>
# wrong constant name <Class:ExitNotification>
# wrong constant name <Class:Extended>
# wrong constant name <Class:Initialize>
# wrong constant name <Class:Initialized>
# wrong constant name <Class:MethodNotFound>
# wrong constant name <Class:MethodNotImplemented>
# wrong constant name <Class:Shutdown>
# wrong constant name <Class:TextDocument>
# wrong constant name <Class:Workspace>
# wrong constant name error
# wrong constant name host
# wrong constant name id
# wrong constant name initialize
# wrong constant name method
# wrong constant name params
# wrong constant name post_initialize
# wrong constant name process
# wrong constant name request
# wrong constant name result
# wrong constant name send_response
# wrong constant name set_error
# wrong constant name set_result
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:Resolve>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:CheckGemVersion>
# wrong constant name <Class:Document>
# wrong constant name <Class:DocumentGems>
# wrong constant name <Class:DownloadCore>
# wrong constant name <Class:Environment>
# wrong constant name <Class:Search>
# undefined method `initialize<defaultArg>1' for class `Solargraph::LanguageServer::Message::Extended::CheckGemVersion'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::LanguageServer::Message::Extended::CheckGemVersion'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name fetcher
# wrong constant name fetcher=
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:Base>
# wrong constant name <Class:CodeAction>
# wrong constant name <Class:Completion>
# wrong constant name <Class:Definition>
# wrong constant name <Class:DidChange>
# wrong constant name <Class:DidClose>
# wrong constant name <Class:DidOpen>
# wrong constant name <Class:DidSave>
# wrong constant name <Class:DocumentSymbol>
# wrong constant name <Class:FoldingRange>
# wrong constant name <Class:Formatting>
# wrong constant name <Class:Hover>
# wrong constant name <Class:OnTypeFormatting>
# wrong constant name <Class:PrepareRename>
# wrong constant name <Class:References>
# wrong constant name <Class:Rename>
# wrong constant name <Class:SignatureHelp>
# wrong constant name filename
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `empty_result<defaultArg>1' for class `Solargraph::LanguageServer::Message::TextDocument::Completion'
# wrong constant name empty_result<defaultArg>1
# wrong constant name empty_result
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:DidChangeConfiguration>
# wrong constant name <Class:DidChangeWatchedFiles>
# wrong constant name <Class:DidChangeWorkspaceFolders>
# wrong constant name <Class:WorkspaceSymbol>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name register
# wrong constant name select
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name process
# wrong constant name send_response
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <Class:Adapter>
# wrong constant name <Class:DataReader>
# wrong constant name closing
# wrong constant name opening
# wrong constant name receiving
# wrong constant name update
# wrong constant name <static-init>
# wrong constant name receive
# wrong constant name set_message_handler
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name file_to_uri
# wrong constant name uri_to_file
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Library'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Library'
# Did you mean?  initialize_dup
# undefined method `references_from<defaultArg>1' for class `Solargraph::Library'
# uninitialized constant Solargraph::Library::DEFAULT_LOG_LEVEL
# uninitialized constant Solargraph::Library::LOG_LEVELS
# wrong constant name attach
# wrong constant name attached?
# wrong constant name catalog
# wrong constant name close
# wrong constant name completions_at
# wrong constant name contain?
# wrong constant name create
# wrong constant name create_from_disk
# wrong constant name current
# wrong constant name definitions_at
# wrong constant name delete
# wrong constant name detach
# wrong constant name diagnose
# wrong constant name document
# wrong constant name document_symbols
# wrong constant name folding_ranges
# wrong constant name get_path_pins
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name locate_pins
# wrong constant name locate_ref
# wrong constant name merge
# wrong constant name name
# wrong constant name open?
# wrong constant name path_pins
# wrong constant name query_symbols
# wrong constant name read_text
# wrong constant name references_from<defaultArg>1
# wrong constant name references_from
# wrong constant name search
# wrong constant name signatures_at
# wrong constant name synchronized?
# wrong constant name workspace
# undefined singleton method `load<defaultArg>1' for `Solargraph::Library'
# undefined singleton method `load<defaultArg>2' for `Solargraph::Library'
# wrong constant name <static-init>
# wrong constant name load<defaultArg>1
# wrong constant name load<defaultArg>2
# wrong constant name load
# wrong constant name ==
# wrong constant name filename
# wrong constant name initialize
# wrong constant name range
# wrong constant name to_hash
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name logger
# undefined method `initialize<defaultArg>1' for class `Solargraph::Page'
# Did you mean?  initialize_dup
# undefined method `render<defaultArg>1' for class `Solargraph::Page'
# undefined method `render<defaultArg>2' for class `Solargraph::Page'
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name render<defaultArg>1
# wrong constant name render<defaultArg>2
# wrong constant name render
# wrong constant name <static-init>
# wrong constant name select_template
# wrong constant name <Class:Attribute>
# wrong constant name <Class:Base>
# wrong constant name <Class:BaseMethod>
# wrong constant name <Class:BaseVariable>
# wrong constant name <Class:Block>
# wrong constant name <Class:ClassVariable>
# wrong constant name <Class:Closure>
# wrong constant name <Class:Common>
# wrong constant name <Class:Constant>
# wrong constant name <Class:Conversions>
# wrong constant name <Class:Documenting>
# wrong constant name <Class:DuckMethod>
# wrong constant name <Class:GlobalVariable>
# wrong constant name <Class:InstanceVariable>
# wrong constant name <Class:Keyword>
# wrong constant name <Class:KeywordParam>
# wrong constant name <Class:LocalVariable>
# wrong constant name <Class:Localized>
# wrong constant name <Class:Method>
# wrong constant name <Class:MethodAlias>
# wrong constant name <Class:Namespace>
# wrong constant name <Class:Parameter>
# wrong constant name <Class:ProxyType>
# wrong constant name <Class:Reference>
# wrong constant name <Class:Singleton>
# wrong constant name <Class:Symbol>
# wrong constant name <Class:YardPin>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Attribute'
# Did you mean?  initialize_dup
# wrong constant name access
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Base'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::Base'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Solargraph::Pin::Base'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Solargraph::Pin::Base'
# Did you mean?  initialize_dup
# wrong constant name ==
# wrong constant name code_object
# wrong constant name completion_item_kind
# wrong constant name deprecated?
# wrong constant name directives
# wrong constant name docstring
# wrong constant name filename
# wrong constant name identity
# wrong constant name infer
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize
# wrong constant name macros
# wrong constant name maybe_directives?
# wrong constant name nearly?
# wrong constant name probe
# wrong constant name probed=
# wrong constant name probed?
# wrong constant name proxied=
# wrong constant name proxied?
# wrong constant name proxy
# wrong constant name realize
# wrong constant name return_type=
# wrong constant name symbol_kind
# wrong constant name try_merge!
# wrong constant name typify
# wrong constant name variable?
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::BaseMethod'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name parameter_names
# wrong constant name parameters
# wrong constant name visibility
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::BaseVariable'
# Did you mean?  initialize_dup
# uninitialized constant Solargraph::Pin::BaseVariable::NIL_NODE
# wrong constant name assignment
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name nil_assignment?
# wrong constant name signature
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Block'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::Block'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name parameter_names
# wrong constant name parameters
# wrong constant name rebind
# wrong constant name rebound?
# wrong constant name receiver
# wrong constant name <static-init>
# uninitialized constant Solargraph::Pin::ClassVariable::NIL_NODE
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Closure'
# Did you mean?  initialize_dup
# wrong constant name gates
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name scope
# wrong constant name <static-init>
# wrong constant name binder
# wrong constant name closure
# wrong constant name comments
# wrong constant name context
# wrong constant name full_context
# wrong constant name location
# wrong constant name name
# wrong constant name namespace
# wrong constant name path
# wrong constant name return_type
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Constant'
# Did you mean?  initialize_dup
# uninitialized constant Solargraph::Pin::Constant::NIL_NODE
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name visibility
# wrong constant name <static-init>
# wrong constant name completion_item
# wrong constant name detail
# wrong constant name link_documentation
# wrong constant name reset_conversions
# wrong constant name resolve_completion_item
# wrong constant name signature_help
# wrong constant name text_documentation
# wrong constant name <static-init>
# wrong constant name documentation
# wrong constant name <static-init>
# uninitialized constant Solargraph::Pin::DuckMethod::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::Pin::GlobalVariable::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::Pin::InstanceVariable::NIL_NODE
# wrong constant name scope
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::LocalVariable'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::LocalVariable'
# Did you mean?  initialize_dup
# uninitialized constant Solargraph::Pin::LocalVariable::NIL_NODE
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name presence
# wrong constant name visible_at?
# wrong constant name visible_from?
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Method'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::Method'
# Did you mean?  initialize_dup
# uninitialized constant Solargraph::Pin::Method::NIL_NODE
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name node
# wrong constant name overloads
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::MethodAlias'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::MethodAlias'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name original
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Namespace'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::Namespace'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Solargraph::Pin::Namespace'
# Did you mean?  initialize_dup
# wrong constant name domains
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name type
# wrong constant name visibility
# wrong constant name <static-init>
# uninitialized constant Solargraph::Pin::Parameter::NIL_NODE
# wrong constant name index
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::ProxyType'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name anonymous
# wrong constant name <Class:Override>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Reference::Override'
# Did you mean?  initialize_dup
# wrong constant name delete
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name tags
# undefined singleton method `method_return<defaultArg>1' for `Solargraph::Pin::Reference::Override'
# wrong constant name <static-init>
# wrong constant name from_comment
# wrong constant name method_return<defaultArg>1
# wrong constant name method_return
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::Singleton'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::Singleton'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Solargraph::Pin::Singleton'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name visibility
# wrong constant name <static-init>
# wrong constant name <Class:Constant>
# wrong constant name <Class:Method>
# wrong constant name <Class:Namespace>
# wrong constant name <Class:YardMixin>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::YardPin::Constant'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::YardPin::Constant'
# Did you mean?  initialize_dup
# uninitialized constant Solargraph::Pin::YardPin::Constant::NIL_NODE
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::YardPin::Method'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Pin::YardPin::Method'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Solargraph::Pin::YardPin::Method'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Solargraph::Pin::YardPin::Method'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>5' for class `Solargraph::Pin::YardPin::Method'
# Did you mean?  initialize_dup
# uninitialized constant Solargraph::Pin::YardPin::Method::NIL_NODE
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize<defaultArg>5
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Pin::YardPin::Namespace'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name code_object
# wrong constant name comments
# wrong constant name location
# wrong constant name spec
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name ==
# wrong constant name character
# wrong constant name column
# wrong constant name initialize
# wrong constant name line
# wrong constant name to_hash
# wrong constant name <static-init>
# wrong constant name from_offset
# wrong constant name line_char_to_offset
# wrong constant name normalize
# wrong constant name to_offset
# wrong constant name ==
# wrong constant name contain?
# wrong constant name ending
# wrong constant name include?
# wrong constant name initialize
# wrong constant name start
# wrong constant name to_hash
# wrong constant name <static-init>
# wrong constant name from_expr
# wrong constant name from_node
# wrong constant name from_to
# wrong constant name available_port
# wrong constant name <static-init>
# undefined method `config<defaultArg>1' for class `Solargraph::Shell'
# undefined method `download_core<defaultArg>1' for class `Solargraph::Shell'
# undefined method `rdoc<defaultArg>1' for class `Solargraph::Shell'
# uninitialized constant Solargraph::Shell::HELP_MAPPINGS
# uninitialized constant Solargraph::Shell::SHELL_DELEGATED_METHODS
# uninitialized constant Solargraph::Shell::TEMPLATE_EXTNAME
# uninitialized constant Solargraph::Shell::THOR_RESERVED_WORDS
# wrong constant name available_cores
# wrong constant name bundle
# wrong constant name clear
# wrong constant name config<defaultArg>1
# wrong constant name config
# wrong constant name download_core<defaultArg>1
# wrong constant name download_core
# wrong constant name list_cores
# wrong constant name rdoc<defaultArg>1
# wrong constant name rdoc
# wrong constant name reporters
# wrong constant name scan
# wrong constant name socket
# wrong constant name stdio
# wrong constant name typecheck
# wrong constant name uncache
# wrong constant name version
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Source'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Source'
# Did you mean?  initialize_dup
# wrong constant name <Class:Chain>
# wrong constant name <Class:Change>
# wrong constant name <Class:Cursor>
# wrong constant name <Class:EncodingFixes>
# wrong constant name <Class:FlawedBuilder>
# uninitialized constant Solargraph::Source::NIL_NODE
# wrong constant name <Class:NodeChainer>
# wrong constant name <Class:NodeMethods>
# wrong constant name <Class:SourceChainer>
# wrong constant name <Class:Updater>
# wrong constant name associated_comments
# wrong constant name at
# wrong constant name code
# wrong constant name code=
# wrong constant name code_for
# wrong constant name comment_at?
# wrong constant name comments
# wrong constant name comments=
# wrong constant name comments_for
# wrong constant name cursor_at
# wrong constant name error_ranges
# wrong constant name error_ranges=
# wrong constant name filename
# wrong constant name filename=
# wrong constant name finish_synchronize
# wrong constant name folding_ranges
# wrong constant name from_to
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name last_updater
# wrong constant name last_updater=
# wrong constant name location
# wrong constant name node
# wrong constant name node=
# wrong constant name node_at
# wrong constant name parsed=
# wrong constant name parsed?
# wrong constant name references
# wrong constant name repaired
# wrong constant name repaired=
# wrong constant name repaired?
# wrong constant name start_synchronize
# wrong constant name string_at?
# wrong constant name synchronize
# wrong constant name synchronized=
# wrong constant name synchronized?
# wrong constant name tree_at
# wrong constant name version
# wrong constant name version=
# wrong constant name <Class:BlockVariable>
# wrong constant name <Class:Call>
# wrong constant name <Class:ClassVariable>
# wrong constant name <Class:Constant>
# wrong constant name <Class:GlobalVariable>
# wrong constant name <Class:Head>
# wrong constant name <Class:InstanceVariable>
# wrong constant name <Class:Link>
# wrong constant name <Class:Literal>
# wrong constant name <Class:Or>
# wrong constant name <Class:Variable>
# wrong constant name base
# wrong constant name constant?
# wrong constant name define
# wrong constant name defined?
# wrong constant name infer
# wrong constant name initialize
# wrong constant name links
# wrong constant name literal?
# wrong constant name undefined?
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Source::Chain::Call'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Source::Chain::Call'
# Did you mean?  initialize_dup
# wrong constant name arguments
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name with_block?
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Source::Chain::Link'
# Did you mean?  initialize_dup
# wrong constant name ==
# wrong constant name clone_body
# wrong constant name clone_head
# wrong constant name constant?
# wrong constant name head?
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name last_context
# wrong constant name last_context=
# wrong constant name mark_head
# wrong constant name resolve
# wrong constant name undefined?
# wrong constant name word
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `write<defaultArg>1' for class `Solargraph::Source::Change'
# wrong constant name initialize
# wrong constant name new_text
# wrong constant name range
# wrong constant name repair
# wrong constant name write<defaultArg>1
# wrong constant name write
# wrong constant name <static-init>
# wrong constant name argument?
# wrong constant name chain
# wrong constant name comment?
# wrong constant name end_of_word
# wrong constant name filename
# wrong constant name initialize
# wrong constant name node
# wrong constant name node_position
# wrong constant name position
# wrong constant name range
# wrong constant name receiver
# wrong constant name recipient
# wrong constant name recipient_node
# wrong constant name source
# wrong constant name start_of_constant?
# wrong constant name start_of_word
# wrong constant name string?
# wrong constant name word
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name normalize
# wrong constant name <static-init>
# undefined method `initialize<defaultArg>1' for class `Solargraph::Source::NodeChainer'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Source::NodeChainer'
# Did you mean?  initialize_dup
# uninitialized constant Solargraph::Source::NodeChainer::NIL_NODE
# Did you mean?  Solargraph::Source::NIL_NODE
# wrong constant name chain
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# undefined singleton method `chain<defaultArg>1' for `Solargraph::Source::NodeChainer'
# undefined singleton method `chain<defaultArg>2' for `Solargraph::Source::NodeChainer'
# wrong constant name <static-init>
# wrong constant name chain<defaultArg>1
# wrong constant name chain<defaultArg>2
# wrong constant name chain
# wrong constant name load_string
# wrong constant name <static-init>
# wrong constant name const_from
# wrong constant name drill_signature
# wrong constant name get_node_end_position
# wrong constant name get_node_start_position
# wrong constant name infer_literal_node_type
# wrong constant name pack_name
# wrong constant name resolve_node_signature
# wrong constant name returns_from
# wrong constant name unpack_name
# uninitialized constant Solargraph::Source::SourceChainer::NIL_NODE
# Did you mean?  Solargraph::Source::NIL_NODE
# wrong constant name chain
# wrong constant name initialize
# wrong constant name <static-init>
# wrong constant name chain
# undefined method `write<defaultArg>1' for class `Solargraph::Source::Updater'
# wrong constant name changes
# wrong constant name filename
# wrong constant name initialize
# wrong constant name repair
# wrong constant name version
# wrong constant name write<defaultArg>1
# wrong constant name write
# wrong constant name <static-init>
# undefined singleton method `load_string<defaultArg>1' for `Solargraph::Source'
# undefined singleton method `load_string<defaultArg>2' for `Solargraph::Source'
# undefined singleton method `parse<defaultArg>1' for `Solargraph::Source'
# undefined singleton method `parse<defaultArg>2' for `Solargraph::Source'
# undefined singleton method `parse_with_comments<defaultArg>1' for `Solargraph::Source'
# wrong constant name <static-init>
# wrong constant name load
# wrong constant name load_string<defaultArg>1
# wrong constant name load_string<defaultArg>2
# wrong constant name load_string
# wrong constant name parse<defaultArg>1
# wrong constant name parse<defaultArg>2
# wrong constant name parse
# wrong constant name parse_docstring
# wrong constant name parse_with_comments<defaultArg>1
# wrong constant name parse_with_comments
# wrong constant name parser
# wrong constant name <Class:Clip>
# wrong constant name <Class:Completion>
# wrong constant name <Class:Mapper>
# wrong constant name <Class:NodeProcessor>
# wrong constant name <Class:Region>
# wrong constant name code
# wrong constant name cursor_at
# wrong constant name document_symbols
# wrong constant name environ
# wrong constant name filename
# wrong constant name first_pin
# wrong constant name initialize
# wrong constant name locals
# wrong constant name locals_at
# wrong constant name locate_block_pin
# wrong constant name locate_named_path_pin
# wrong constant name locate_pins
# wrong constant name pins
# wrong constant name query_symbols
# wrong constant name references
# wrong constant name requires
# wrong constant name source
# wrong constant name try_merge!
# wrong constant name complete
# wrong constant name define
# wrong constant name gates
# wrong constant name in_block?
# wrong constant name infer
# wrong constant name initialize
# wrong constant name locals
# wrong constant name signify
# wrong constant name <static-init>
# wrong constant name initialize
# wrong constant name pins
# wrong constant name range
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::Mapper::NIL_NODE
# wrong constant name closure_at
# wrong constant name find_directive_line_number
# wrong constant name map
# wrong constant name pins
# wrong constant name process_comment
# wrong constant name process_comment_directives
# wrong constant name process_directive
# wrong constant name remove_inline_comment_hashes
# wrong constant name unmap
# wrong constant name <static-init>
# wrong constant name map
# wrong constant name <Class:AliasNode>
# wrong constant name <Class:ArgsNode>
# wrong constant name <Class:Base>
# wrong constant name <Class:BeginNode>
# wrong constant name <Class:BlockNode>
# wrong constant name <Class:CasgnNode>
# wrong constant name <Class:CvasgnNode>
# wrong constant name <Class:DefNode>
# wrong constant name <Class:DefsNode>
# wrong constant name <Class:GvasgnNode>
# wrong constant name <Class:IvasgnNode>
# wrong constant name <Class:LvasgnNode>
# wrong constant name <Class:NamespaceNode>
# wrong constant name <Class:OrasgnNode>
# wrong constant name <Class:ResbodyNode>
# wrong constant name <Class:SclassNode>
# wrong constant name <Class:SendNode>
# wrong constant name <Class:SymNode>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::AliasNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::ArgsNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::Base::NIL_NODE
# wrong constant name initialize
# wrong constant name locals
# wrong constant name node
# wrong constant name pins
# wrong constant name process
# wrong constant name region
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::BeginNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::BlockNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::CasgnNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::CvasgnNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::DefNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::DefsNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::GvasgnNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::IvasgnNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::LvasgnNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::NamespaceNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::OrasgnNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::ResbodyNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::SclassNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::SendNode::NIL_NODE
# wrong constant name <static-init>
# uninitialized constant Solargraph::SourceMap::NodeProcessor::SymNode::NIL_NODE
# wrong constant name <static-init>
# undefined singleton method `process<defaultArg>1' for `Solargraph::SourceMap::NodeProcessor'
# undefined singleton method `process<defaultArg>2' for `Solargraph::SourceMap::NodeProcessor'
# undefined singleton method `process<defaultArg>3' for `Solargraph::SourceMap::NodeProcessor'
# wrong constant name <static-init>
# wrong constant name process<defaultArg>1
# wrong constant name process<defaultArg>2
# wrong constant name process<defaultArg>3
# wrong constant name process
# undefined method `initialize<defaultArg>1' for class `Solargraph::SourceMap::Region'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::SourceMap::Region'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Solargraph::SourceMap::Region'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>4' for class `Solargraph::SourceMap::Region'
# Did you mean?  initialize_dup
# undefined method `update<defaultArg>1' for class `Solargraph::SourceMap::Region'
# undefined method `update<defaultArg>2' for class `Solargraph::SourceMap::Region'
# undefined method `update<defaultArg>3' for class `Solargraph::SourceMap::Region'
# wrong constant name closure
# wrong constant name code_for
# wrong constant name filename
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize<defaultArg>4
# wrong constant name initialize
# wrong constant name scope
# wrong constant name source
# wrong constant name update<defaultArg>1
# wrong constant name update<defaultArg>2
# wrong constant name update<defaultArg>3
# wrong constant name update
# wrong constant name visibility
# wrong constant name <static-init>
# undefined singleton method `load_string<defaultArg>1' for `Solargraph::SourceMap'
# wrong constant name <static-init>
# wrong constant name load
# wrong constant name load_string<defaultArg>1
# wrong constant name load_string
# wrong constant name map
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name get
# undefined method `initialize<defaultArg>1' for class `Solargraph::TypeChecker'
# Did you mean?  initialize_dup
# wrong constant name <Class:ParamDef>
# wrong constant name <Class:Problem>
# wrong constant name filename
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name param_type_problems
# wrong constant name return_type_problems
# wrong constant name strict_type_problems
# wrong constant name initialize
# wrong constant name name
# wrong constant name type
# wrong constant name <static-init>
# wrong constant name from
# undefined method `initialize<defaultArg>1' for class `Solargraph::TypeChecker::Problem'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::TypeChecker::Problem'
# Did you mean?  initialize_dup
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name location
# wrong constant name message
# wrong constant name pin
# wrong constant name suggestion
# wrong constant name <static-init>
# undefined singleton method `load_string<defaultArg>1' for `Solargraph::TypeChecker'
# wrong constant name <static-init>
# wrong constant name load
# wrong constant name load_string<defaultArg>1
# wrong constant name load_string
# undefined method `initialize<defaultArg>1' for class `Solargraph::Workspace'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::Workspace'
# Did you mean?  initialize_dup
# wrong constant name <Class:Config>
# wrong constant name config
# wrong constant name directory
# wrong constant name filenames
# wrong constant name gemnames
# wrong constant name gemspec?
# wrong constant name gemspecs
# wrong constant name has_file?
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize
# wrong constant name merge
# wrong constant name remove
# wrong constant name require_paths
# wrong constant name source
# wrong constant name sources
# wrong constant name synchronize!
# wrong constant name would_merge?
# wrong constant name would_require?
# undefined method `initialize<defaultArg>1' for class `Solargraph::Workspace::Config'
# Did you mean?  initialize_dup
# wrong constant name allow?
# wrong constant name calculated
# wrong constant name directory
# wrong constant name domains
# wrong constant name excluded
# wrong constant name included
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name max_files
# wrong constant name raw_data
# wrong constant name reporters
# wrong constant name require_paths
# wrong constant name required
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# undefined method `change<defaultArg>1' for class `Solargraph::YardMap'
# undefined method `initialize<defaultArg>1' for class `Solargraph::YardMap'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Solargraph::YardMap'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Solargraph::YardMap'
# Did you mean?  initialize_dup
# wrong constant name <Class:Cache>
# wrong constant name <Class:CoreDocs>
# wrong constant name <Class:CoreGen>
# wrong constant name <Class:Mapper>
# wrong constant name <Class:RdocToYard>
# wrong constant name change<defaultArg>1
# wrong constant name change
# wrong constant name core_pins
# wrong constant name gemset
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name load_yardoc
# wrong constant name path_pin
# wrong constant name pins
# wrong constant name require_reference
# wrong constant name required
# wrong constant name unresolved_requires
# wrong constant name with_dependencies=
# wrong constant name with_dependencies?
# wrong constant name yardocs
# wrong constant name get_path_pins
# wrong constant name set_path_pins
# wrong constant name <static-init>
# undefined singleton method `best_download<defaultArg>1' for `Solargraph::YardMap::CoreDocs'
# undefined singleton method `yardoc_file<defaultArg>1' for `Solargraph::YardMap::CoreDocs'
# undefined singleton method `yardoc_stdlib_file<defaultArg>1' for `Solargraph::YardMap::CoreDocs'
# wrong constant name <static-init>
# wrong constant name available
# wrong constant name best_download<defaultArg>1
# wrong constant name best_download
# wrong constant name best_match
# wrong constant name cache_dir
# wrong constant name clear
# wrong constant name download
# wrong constant name require_minimum
# wrong constant name valid?
# wrong constant name versions
# wrong constant name yardoc_file<defaultArg>1
# wrong constant name yardoc_file
# wrong constant name yardoc_stdlib_file<defaultArg>1
# wrong constant name yardoc_stdlib_file
# undefined singleton method `generate_gzip<defaultArg>1' for `Solargraph::YardMap::CoreGen'
# undefined singleton method `generate_gzip<defaultArg>2' for `Solargraph::YardMap::CoreGen'
# wrong constant name <static-init>
# wrong constant name generate_docs
# wrong constant name generate_gzip<defaultArg>1
# wrong constant name generate_gzip<defaultArg>2
# wrong constant name generate_gzip
# undefined method `initialize<defaultArg>1' for class `Solargraph::YardMap::Mapper'
# Did you mean?  initialize_dup
# wrong constant name generate_pins
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name map
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name base_name
# wrong constant name commentary
# wrong constant name find_file
# wrong constant name locate
# wrong constant name run
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name logger
# wrong constant name with_clean_env
# wrong constant name <Class:ConstantEntry>
# wrong constant name all_module_aliases
# wrong constant name all_module_names
# wrong constant name all_named_modules
# wrong constant name class_by_name
# wrong constant name name_by_class
# uninitialized constant Sorbet::Private::ConstantLookupCache::ConstantEntry::Elem
# wrong constant name aliases
# wrong constant name aliases=
# wrong constant name const
# wrong constant name const=
# wrong constant name const_name
# wrong constant name const_name=
# wrong constant name found_name
# wrong constant name found_name=
# wrong constant name owner
# wrong constant name owner=
# wrong constant name primary_name
# wrong constant name primary_name=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name main
# wrong constant name output_file
# wrong constant name <static-init>
# wrong constant name fetch_sorbet_typed
# wrong constant name main
# wrong constant name matching_version_directories
# wrong constant name output_file
# wrong constant name paths_for_gem_version
# wrong constant name paths_for_ruby_version
# wrong constant name vendor_rbis_within_paths
# wrong constant name <static-init>
# wrong constant name main
# wrong constant name output_file
# wrong constant name paths_within_gem_sources
# wrong constant name <Class:ClassDefinition>
# wrong constant name <Class:TracepointSerializer>
# wrong constant name <Class:Tracer>
# uninitialized constant Sorbet::Private::GemGeneratorTracepoint::ClassDefinition::Elem
# wrong constant name defs
# wrong constant name defs=
# wrong constant name id
# wrong constant name id=
# wrong constant name klass
# wrong constant name klass=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name initialize
# wrong constant name serialize
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name add_to_context
# wrong constant name disable_tracepoints
# wrong constant name finish
# wrong constant name install_tracepoints
# wrong constant name on_method_added
# wrong constant name on_module_created
# wrong constant name on_module_extended
# wrong constant name on_module_included
# wrong constant name pre_cache_module_methods
# wrong constant name register_delegate_class
# wrong constant name start
# wrong constant name trace
# wrong constant name trace_results
# undefined singleton method `main<defaultArg>1' for `Sorbet::Private::GemGeneratorTracepoint'
# wrong constant name <static-init>
# wrong constant name main<defaultArg>1
# wrong constant name main
# wrong constant name output_file
# wrong constant name <static-init>
# wrong constant name my_require
# wrong constant name require_all_gems
# wrong constant name require_gem
# wrong constant name all_modules_and_aliases
# wrong constant name capture_stderr
# wrong constant name constant_cache
# wrong constant name gen_source_rbi
# wrong constant name looks_like_stub_name
# wrong constant name main
# wrong constant name mk_dir
# wrong constant name read_constants
# wrong constant name real_name
# wrong constant name require_everything
# wrong constant name rm_dir
# wrong constant name serialize_alias
# wrong constant name serialize_class
# wrong constant name serialize_constants
# wrong constant name symbols_id_to_name
# wrong constant name write_constants
# wrong constant name write_diff
# wrong constant name <static-init>
# wrong constant name main
# wrong constant name output_file
# wrong constant name <static-init>
# wrong constant name cyan
# wrong constant name emojify
# wrong constant name init
# wrong constant name main
# wrong constant name make_step
# wrong constant name usage
# wrong constant name yellow
# wrong constant name <static-init>
# wrong constant name real_ancestors
# wrong constant name real_autoload?
# wrong constant name real_const_get
# wrong constant name real_constants
# wrong constant name real_eqeq
# wrong constant name real_hash
# wrong constant name real_instance_methods
# wrong constant name real_is_a?
# wrong constant name real_method
# wrong constant name real_name
# wrong constant name real_object_id
# wrong constant name real_private_instance_methods
# wrong constant name real_singleton_class
# wrong constant name real_singleton_methods
# wrong constant name real_spaceship
# wrong constant name real_superclass
# wrong constant name <static-init>
# wrong constant name excluded_rails_files
# wrong constant name load_bundler
# wrong constant name load_rails
# wrong constant name my_require
# wrong constant name patch_kernel
# wrong constant name rails?
# wrong constant name rails_load_paths
# wrong constant name rb_file_paths
# wrong constant name require_all_files
# wrong constant name require_everything
# undefined method `serialize_method<defaultArg>1' for class `Sorbet::Private::Serialize'
# undefined method `serialize_method<defaultArg>2' for class `Sorbet::Private::Serialize'
# wrong constant name alias
# wrong constant name ancestor_has_method
# wrong constant name blacklisted_method
# wrong constant name class_or_module
# wrong constant name comparable?
# wrong constant name constant
# wrong constant name from_method
# wrong constant name initialize
# wrong constant name serialize_method<defaultArg>1
# wrong constant name serialize_method<defaultArg>2
# wrong constant name serialize_method
# wrong constant name serialize_sig
# wrong constant name to_sig
# wrong constant name valid_class_name
# wrong constant name valid_method_name
# undefined singleton method `header<defaultArg>1' for `Sorbet::Private::Serialize'
# undefined singleton method `header<defaultArg>2' for `Sorbet::Private::Serialize'
# wrong constant name <static-init>
# wrong constant name header<defaultArg>1
# wrong constant name header<defaultArg>2
# wrong constant name header
# uninitialized constant Sorbet::Private::Static
# Did you mean?  Sorbet::Private::Status
# uninitialized constant Sorbet::Private::Static
# Did you mean?  Sorbet::Private::Status
# undefined singleton method `say<defaultArg>1' for `Sorbet::Private::Status'
# wrong constant name <static-init>
# wrong constant name done
# wrong constant name say<defaultArg>1
# wrong constant name say
# wrong constant name <static-init>
# wrong constant name main
# wrong constant name output_file
# wrong constant name <static-init>
# wrong constant name main
# wrong constant name output_file
# wrong constant name suggest_typed
# wrong constant name <static-init>
# wrong constant name main
# wrong constant name output_file
# uninitialized constant SortedSet::InspectKey
# wrong constant name initialize
# wrong constant name setup
# wrong constant name result
# wrong constant name []=
# wrong constant name blank?
# wrong constant name casecmp?
# wrong constant name each_grapheme_cluster
# wrong constant name encode!
# wrong constant name grapheme_clusters
# wrong constant name reverse!
# wrong constant name shell_split
# wrong constant name shellescape
# wrong constant name shellsplit
# wrong constant name succ!
# wrong constant name undump
# wrong constant name unicode_normalize
# wrong constant name unicode_normalize!
# wrong constant name unicode_normalized?
# wrong constant name unpack1
# wrong constant name length
# wrong constant name truncate
# wrong constant name <<
# wrong constant name []
# wrong constant name beginning_of_line?
# wrong constant name bol?
# wrong constant name captures
# wrong constant name charpos
# wrong constant name check
# wrong constant name check_until
# wrong constant name clear
# wrong constant name concat
# wrong constant name empty?
# wrong constant name exist?
# wrong constant name get_byte
# wrong constant name getbyte
# wrong constant name initialize
# wrong constant name match?
# wrong constant name matched
# wrong constant name matched?
# wrong constant name matched_size
# wrong constant name peek
# wrong constant name peep
# wrong constant name pointer
# wrong constant name pointer=
# wrong constant name pos
# wrong constant name pos=
# wrong constant name post_match
# wrong constant name pre_match
# wrong constant name reset
# wrong constant name rest
# wrong constant name rest?
# wrong constant name rest_size
# wrong constant name restsize
# wrong constant name scan_full
# wrong constant name scan_until
# wrong constant name search_full
# wrong constant name size
# wrong constant name skip
# wrong constant name skip_until
# wrong constant name string
# wrong constant name string=
# wrong constant name terminate
# wrong constant name unscan
# wrong constant name values_at
# wrong constant name must_C_version
# wrong constant name <Class:HTMLElementDescription>
# wrong constant name []
# wrong constant name []=
# wrong constant name dig
# wrong constant name each_pair
# wrong constant name filter
# wrong constant name length
# wrong constant name members
# wrong constant name select
# wrong constant name size
# wrong constant name to_a
# wrong constant name to_h
# wrong constant name values
# wrong constant name values_at
# uninitialized constant Struct::HTMLElementDescription::Elem
# wrong constant name attrs_depr
# wrong constant name attrs_depr=
# wrong constant name attrs_opt
# wrong constant name attrs_opt=
# wrong constant name attrs_req
# wrong constant name attrs_req=
# wrong constant name defaultsubelt
# wrong constant name defaultsubelt=
# wrong constant name depr
# wrong constant name depr=
# wrong constant name desc
# wrong constant name desc=
# wrong constant name dtd
# wrong constant name dtd=
# wrong constant name empty
# wrong constant name empty=
# wrong constant name endTag
# wrong constant name endTag=
# wrong constant name isinline
# wrong constant name isinline=
# wrong constant name name
# wrong constant name name=
# wrong constant name saveEndTag
# wrong constant name saveEndTag=
# wrong constant name startTag
# wrong constant name startTag=
# wrong constant name subelts
# wrong constant name subelts=
# wrong constant name <static-init>
# wrong constant name []
# wrong constant name members
# wrong constant name <Class:Struct>
# wrong constant name errno
# wrong constant name status
# wrong constant name success?
# wrong constant name T.noreturn
# wrong constant name T.noreturn
# wrong constant name T.untyped
# undefined method `close<defaultArg>1' for class `Tempfile'
# undefined method `initialize<defaultArg>1' for class `Tempfile'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for class `Tempfile'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for class `Tempfile'
# Did you mean?  initialize_dup
# wrong constant name <Class:Remover>
# wrong constant name _close
# wrong constant name close<defaultArg>1
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name inspect
# wrong constant name call
# wrong constant name initialize
# wrong constant name <static-init>
# undefined method `help<defaultArg>1' for class `Thor'
# undefined method `help<defaultArg>2' for class `Thor'
# wrong constant name <Class:Base>
# wrong constant name <Class:Invocation>
# uninitialized constant Thor::SHELL_DELEGATED_METHODS
# wrong constant name <Class:Shell>
# wrong constant name help<defaultArg>1
# wrong constant name help<defaultArg>2
# wrong constant name help
# undefined method `initialize<defaultArg>1' for module `Thor::Base'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for module `Thor::Base'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for module `Thor::Base'
# Did you mean?  initialize_dup
# wrong constant name args
# wrong constant name args=
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name options
# wrong constant name options=
# wrong constant name parent_options
# wrong constant name parent_options=
# wrong constant name <static-init>
# wrong constant name included
# wrong constant name register_klass_file
# wrong constant name shell
# wrong constant name shell=
# wrong constant name subclass_files
# wrong constant name subclasses
# undefined method `_retrieve_class_and_command<defaultArg>1' for module `Thor::Invocation'
# undefined method `_retrieve_class_and_task<defaultArg>1' for module `Thor::Invocation'
# undefined method `initialize<defaultArg>1' for module `Thor::Invocation'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for module `Thor::Invocation'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for module `Thor::Invocation'
# Did you mean?  initialize_dup
# undefined method `invoke<defaultArg>1' for module `Thor::Invocation'
# wrong constant name _parse_initialization_options
# wrong constant name _retrieve_class_and_command<defaultArg>1
# wrong constant name _retrieve_class_and_command
# wrong constant name _retrieve_class_and_task<defaultArg>1
# wrong constant name _retrieve_class_and_task
# wrong constant name _shared_configuration
# wrong constant name current_command_chain
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name invoke<defaultArg>1
# wrong constant name invoke
# wrong constant name invoke_all
# wrong constant name invoke_command
# wrong constant name invoke_task
# wrong constant name invoke_with_padding
# wrong constant name <static-init>
# wrong constant name included
# undefined method `initialize<defaultArg>1' for module `Thor::Shell'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>2' for module `Thor::Shell'
# Did you mean?  initialize_dup
# undefined method `initialize<defaultArg>3' for module `Thor::Shell'
# Did you mean?  initialize_dup
# wrong constant name _shared_configuration
# wrong constant name ask
# wrong constant name error
# wrong constant name file_collision
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize<defaultArg>2
# wrong constant name initialize<defaultArg>3
# wrong constant name initialize
# wrong constant name no?
# wrong constant name print_in_columns
# wrong constant name print_table
# wrong constant name print_wrapped
# wrong constant name say
# wrong constant name say_status
# wrong constant name set_color
# wrong constant name shell
# wrong constant name shell=
# wrong constant name terminal_width
# wrong constant name with_padding
# wrong constant name yes?
# wrong constant name <static-init>
# undefined singleton method `banner<defaultArg>1' for `Thor'
# undefined singleton method `banner<defaultArg>2' for `Thor'
# undefined singleton method `check_unknown_options!<defaultArg>1' for `Thor'
# undefined singleton method `default_command<defaultArg>1' for `Thor'
# undefined singleton method `default_task<defaultArg>1' for `Thor'
# undefined singleton method `desc<defaultArg>1' for `Thor'
# undefined singleton method `help<defaultArg>1' for `Thor'
# undefined singleton method `long_desc<defaultArg>1' for `Thor'
# undefined singleton method `map<defaultArg>1' for `Thor'
# undefined singleton method `method_option<defaultArg>1' for `Thor'
# undefined singleton method `method_options<defaultArg>1' for `Thor'
# undefined singleton method `option<defaultArg>1' for `Thor'
# undefined singleton method `options<defaultArg>1' for `Thor'
# undefined singleton method `package_name<defaultArg>1' for `Thor'
# undefined singleton method `printable_commands<defaultArg>1' for `Thor'
# undefined singleton method `printable_commands<defaultArg>2' for `Thor'
# undefined singleton method `printable_tasks<defaultArg>1' for `Thor'
# undefined singleton method `printable_tasks<defaultArg>2' for `Thor'
# undefined singleton method `register<defaultArg>1' for `Thor'
# wrong constant name <static-init>
# wrong constant name banner<defaultArg>1
# wrong constant name banner<defaultArg>2
# wrong constant name banner
# wrong constant name check_unknown_options!<defaultArg>1
# wrong constant name check_unknown_options!
# wrong constant name command_help
# wrong constant name default_command<defaultArg>1
# wrong constant name default_command
# wrong constant name default_task<defaultArg>1
# wrong constant name default_task
# wrong constant name deprecation_warning
# wrong constant name desc<defaultArg>1
# wrong constant name desc
# wrong constant name disable_required_check
# wrong constant name disable_required_check!
# wrong constant name disable_required_check?
# wrong constant name dispatch
# wrong constant name dynamic_command_class
# wrong constant name find_command_possibilities
# wrong constant name find_task_possibilities
# wrong constant name help<defaultArg>1
# wrong constant name help
# wrong constant name long_desc<defaultArg>1
# wrong constant name long_desc
# wrong constant name map<defaultArg>1
# wrong constant name map
# wrong constant name method_option<defaultArg>1
# wrong constant name method_option
# wrong constant name method_options<defaultArg>1
# wrong constant name method_options
# wrong constant name normalize_command_name
# wrong constant name normalize_task_name
# wrong constant name option<defaultArg>1
# wrong constant name option
# wrong constant name options<defaultArg>1
# wrong constant name options
# wrong constant name package_name<defaultArg>1
# wrong constant name package_name
# wrong constant name printable_commands<defaultArg>1
# wrong constant name printable_commands<defaultArg>2
# wrong constant name printable_commands
# wrong constant name printable_tasks<defaultArg>1
# wrong constant name printable_tasks<defaultArg>2
# wrong constant name printable_tasks
# wrong constant name register<defaultArg>1
# wrong constant name register
# wrong constant name retrieve_command_name
# wrong constant name retrieve_task_name
# wrong constant name stop_on_unknown_option
# wrong constant name stop_on_unknown_option!
# wrong constant name stop_on_unknown_option?
# wrong constant name subcommand
# wrong constant name subcommand_classes
# wrong constant name subcommand_help
# wrong constant name subcommands
# wrong constant name subtask
# wrong constant name subtask_help
# wrong constant name subtasks
# wrong constant name task_help
# undefined method `enable<defaultArg>1' for class `TracePoint'
# undefined method `enable<defaultArg>2' for class `TracePoint'
# wrong constant name __enable
# wrong constant name enable<defaultArg>1
# wrong constant name enable<defaultArg>2
# wrong constant name eval_script
# wrong constant name event
# wrong constant name instruction_sequence
# wrong constant name parameters
# wrong constant name <Class:File>
# wrong constant name decode
# wrong constant name encode
# wrong constant name escape
# wrong constant name unescape
# wrong constant name set_typecode
# wrong constant name typecode
# wrong constant name typecode=
# undefined singleton method `new2<defaultArg>1' for `URI::FTP'
# undefined singleton method `new2<defaultArg>2' for `URI::FTP'
# wrong constant name new2<defaultArg>1
# wrong constant name new2<defaultArg>2
# wrong constant name new2
# uninitialized constant URI::File::ABS_PATH
# Did you mean?  URI::ABS_PATH
# uninitialized constant URI::File::ABS_URI
# Did you mean?  URI::ABS_URI
# uninitialized constant URI::File::ABS_URI_REF
# Did you mean?  URI::ABS_URI_REF
# uninitialized constant URI::File::DEFAULT_PARSER
# Did you mean?  URI::File::DEFAULT_PORT
#                URI::DEFAULT_PARSER
# uninitialized constant URI::File::ESCAPED
# Did you mean?  URI::File::Escape
#                URI::Escape
#                URI::ESCAPED
# uninitialized constant URI::File::FRAGMENT
# Did you mean?  URI::FRAGMENT
# uninitialized constant URI::File::HOST
# Did you mean?  URI::HOST
# uninitialized constant URI::File::OPAQUE
# Did you mean?  URI::OPAQUE
# uninitialized constant URI::File::PORT
# Did you mean?  URI::PORT
# uninitialized constant URI::File::QUERY
# Did you mean?  URI::QUERY
# uninitialized constant URI::File::REGISTRY
# Did you mean?  URI::REGISTRY
# uninitialized constant URI::File::REL_PATH
# Did you mean?  URI::REL_PATH
# uninitialized constant URI::File::REL_URI
# Did you mean?  URI::REL_URI
# uninitialized constant URI::File::REL_URI_REF
# Did you mean?  URI::REL_URI_REF
# uninitialized constant URI::File::RFC3986_PARSER
# Did you mean?  URI::File::RFC3986_Parser
#                URI::RFC3986_Parser
#                URI::RFC2396_Parser
#                URI::File::RFC2396_Parser
#                URI::RFC3986_PARSER
# uninitialized constant URI::File::SCHEME
# Did you mean?  URI::SCHEME
# uninitialized constant URI::File::TBLDECWWWCOMP_
# Did you mean?  URI::File::TBLENCWWWCOMP_
#                URI::TBLDECWWWCOMP_
#                URI::TBLENCWWWCOMP_
# uninitialized constant URI::File::TBLENCWWWCOMP_
# Did you mean?  URI::File::TBLDECWWWCOMP_
#                URI::TBLDECWWWCOMP_
#                URI::TBLENCWWWCOMP_
# uninitialized constant URI::File::UNSAFE
# Did you mean?  URI::UNSAFE
# uninitialized constant URI::File::URI_REF
# Did you mean?  URI::URI_REF
# uninitialized constant URI::File::USERINFO
# Did you mean?  URI::USERINFO
# uninitialized constant URI::File::USE_REGISTRY
# uninitialized constant URI::File::VERSION
# Did you mean?  URI::VERSION
# uninitialized constant URI::File::VERSION_CODE
# Did you mean?  URI::VERSION_CODE
# uninitialized constant URI::File::WEB_ENCODINGS_
# Did you mean?  URI::WEB_ENCODINGS_
# wrong constant name check_password
# wrong constant name check_user
# wrong constant name check_userinfo
# wrong constant name set_userinfo
# wrong constant name <static-init>
# wrong constant name attributes
# wrong constant name attributes=
# wrong constant name dn
# wrong constant name dn=
# wrong constant name extensions
# wrong constant name extensions=
# wrong constant name filter
# wrong constant name filter=
# wrong constant name initialize
# wrong constant name scope
# wrong constant name scope=
# wrong constant name set_attributes
# wrong constant name set_dn
# wrong constant name set_extensions
# wrong constant name set_filter
# wrong constant name set_scope
# wrong constant name headers
# wrong constant name headers=
# wrong constant name initialize
# wrong constant name set_headers
# wrong constant name set_to
# wrong constant name to
# wrong constant name to=
# wrong constant name to_mailtext
# wrong constant name to_rfc822text
# undefined method `escape<defaultArg>1' for class `URI::RFC2396_Parser'
# undefined method `extract<defaultArg>1' for class `URI::RFC2396_Parser'
# undefined method `initialize<defaultArg>1' for class `URI::RFC2396_Parser'
# Did you mean?  initialize_dup
# undefined method `make_regexp<defaultArg>1' for class `URI::RFC2396_Parser'
# undefined method `unescape<defaultArg>1' for class `URI::RFC2396_Parser'
# wrong constant name escape<defaultArg>1
# wrong constant name escape
# wrong constant name extract<defaultArg>1
# wrong constant name extract
# wrong constant name initialize<defaultArg>1
# wrong constant name initialize
# wrong constant name join
# wrong constant name make_regexp<defaultArg>1
# wrong constant name make_regexp
# wrong constant name parse
# wrong constant name pattern
# wrong constant name regexp
# wrong constant name split
# wrong constant name unescape<defaultArg>1
# wrong constant name unescape
# wrong constant name join
# wrong constant name parse
# wrong constant name regexp
# wrong constant name split
# wrong constant name make_components_hash
# undefined singleton method `extract<defaultArg>1' for `URI'
# undefined singleton method `regexp<defaultArg>1' for `URI'
# wrong constant name extract<defaultArg>1
# wrong constant name get_encoding
# wrong constant name regexp<defaultArg>1
# wrong constant name clone
# wrong constant name original_name
# wrong constant name tag
# wrong constant name value
# wrong constant name <Class:DisplayWidth>
# undefined singleton method `emoji_extra_width_of<defaultArg>1' for `Unicode::DisplayWidth'
# undefined singleton method `emoji_extra_width_of<defaultArg>2' for `Unicode::DisplayWidth'
# undefined singleton method `emoji_extra_width_of<defaultArg>3' for `Unicode::DisplayWidth'
# undefined singleton method `of<defaultArg>1' for `Unicode::DisplayWidth'
# undefined singleton method `of<defaultArg>2' for `Unicode::DisplayWidth'
# undefined singleton method `of<defaultArg>3' for `Unicode::DisplayWidth'
# wrong constant name <static-init>
# wrong constant name emoji_extra_width_of<defaultArg>1
# wrong constant name emoji_extra_width_of<defaultArg>2
# wrong constant name emoji_extra_width_of<defaultArg>3
# wrong constant name emoji_extra_width_of
# wrong constant name of<defaultArg>1
# wrong constant name of<defaultArg>2
# wrong constant name of<defaultArg>3
# wrong constant name of
# wrong constant name <static-init>
# wrong constant name <static-init>
# uninitialized constant WEBrick
# uninitialized constant WEBrick
# wrong constant name warn
# wrong constant name <Class:BufError>
# wrong constant name <Class:DataError>
# wrong constant name <Class:Deflate>
# wrong constant name <Class:Error>
# wrong constant name <Class:GzipFile>
# wrong constant name <Class:GzipReader>
# wrong constant name <Class:GzipWriter>
# wrong constant name <Class:Inflate>
# wrong constant name <Class:MemError>
# wrong constant name <Class:NeedDict>
# wrong constant name <Class:StreamEnd>
# wrong constant name <Class:StreamError>
# wrong constant name <Class:VersionError>
# wrong constant name <Class:ZStream>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <<
# wrong constant name deflate
# wrong constant name flush
# wrong constant name initialize
# wrong constant name params
# wrong constant name set_dictionary
# wrong constant name <static-init>
# wrong constant name deflate
# wrong constant name <static-init>
# wrong constant name <Class:CRCError>
# wrong constant name <Class:Error>
# wrong constant name <Class:LengthError>
# wrong constant name <Class:NoFooter>
# wrong constant name close
# wrong constant name closed?
# wrong constant name comment
# wrong constant name crc
# wrong constant name finish
# wrong constant name level
# wrong constant name mtime
# wrong constant name orig_name
# wrong constant name os_code
# wrong constant name sync
# wrong constant name sync=
# wrong constant name to_io
# wrong constant name <static-init>
# wrong constant name input
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name wrap
# uninitialized constant Zlib::GzipReader::Elem
# wrong constant name bytes
# wrong constant name each
# wrong constant name each_byte
# wrong constant name each_char
# wrong constant name each_line
# wrong constant name eof
# wrong constant name eof?
# wrong constant name external_encoding
# wrong constant name getbyte
# wrong constant name getc
# wrong constant name initialize
# wrong constant name lineno
# wrong constant name lineno=
# wrong constant name lines
# wrong constant name pos
# wrong constant name read
# wrong constant name readbyte
# wrong constant name readchar
# wrong constant name readpartial
# wrong constant name rewind
# wrong constant name tell
# wrong constant name ungetbyte
# wrong constant name ungetc
# wrong constant name unused
# wrong constant name <static-init>
# wrong constant name <<
# wrong constant name comment=
# wrong constant name flush
# wrong constant name initialize
# wrong constant name mtime=
# wrong constant name orig_name=
# wrong constant name pos
# wrong constant name tell
# wrong constant name write
# wrong constant name <static-init>
# wrong constant name <<
# wrong constant name add_dictionary
# wrong constant name inflate
# wrong constant name initialize
# wrong constant name set_dictionary
# wrong constant name sync
# wrong constant name sync_point?
# wrong constant name <static-init>
# wrong constant name inflate
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name adler
# wrong constant name avail_in
# wrong constant name avail_out
# wrong constant name avail_out=
# wrong constant name close
# wrong constant name closed?
# wrong constant name data_type
# wrong constant name end
# wrong constant name ended?
# wrong constant name finish
# wrong constant name finished?
# wrong constant name flush_next_in
# wrong constant name flush_next_out
# wrong constant name reset
# wrong constant name stream_end?
# wrong constant name total_in
# wrong constant name total_out
# wrong constant name <static-init>
# wrong constant name <static-init>
# wrong constant name adler32
# wrong constant name adler32_combine
# wrong constant name crc32
# wrong constant name crc32_combine
# wrong constant name crc_table
# wrong constant name deflate
# wrong constant name gunzip
# wrong constant name gzip
# wrong constant name inflate
# wrong constant name zlib_version
